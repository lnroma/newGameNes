ca65 V2.18 - N/A
Main file   : newGame.asm
Current file: newGame.asm

000000r 1               .debuginfo on
000000r 1               .include "./lib/player.asm"
000000r 2               .segment "ZEROPAGE"
000000r 2               
000000r 2               .segment "RODATA"
000000r 2                 lifesBytes:
000000r 2  00 08 10 17  	.byt $00, $08, $10, $17
000004r 2               
000004r 2               .segment "CODE"
000000r 2               
000000r 2               .proc firstProcPlayer
000000r 2  60               RTS
000001r 2               .endproc
000001r 2               
000001r 2               .proc setHeroVar
000001r 2  A9 64          lda #100
000003r 2  8D rr rr       sta heroXCoordinate
000006r 2  A9 00          lda #$00
000008r 2  8D rr rr       sta buttons
00000Br 2  8D rr rr       sta offsetColumn
00000Er 2  A9 C8          lda #200
000010r 2  8D rr rr       sta heroYCoordinate
000013r 2  8D rr rr       sta lastPositionY
000016r 2  A9 04          lda #04
000018r 2  8D rr rr       sta lifes
00001Br 2  A9 01          lda #01
00001Dr 2  8D rr rr       sta isGravity
000020r 2  A9 00          lda #00
000022r 2  8D rr rr       sta frameCountPlayerRightWalk
000025r 2  A9 00          lda #00
000027r 2  8D rr rr       sta jumpHeight
00002Ar 2               
00002Ar 2  60             rts
00002Br 2               .endproc
00002Br 2               
00002Br 2               .proc playerHundler
00002Br 2  20 rr rr        JSR checkCollide
00002Er 2  60              RTS
00002Fr 2               .endproc
00002Fr 2               
00002Fr 2               .proc fixScroll
00002Fr 2  A9 00           lda #00
000031r 2  8D rr rr        sta screenCount
000034r 2  A9 00           lda #$00
000036r 2  8D rr rr        sta nameTable
000039r 2  A9 00           lda #00
00003Br 2  8D rr rr        sta scrollPosition
00003Er 2               
00003Er 2  60              RTS
00003Fr 2               .endproc
00003Fr 2               
00003Fr 2               .proc scrolling
00003Fr 2  48             PHA
000040r 2  AD rr rr       LDA scrollPosition
000043r 2  8D 05 20       STA $2005
000046r 2  A9 00          LDA #$00
000048r 2  8D 05 20       STA $2005
00004Br 2  68             PLA
00004Cr 2  60             RTS
00004Dr 2               .endproc
00004Dr 2               
00004Dr 2               .proc drawLifes
00004Dr 2  AE rr rr       LDX lifes
000050r 2                 lifeLoop:
000050r 2  A9 0A            LDA #10
000052r 2  8D 04 20         STA $2004
000055r 2  A9 06            LDA #06
000057r 2  8D 04 20         STA $2004
00005Ar 2  A9 17            LDA #%00010111
00005Cr 2  8D 04 20         STA $2004
00005Fr 2  BD rr rr         LDA lifesBytes, x
000062r 2  69 0A            ADC #10
000064r 2  8D 04 20         STA $2004
000067r 2  CA               DEX
000068r 2  D0 E6            BNE lifeLoop
00006Ar 2               
00006Ar 2  60             RTS
00006Br 2               .endproc
00006Br 2               
00006Br 2               .proc playerGravity
00006Br 2  60           RTS
00006Cr 2               ;    JSR collisionOnMap
00006Cr 2               ;    LDA collideFlag
00006Cr 2               ;    CMP #%00000011
00006Cr 2  D0 02            BNE incy
00006Er 2  F0 06            BEQ return
000070r 2               incy:
000070r 2  EE rr rr         INC heroYCoordinate
000073r 2  EE rr rr         INC heroYCoordinate
000076r 2               return:
000076r 2  60               RTS
000077r 2               .endproc
000077r 2               
000077r 2               .proc checkCollide
000077r 2  AD rr rr         LDA lastPositionY
00007Ar 2  CD rr rr         CMP heroYCoordinate
00007Dr 2  D0 02            BNE incrementY
00007Fr 2  F0 01            BEQ continue
000081r 2                   incrementY:
000081r 2                     ;JSR playerGravity
000081r 2               ;      INC heroYCoordinate
000081r 2  60                 RTS
000082r 2                   continue:
000082r 2  A9 00              LDA #00
000084r 2  8D rr rr           STA isGravity
000087r 2  8D rr rr           STA jumpHeight
00008Ar 2  8D rr rr           STA isJump
00008Dr 2  60                 RTS
00008Er 2               .endproc
00008Er 2               
00008Er 2               .proc readJoyState
00008Er 2  20 rr rr        JSR unsetHeroFire
000091r 2  20 rr rr        JSR unsetHeroStay
000094r 2  20 rr rr        JSR unsetHeroWalk
000097r 2               
000097r 2  AE rr rr        LDX joyState
00009Ar 2  20 rr rr        JSR handleDirections
00009Dr 2  60              RTS
00009Er 2               .endproc
00009Er 2               
00009Er 2               .proc handleFireAndJump
00009Er 2  E0 02           CPX #%00000010
0000A0r 2  F0 14           BEQ heroJump
0000A2r 2  E0 82           CPX #%10000010
0000A4r 2  F0 14           BEQ walkAndJumpRight
0000A6r 2  E0 81           CPX #%10000001
0000A8r 2  F0 24           BEQ walkAndFireRight
0000AAr 2  E0 41           CPX #%01000001
0000ACr 2  F0 24           BEQ walkAndFireLeft
0000AEr 2  E0 42           CPX #%01000010
0000B0r 2  F0 12           BEQ walkAndJumpLeft
0000B2r 2               
0000B2r 2  20 rr rr        JSR setHeroStay
0000B5r 2  60              RTS
0000B6r 2               
0000B6r 2                  heroJump:
0000B6r 2  20 rr rr             JSR setIsJump
0000B9r 2  60                   RTS
0000BAr 2               
0000BAr 2                  walkAndJumpRight:
0000BAr 2  20 rr rr             JSR setIsJump
0000BDr 2  20 rr rr             JSR heroRightWalk
0000C0r 2  20 rr rr             JSR setHeroRight
0000C3r 2  60                   RTS
0000C4r 2                  walkAndJumpLeft:
0000C4r 2  20 rr rr             JSR setIsJump
0000C7r 2  20 rr rr             JSR heroLeftWalk
0000CAr 2  20 rr rr             JSR setHeroLeft
0000CDr 2  60                   RTS
0000CEr 2                  walkAndFireRight:
0000CEr 2  20 rr rr             JSR walkAndFireRightProc
0000D1r 2  60                   RTS
0000D2r 2                  walkAndFireLeft:
0000D2r 2  20 rr rr             JSR setIsFire
0000D5r 2  20 rr rr             JSR heroLeftWalk
0000D8r 2  20 rr rr             JSR setHeroLeft
0000DBr 2  60                   RTS
0000DCr 2                  walkAndJumpAndFireRight:
0000DCr 2  20 rr rr             JSR jumpAndFire
0000DFr 2  60                   RTS
0000E0r 2                  walkAndJumpAndFireLeft:
0000E0r 2  20 rr rr             JSR walkAndFireProc
0000E3r 2  60                   RTS
0000E4r 2                  heroFire:
0000E4r 2  20 rr rr             JSR setIsFire
0000E7r 2  60                   RTS
0000E8r 2               .endproc
0000E8r 2               
0000E8r 2               .proc handleDirections
0000E8r 2  E0 40            CPX #%01000000
0000EAr 2  F0 34            BEQ heroWalkLeft
0000ECr 2  E0 60            CPX #%01100000
0000EEr 2  F0 20            BEQ heroWalkLeftAndDown
0000F0r 2  E0 A0            CPX #%10100000
0000F2r 2  F0 20            BEQ heroWalkRightAndDown
0000F4r 2  E0 50            CPX #%01010000
0000F6r 2  F0 14            BEQ heroWalkLeftAndUp
0000F8r 2  E0 90            CPX #%10010000
0000FAr 2  F0 1C            BEQ heroWalkRightAndUp
0000FCr 2  E0 80            CPX #%10000000
0000FEr 2  F0 1C            BEQ heroWalkRight
000100r 2  E0 20            CPX #%00100000
000102r 2  F0 20            BEQ walkDown
000104r 2  E0 10            CPX #%00010000
000106r 2  F0 20            BEQ walkUp
000108r 2               
000108r 2  20 rr rr         JSR handleFireAndJump
00010Br 2  60               RTS
00010Cr 2               
00010Cr 2                   heroWalkLeftAndUp:
00010Cr 2  20 rr rr             JSR heroWalkLeftAndUpProcedure
00010Fr 2  60                   RTS
000110r 2                   heroWalkLeftAndDown:
000110r 2  20 rr rr             JSR heroWalkLeftAndDownProcedure
000113r 2  60                   RTS
000114r 2                   heroWalkRightAndDown:
000114r 2  20 rr rr             JSR heroWalkRightAndDownProcedure
000117r 2  60                   RTS
000118r 2                   heroWalkRightAndUp:
000118r 2  20 rr rr             JSR heroWalkRightAndUpProcedure
00011Br 2  60                   RTS
00011Cr 2                   heroWalkRight:
00011Cr 2  20 rr rr             JSR heroWalkRightProc
00011Fr 2  60                   RTS
000120r 2                   heroWalkLeft:
000120r 2  20 rr rr             JSR heroWalkLeftProc
000123r 2  60                   RTS
000124r 2                   walkDown:
000124r 2  20 rr rr             JSR walkDownProcedure
000127r 2  60                   RTS
000128r 2                   walkUp:
000128r 2  20 rr rr             JSR walkUpProcedure
00012Br 2  60                   RTS
00012Cr 2               .endproc
00012Cr 2               
00012Cr 2               .proc heroWalkLeftProc
00012Cr 2  20 rr rr         JSR setHeroLeft
00012Fr 2  20 rr rr         JSR setHeroWalk
000132r 2  20 rr rr         JSR heroLeftWalk
000135r 2               
000135r 2  60               RTS
000136r 2               .endproc
000136r 2               
000136r 2               .proc walkAndFireRightProc
000136r 2  20 rr rr         JSR setIsFire
000139r 2  20 rr rr         JSR heroRightWalk
00013Cr 2  20 rr rr         JSR setHeroRight
00013Fr 2               
00013Fr 2  60               RTS
000140r 2               .endproc
000140r 2               
000140r 2               .proc heroWalkRightProc
000140r 2  20 rr rr         JSR heroRightWalk
000143r 2  20 rr rr         JSR setHeroRight
000146r 2  20 rr rr         JSR setHeroWalk
000149r 2               
000149r 2  60               RTS
00014Ar 2               .endproc
00014Ar 2               
00014Ar 2               .proc jumpAndFire
00014Ar 2  20 rr rr         JSR setIsFire
00014Dr 2  20 rr rr         JSR heroRightWalk
000150r 2  20 rr rr         JSR setHeroRight
000153r 2  20 rr rr         JSR setIsJump
000156r 2               
000156r 2  60               RTS
000157r 2               .endproc
000157r 2               
000157r 2               .proc walkAndFireProc
000157r 2  20 rr rr         JSR setIsFire
00015Ar 2  20 rr rr         JSR heroLeftWalk
00015Dr 2  20 rr rr         JSR setHeroLeft
000160r 2  20 rr rr         JSR setIsJump
000163r 2               
000163r 2  60               RTS
000164r 2               .endproc
000164r 2               
000164r 2               .proc heroWalkRightAndDownProcedure
000164r 2  20 rr rr         JSR setHeroRight
000167r 2  20 rr rr         JSR heroRightWalk
00016Ar 2  20 rr rr         JSR setHeroWalk
00016Dr 2  20 rr rr         JSR walkDownProcedure
000170r 2               
000170r 2  60               RTS
000171r 2               .endproc
000171r 2               
000171r 2               .proc heroWalkLeftAndDownProcedure
000171r 2  20 rr rr         JSR setHeroLeft
000174r 2  20 rr rr         JSR heroLeftWalk
000177r 2  20 rr rr         JSR setHeroWalk
00017Ar 2  20 rr rr         JSR walkDownProcedure
00017Dr 2               
00017Dr 2  60               RTS
00017Er 2               .endproc
00017Er 2               
00017Er 2               .proc heroWalkLeftAndUpProcedure
00017Er 2  20 rr rr         JSR heroLeftWalk
000181r 2  20 rr rr         JSR walkUpProcedure
000184r 2               
000184r 2  60               RTS
000185r 2               .endproc
000185r 2               
000185r 2               .proc heroWalkRightAndUpProcedure
000185r 2  20 rr rr         JSR setHeroRight
000188r 2  20 rr rr         JSR heroRightWalk
00018Br 2  20 rr rr         JSR setHeroWalk
00018Er 2  20 rr rr         JSR walkUpProcedure
000191r 2               
000191r 2  60               RTS
000192r 2               .endproc
000192r 2               
000192r 2               .proc heroDownWalk
000192r 2  AD rr rr         LDA heroYCoordinate
000195r 2  18               CLC
000196r 2  69 10            ADC #16
000198r 2  8D rr rr         STA collideY
00019Br 2               
00019Br 2  AD rr rr         LDA heroXCoordinate
00019Er 2  8D rr rr         STA collideX
0001A1r 2               
0001A1r 2  20 rr rr         JSR collisionOnMapDown
0001A4r 2               ;    JSR collisionOnPolygonY
0001A4r 2  AD rr rr         LDA collideFlag
0001A7r 2  C9 03            CMP #%00000011
0001A9r 2  F0 02            BEQ incrementY
0001ABr 2  D0 09            BNE return
0001ADr 2                   incrementY:
0001ADr 2  EE rr rr             INC heroYCoordinate
0001B0r 2  AD rr rr             LDA heroYCoordinate
0001B3r 2  8D rr rr             STA lastPositionY
0001B6r 2                   return:
0001B6r 2  60                   RTS
0001B7r 2               .endproc
0001B7r 2               
0001B7r 2               .proc heroUpWalk
0001B7r 2  AD rr rr         LDA heroYCoordinate
0001BAr 2  18               CLC
0001BBr 2  69 10            ADC #16
0001BDr 2  8D rr rr         STA collideY
0001C0r 2               
0001C0r 2  AD rr rr         LDA heroXCoordinate
0001C3r 2  8D rr rr         STA collideX
0001C6r 2               
0001C6r 2  20 rr rr         JSR collisionOnMapUp
0001C9r 2  AD rr rr         LDA collideFlag
0001CCr 2  C9 03            CMP #%00000011
0001CEr 2  F0 02            BEQ decrementY
0001D0r 2  D0 09            BNE return
0001D2r 2               
0001D2r 2                   decrementY:
0001D2r 2  CE rr rr             DEC heroYCoordinate
0001D5r 2  AD rr rr             LDA heroYCoordinate
0001D8r 2  8D rr rr             STA lastPositionY
0001DBr 2                   return:
0001DBr 2  60                   RTS
0001DCr 2               .endproc
0001DCr 2               
0001DCr 2               .proc walkDownProcedure
0001DCr 2  AD rr rr         LDA heroDirection
0001DFr 2  C9 01            CMP #01
0001E1r 2  F0 02            BEQ heroLeft
0001E3r 2  D0 06            BNE heroRight
0001E5r 2               
0001E5r 2                   heroLeft:
0001E5r 2  20 rr rr             JSR setHeroLeft
0001E8r 2  4C rr rr             JMP setHero
0001EBr 2                   heroRight:
0001EBr 2  20 rr rr             JSR setHeroRight
0001EEr 2               
0001EEr 2                   setHero:
0001EEr 2  20 rr rr             JSR heroDownWalk
0001F1r 2  20 rr rr             JSR setHeroWalk
0001F4r 2               
0001F4r 2  60                   RTS
0001F5r 2               .endproc
0001F5r 2               
0001F5r 2               .proc walkUpProcedure
0001F5r 2  AD rr rr         LDA heroDirection
0001F8r 2  C9 01            CMP #01
0001FAr 2  F0 02            BEQ heroLeft
0001FCr 2  D0 06            BNE heroRight
0001FEr 2               
0001FEr 2                   heroLeft:
0001FEr 2  20 rr rr             JSR setHeroLeft
000201r 2  4C rr rr             JMP setHero
000204r 2                   heroRight:
000204r 2  20 rr rr             JSR setHeroRight
000207r 2               
000207r 2                   setHero:
000207r 2  20 rr rr             JSR heroUpWalk
00020Ar 2  20 rr rr             JSR setHeroWalk
00020Dr 2               
00020Dr 2  60                   RTS
00020Er 2               .endproc
00020Er 2               
00020Er 2               .proc heroStateMovement
00020Er 2  20 rr rr         JSR caclulateJump
000211r 2  20 rr rr         JSR heroStateAnimations
000214r 2  60               RTS
000215r 2               .endproc
000215r 2               
000215r 2               .proc heroStateAnimations
000215r 2  20 rr rr         JSR heroJumpAnimation
000218r 2  20 rr rr         JSR heroWalkAnimation
00021Br 2  20 rr rr         JSR heroStayAnimation
00021Er 2               
00021Er 2  60               RTS
00021Fr 2               .endproc
00021Fr 2               
00021Fr 2               .proc heroWalkAnimation
00021Fr 2  AD rr rr         LDA isHeroWalk
000222r 2  C9 01            CMP #01
000224r 2  F0 02            BEQ checkFlagJump
000226r 2               ;    BEQ walkWithOutFire
000226r 2  D0 34            BNE return
000228r 2               
000228r 2                   checkFlagJump:
000228r 2  AD rr rr             LDA isJump
00022Br 2  C9 01                CMP #01
00022Dr 2  F0 2D                BEQ return
00022Fr 2  D0 00                BNE checkIsFire
000231r 2               
000231r 2                   checkIsFire:
000231r 2  AD rr rr             LDA isHeroFire
000234r 2  C9 01                CMP #01
000236r 2  F0 02                BEQ walkAndFire
000238r 2  D0 11                BNE walkWithOutFire
00023Ar 2               
00023Ar 2                   walkAndFire:
00023Ar 2  AD rr rr             LDA heroDirection
00023Dr 2  C9 01                CMP #01
00023Fr 2  F0 06                BEQ drawHeroWalkAndFireLeft
000241r 2  D0 00                BNE drawHeroWalkAndFireRight
000243r 2                   drawHeroWalkAndFireRight:
000243r 2  20 rr rr             JSR drawHeroRightWalkFire
000246r 2  60                   RTS
000247r 2                   drawHeroWalkAndFireLeft:
000247r 2  20 rr rr             JSR drawHeroLeftAndFire
00024Ar 2  60                   RTS
00024Br 2               
00024Br 2                   walkWithOutFire:
00024Br 2  AD rr rr             LDA heroDirection
00024Er 2  C9 01                CMP #01
000250r 2  F0 06                BEQ drawHeroWalkLeft
000252r 2  D0 00                BNE drawHeroWalkRight
000254r 2                   drawHeroWalkRight:
000254r 2  20 rr rr             JSR drawHeroRightWalk
000257r 2  60                   RTS
000258r 2                   drawHeroWalkLeft:
000258r 2  20 rr rr             JSR drawHeroLeft
00025Br 2  60                   RTS
00025Cr 2                   return:
00025Cr 2  60                   RTS
00025Dr 2               .endproc
00025Dr 2               
00025Dr 2               .proc heroStayAnimation
00025Dr 2  AD rr rr         LDA isHeroStay
000260r 2  C9 01            CMP #01
000262r 2  D0 13            BNE return
000264r 2  F0 00            BEQ checkDirection
000266r 2                   checkDirection:
000266r 2  AD rr rr             LDA heroDirection
000269r 2  C9 01                CMP #01
00026Br 2  F0 06                BEQ drawStayLeftLabel
00026Dr 2  D0 00                BNE drawStayRightLabel
00026Fr 2                       drawStayRightLabel:
00026Fr 2  20 rr rr                 JSR drawStayRight
000272r 2  60                       RTS
000273r 2                       drawStayLeftLabel:
000273r 2  20 rr rr                 JSR drawStayRight
000276r 2  60                       RTS
000277r 2                   return:
000277r 2  60                   RTS
000278r 2               .endproc
000278r 2               
000278r 2               .proc heroJumpAnimation
000278r 2  AD rr rr         LDA isJump
00027Br 2  C9 01            CMP #01
00027Dr 2  F0 02            BEQ drawJumpAnimation
00027Fr 2  D0 11            BNE return
000281r 2                   drawJumpAnimation:
000281r 2  AD rr rr             LDA heroDirection
000284r 2  C9 01                CMP #01
000286r 2  F0 02                BEQ drawJumpAnimationLeft
000288r 2  D0 04                BNE drawJumpAnimationRight
00028Ar 2                   drawJumpAnimationLeft:
00028Ar 2  20 rr rr             JSR drawJumpLeft
00028Dr 2  60                   RTS
00028Er 2                   drawJumpAnimationRight:
00028Er 2  20 rr rr             JSR drawJumpRight
000291r 2  60                   RTS
000292r 2                   return:
000292r 2  60                   RTS
000293r 2               .endproc
000293r 2               
000293r 2               .proc clearMemory
000293r 2  20 rr rr         JSR clearStayRight
000296r 2               
000296r 2  60               RTS
000297r 2               .endproc
000297r 2               
000297r 2               .proc setHeroLeft
000297r 2  A9 01            LDA #01
000299r 2  8D rr rr         STA heroDirection
00029Cr 2  60               RTS
00029Dr 2               .endproc
00029Dr 2               
00029Dr 2               .proc setHeroRight
00029Dr 2  A9 02            LDA #02
00029Fr 2  8D rr rr         STA heroDirection
0002A2r 2  60               RTS
0002A3r 2               .endproc
0002A3r 2               
0002A3r 2               .proc setHeroWalk
0002A3r 2  A9 01            LDA #01
0002A5r 2  8D rr rr         STA isHeroWalk
0002A8r 2  60               RTS
0002A9r 2               .endproc
0002A9r 2               
0002A9r 2               .proc unsetHeroWalk
0002A9r 2  A9 00            LDA #00
0002ABr 2  8D rr rr         STA isHeroWalk
0002AEr 2  60               RTS
0002AFr 2               .endproc
0002AFr 2               
0002AFr 2               .proc setIsFire
0002AFr 2  A9 01            LDA #01
0002B1r 2  8D rr rr         STA isHeroFire
0002B4r 2  60               RTS
0002B5r 2               .endproc
0002B5r 2               
0002B5r 2               .proc unsetHeroFire
0002B5r 2  A9 00            LDA #00
0002B7r 2  8D rr rr         STA isHeroFire
0002BAr 2  60               RTS
0002BBr 2               .endproc
0002BBr 2               
0002BBr 2               .proc setHeroStay
0002BBr 2  A9 01            LDA #01
0002BDr 2  8D rr rr         STA isHeroStay
0002C0r 2  60               RTS
0002C1r 2               .endproc
0002C1r 2               
0002C1r 2               .proc unsetHeroStay
0002C1r 2  A9 00            LDA #00
0002C3r 2  8D rr rr         STA isHeroStay
0002C6r 2  60               RTS
0002C7r 2               .endproc
0002C7r 2               
0002C7r 1               .include "./lib/heroStates/heroWalkRight.asm"
0002C7r 2               .segment "ZEROPAGE"
000000r 2  xx             frameCountPlayerRightWalk: .res 1
000001r 2  xx             scrollCounter: .res 1
000002r 2               
000002r 2  xx             frameSpritesLB: .res 1
000003r 2  xx             frameSpritesHB: .res 1
000004r 2               
000004r 2  xx             frameAttributesLB: .res 1
000005r 2  xx             frameAttributesHB: .res 1
000006r 2               
000006r 2  xx             frameOffsetsXLB: .res 1
000007r 2  xx             frameOffsetsXHB: .res 1
000008r 2               
000008r 2  xx             frameOffsetsYLB: .res 1
000009r 2  xx             frameOffsetsYHB: .res 1
00000Ar 2               
00000Ar 2               .segment "RODATA"
000004r 2                  frame1_sprites:
000004r 2  33                 .byt $33
000005r 2  02 03              .byt $02, $03
000007r 2  12 13              .byt $12, $13
000009r 2  22 23              .byt $22, $23
00000Br 2               
00000Br 2                  frame2_sprites:
00000Br 2  33                 .byt $33
00000Cr 2  02 03              .byt $02, $03
00000Er 2  14 15              .byt $14, $15
000010r 2  24 25              .byt $24, $25
000012r 2               
000012r 2                  frame3_sprites:
000012r 2  33                 .byt $33
000013r 2  02 03              .byt $02, $03
000015r 2  16 17              .byt $16, $17
000017r 2  26 27              .byt $26, $27
000019r 2               
000019r 2                  frame_attributes:
000019r 2  16                 .byt %00010110
00001Ar 2  17 17              .byt %00010111, %00010111
00001Cr 2  17 17              .byt %00010111, %00010111
00001Er 2  17 17              .byt %00010111, %00010111
000020r 2               
000020r 2                  frame_offset_x:
000020r 2  06                 .byt $06
000021r 2  00 08              .byt $00, $08
000023r 2  00 08              .byt $00, $08
000025r 2  00 08              .byt $00, $08
000027r 2               
000027r 2                  frame_offset_y:
000027r 2  00                 .byt $00
000028r 2  00 00              .byt $00, $00
00002Ar 2  08 08              .byt $08, $08
00002Cr 2  10 10              .byt $10, $10
00002Er 2               
00002Er 2               .segment "CODE"
0002C7r 2               
0002C7r 2               .proc firstProcRightWalk
0002C7r 2  60               RTS
0002C8r 2               .endproc
0002C8r 2               
0002C8r 2               .proc heroRightWalk
0002C8r 2  AD rr rr         LDA heroYCoordinate
0002CBr 2  8D rr rr         STA collideY
0002CEr 2               
0002CEr 2  AD rr rr         LDA heroXCoordinate
0002D1r 2  18               CLC
0002D2r 2  69 01            ADC #1
0002D4r 2  8D rr rr         STA collideX
0002D7r 2               
0002D7r 2  20 rr rr         JSR collisionOnMapRight
0002DAr 2  AD rr rr         LDA collideFlag
0002DDr 2  C9 03            CMP #%00000011
0002DFr 2  F0 01            BEQ incXCoord
0002E1r 2               
0002E1r 2  60               RTS
0002E2r 2               
0002E2r 2                 incXCoord:
0002E2r 2  AD rr rr         LDA heroXCoordinate
0002E5r 2  C9 7A            CMP #122
0002E7r 2  B0 02            BCS incrementScreen
0002E9r 2  D0 04            BNE incrementX
0002EBr 2               
0002EBr 2                 incrementScreen:
0002EBr 2  20 rr rr         JSR incrementScrollPosition
0002EEr 2               ;    INC scrollPosition
0002EEr 2  60               RTS
0002EFr 2                 incrementX:
0002EFr 2  EE rr rr         INC heroXCoordinate
0002F2r 2  60               RTS
0002F3r 2               .endproc
0002F3r 2               
0002F3r 2               .proc incrementScrollPosition
0002F3r 2  EE rr rr         INC scrollPosition
0002F6r 2  60               RTS
0002F7r 2               .endproc
0002F7r 2               
0002F7r 2               .proc drawHeroRightWalk
0002F7r 2  20 rr rr         JSR commonInitFrame
0002FAr 2  A5 rr            LDA scrollCounter
0002FCr 2  29 08            AND #8
0002FEr 2  C9 01            CMP #1
000300r 2  F0 08            BEQ drawFrame1Label
000302r 2  C9 08            CMP #8
000304r 2  F0 0A            BEQ drawFrame2Label
000306r 2  C9 0A            CMP #10
000308r 2  F0 0C            BEQ drawFrame3Label
00030Ar 2               
00030Ar 2                 drawFrame1Label:
00030Ar 2  20 rr rr         JSR drawFrame1
00030Dr 2  E6 rr            INC frameCountPlayerRightWalk
00030Fr 2  60               RTS
000310r 2                 drawFrame2Label:
000310r 2  20 rr rr         JSR drawFrame2
000313r 2  E6 rr            INC frameCountPlayerRightWalk
000315r 2  60               RTS
000316r 2                 drawFrame3Label:
000316r 2  20 rr rr         JSR drawFrame3
000319r 2  E6 rr            INC frameCountPlayerRightWalk
00031Br 2  60               RTS
00031Cr 2               .endproc
00031Cr 2               
00031Cr 2               .proc drawFrame
00031Cr 2  A2 00            LDX #00
00031Er 2  A0 00            LDY #00
000320r 2                   frameDrawLoop:
000320r 2  AD rr rr             LDA heroYCoordinate
000323r 2  18                   CLC
000324r 2  71 rr                ADC (frameOffsetsYLB), y
000326r 2  9D 00 02             STA $0200, x
000329r 2  B1 rr                LDA (frameSpritesLB), y
00032Br 2  E8                   INX
00032Cr 2  9D 00 02             STA $0200, x
00032Fr 2  B1 rr                LDA (frameAttributesLB), y
000331r 2  E8                   INX
000332r 2  9D 00 02             STA $0200, x
000335r 2  AD rr rr             LDA heroXCoordinate
000338r 2  18                   CLC
000339r 2  71 rr                ADC (frameOffsetsXLB), y
00033Br 2  E8                   INX
00033Cr 2  9D 00 02             STA $0200, x
00033Fr 2  E8                   INX
000340r 2  C8                   INY
000341r 2  C0 07                CPY #07
000343r 2  D0 DB                BNE frameDrawLoop
000345r 2               
000345r 2  60               RTS
000346r 2               .endproc
000346r 2               
000346r 2               .proc commonInitFrame
000346r 2  A9 rr            LDA #<frame_attributes
000348r 2  85 rr            STA frameAttributesLB
00034Ar 2  A9 rr            LDA #>frame_attributes
00034Cr 2  85 rr            STA frameAttributesHB
00034Er 2               
00034Er 2  A9 rr            LDA #<frame_offset_x
000350r 2  85 rr            STA frameOffsetsXLB
000352r 2  A9 rr            LDA #>frame_offset_x
000354r 2  85 rr            STA frameOffsetsXHB
000356r 2               
000356r 2  A9 rr            LDA #<frame_offset_y
000358r 2  85 rr            STA frameOffsetsYLB
00035Ar 2  A9 rr            LDA #>frame_offset_y
00035Cr 2  85 rr            STA frameOffsetsYHB
00035Er 2               
00035Er 2  60               RTS
00035Fr 2               .endproc
00035Fr 2               
00035Fr 2               .proc drawFrame1
00035Fr 2  A9 rr            LDA #<frame1_sprites
000361r 2  85 rr            STA frameSpritesLB
000363r 2  A9 rr            LDA #>frame1_sprites
000365r 2  85 rr            STA frameSpritesHB
000367r 2               
000367r 2  20 rr rr         JSR drawFrame
00036Ar 2  60               RTS
00036Br 2               .endproc
00036Br 2               
00036Br 2               .proc drawFrame2
00036Br 2  A9 rr            LDA #<frame2_sprites
00036Dr 2  85 rr            STA frameSpritesLB
00036Fr 2  A9 rr            LDA #>frame2_sprites
000371r 2  85 rr            STA frameSpritesHB
000373r 2               
000373r 2  20 rr rr         JSR drawFrame
000376r 2  60               RTS
000377r 2               .endproc
000377r 2               
000377r 2               .proc drawFrame3
000377r 2  A9 rr            LDA #<frame3_sprites
000379r 2  85 rr            STA frameSpritesLB
00037Br 2  A9 rr            LDA #>frame3_sprites
00037Dr 2  85 rr            STA frameSpritesHB
00037Fr 2               
00037Fr 2  20 rr rr         JSR drawFrame
000382r 2  60               RTS
000383r 2               .endproc
000383r 2               
000383r 1               .include "./lib/heroStates/heroStayRight.asm"
000383r 2               .segment "CODE"
000383r 2               
000383r 2               .proc heroStayFirstProc
000383r 2  60             RTS
000384r 2               .endproc
000384r 2               
000384r 2               .proc drawStayRight
000384r 2  AD rr rr       LDA heroYCoordinate
000387r 2  69 00          ADC #0
000389r 2  8D 00 02       STA $0200
00038Cr 2  A9 34          LDA #$34
00038Er 2  8D 01 02       STA $0201
000391r 2  A9 16          LDA #%00010110
000393r 2  8D 02 02       STA $0202
000396r 2  AD rr rr       LDA heroXCoordinate
000399r 2  69 04          ADC #4
00039Br 2  8D 03 02       STA $0203
00039Er 2               
00039Er 2  AD rr rr       LDA heroYCoordinate
0003A1r 2  8D 04 02       STA $0204
0003A4r 2  A9 00          LDA #00
0003A6r 2  8D 05 02       STA $0205
0003A9r 2  A9 17          LDA #%00010111
0003ABr 2  8D 06 02       STA $0206
0003AEr 2  AD rr rr       LDA heroXCoordinate
0003B1r 2  8D 07 02       STA $0207
0003B4r 2               
0003B4r 2  AD rr rr       LDA heroYCoordinate
0003B7r 2  69 08          ADC #8
0003B9r 2  8D 08 02       STA $0208
0003BCr 2  A9 10          LDA #$10
0003BEr 2  8D 09 02       STA $0209
0003C1r 2  A9 17          LDA #%00010111
0003C3r 2  8D 0A 02       STA $020A
0003C6r 2  AD rr rr       LDA heroXCoordinate
0003C9r 2  8D 0B 02       STA $020B
0003CCr 2               
0003CCr 2  AD rr rr       LDA heroYCoordinate
0003CFr 2  69 10          ADC #16
0003D1r 2  8D 0C 02       STA $020C
0003D4r 2  A9 20          LDA #$20
0003D6r 2  8D 0D 02       STA $020D
0003D9r 2  A9 17          LDA #%00010111
0003DBr 2  8D 0E 02       STA $020E
0003DEr 2  AD rr rr       LDA heroXCoordinate
0003E1r 2  8D 0F 02       STA $020F
0003E4r 2               
0003E4r 2  AD rr rr       LDA heroYCoordinate
0003E7r 2  8D 10 02       STA $0210
0003EAr 2  A9 00          LDA #$00
0003ECr 2  8D 11 02       STA $0211
0003EFr 2  A9 57          LDA #%01010111
0003F1r 2  8D 12 02       STA $0212
0003F4r 2  AD rr rr       LDA heroXCoordinate
0003F7r 2  69 08          ADC #8
0003F9r 2  8D 13 02       STA $0213
0003FCr 2               
0003FCr 2  AD rr rr       LDA heroYCoordinate
0003FFr 2  69 08          ADC #8
000401r 2  8D 14 02       STA $0214
000404r 2  A9 10          LDA #$10
000406r 2  8D 15 02       STA $0215
000409r 2  A9 57          LDA #%01010111
00040Br 2  8D 16 02       STA $0216
00040Er 2  AD rr rr       LDA heroXCoordinate
000411r 2  69 08          ADC #8
000413r 2  8D 17 02       STA $0217
000416r 2               
000416r 2  AD rr rr       LDA heroYCoordinate
000419r 2  69 10          ADC #16
00041Br 2  8D 18 02       STA $0218
00041Er 2  A9 20          LDA #$20
000420r 2  8D 19 02       STA $0219
000423r 2  A9 57          LDA #%01010111
000425r 2  8D 1A 02       STA $021A
000428r 2  AD rr rr       LDA heroXCoordinate
00042Br 2  69 08          ADC #8
00042Dr 2  8D 1B 02       STA $021B
000430r 2               
000430r 2  60             RTS
000431r 2               .endproc
000431r 2               
000431r 2               .proc clearStayRight
000431r 2  A9 00            LDA #$00
000433r 2  A2 00            LDX #$00
000435r 2               clearLoop:
000435r 2  9D 00 02         STA $0200, x
000438r 2  E8               INX
000439r 2  C9 23            CMP #$23
00043Br 2  D0 F8            BNE clearLoop
00043Dr 2               
00043Dr 2  60               RTS
00043Er 2               .endproc
00043Er 2               
00043Er 1               .include "./lib/heroStates/heroStayLeft.asm"
00043Er 2               .segment "CODE"
00043Er 2               
00043Er 2               .proc heroStayLeftFirstProc
00043Er 2  60               RTS
00043Fr 2               .endproc
00043Fr 2               
00043Fr 2               .proc drawStayLeft
00043Fr 2  AD rr rr       LDA heroYCoordinate
000442r 2  8D 00 02       STA $0200
000445r 2  A9 04          LDA #$04
000447r 2  8D 01 02       STA $0201
00044Ar 2  A9 56          LDA #%01010110
00044Cr 2  8D 02 02       STA $0202
00044Fr 2  AD rr rr       LDA heroXCoordinate
000452r 2  8D 03 02       STA $0203
000455r 2               
000455r 2  AD rr rr       LDA heroYCoordinate
000458r 2  8D 04 02       STA $0204
00045Br 2  A9 00          LDA #00
00045Dr 2  8D 05 02       STA $0205
000460r 2  A9 57          LDA #%01010111
000462r 2  8D 06 02       STA $0206
000465r 2  AD rr rr       LDA heroXCoordinate
000468r 2  69 07          ADC #7
00046Ar 2  8D 07 02       STA $0207
00046Dr 2               
00046Dr 2  AD rr rr       LDA heroYCoordinate
000470r 2  69 08          ADC #8
000472r 2  8D 08 02       STA $0208
000475r 2  A9 10          LDA #$10
000477r 2  8D 09 02       STA $0209
00047Ar 2  A9 17          LDA #%00010111
00047Cr 2  8D 0A 02       STA $020A
00047Fr 2  AD rr rr       LDA heroXCoordinate
000482r 2  8D 0B 02       STA $020B
000485r 2               
000485r 2  AD rr rr       LDA heroYCoordinate
000488r 2  69 10          ADC #16
00048Ar 2  8D 0C 02       STA $020C
00048Dr 2  A9 20          LDA #$20
00048Fr 2  8D 0D 02       STA $020D
000492r 2  A9 17          LDA #%00010111
000494r 2  8D 0E 02       STA $020E
000497r 2  AD rr rr       LDA heroXCoordinate
00049Ar 2  8D 0F 02       STA $020F
00049Dr 2               
00049Dr 2  AD rr rr       LDA heroYCoordinate
0004A0r 2  8D 10 02       STA $0210
0004A3r 2  A9 01          LDA #$01
0004A5r 2  8D 11 02       STA $0211
0004A8r 2  A9 57          LDA #%01010111
0004AAr 2  8D 12 02       STA $0212
0004ADr 2  AD rr rr       LDA heroXCoordinate
0004B0r 2  8D 13 02       STA $0213
0004B3r 2               
0004B3r 2  AD rr rr       LDA heroYCoordinate
0004B6r 2  69 08          ADC #8
0004B8r 2  8D 14 02       STA $0214
0004BBr 2  A9 10          LDA #$10
0004BDr 2  8D 15 02       STA $0215
0004C0r 2  A9 57          LDA #%01010111
0004C2r 2  8D 16 02       STA $0216
0004C5r 2  AD rr rr       LDA heroXCoordinate
0004C8r 2  69 08          ADC #8
0004CAr 2  8D 17 02       STA $0217
0004CDr 2               
0004CDr 2  AD rr rr       LDA heroYCoordinate
0004D0r 2  69 10          ADC #16
0004D2r 2  8D 18 02       STA $0218
0004D5r 2  A9 20          LDA #$20
0004D7r 2  8D 19 02       STA $0219
0004DAr 2  A9 57          LDA #%01010111
0004DCr 2  8D 1A 02       STA $021A
0004DFr 2  AD rr rr       LDA heroXCoordinate
0004E2r 2  69 08          ADC #8
0004E4r 2  8D 1B 02       STA $021B
0004E7r 2               
0004E7r 2  60             RTS
0004E8r 2               .endproc
0004E8r 2               
0004E8r 2               .proc clearStayLeft
0004E8r 2  A9 00            LDA #$00
0004EAr 2  8D 00 02         STA $0200
0004EDr 2  8D 01 02         STA $0201
0004F0r 2  8D 02 02         STA $0202
0004F3r 2  8D 03 02         STA $0203
0004F6r 2  8D 04 02         STA $0204
0004F9r 2  8D 05 02         STA $0205
0004FCr 2  8D 06 02         STA $0206
0004FFr 2  8D 07 02         STA $0207
000502r 2  8D 08 02         STA $0208
000505r 2  8D 09 02         STA $0209
000508r 2  8D 0A 02         STA $020A
00050Br 2  8D 0B 02         STA $020B
00050Er 2  8D 0C 02         STA $020C
000511r 2  8D 0D 02         STA $020D
000514r 2  8D 0E 02         STA $020E
000517r 2  8D 0F 02         STA $020F
00051Ar 2  8D 10 02         STA $0210
00051Dr 2  8D 11 02         STA $0211
000520r 2  8D 12 02         STA $0212
000523r 2  8D 13 02         STA $0213
000526r 2  8D 14 02         STA $0214
000529r 2  8D 15 02         STA $0215
00052Cr 2  8D 16 02         STA $0216
00052Fr 2  8D 17 02         STA $0217
000532r 2  8D 18 02         STA $0218
000535r 2  8D 19 02         STA $0219
000538r 2  8D 1A 02         STA $021A
00053Br 2  8D 1B 02         STA $021B
00053Er 2               
00053Er 2  60               RTS
00053Fr 2               .endproc
00053Fr 2               
00053Fr 1               .include "./lib/heroStates/heroWalkLeft.asm"
00053Fr 2               .segment "ZEROPAGE"
00000Ar 2  xx             LeftFrameCountPlayerRightWalk: .res 1;
00000Br 2               
00000Br 2               .segment "RODATA"
00002Er 2                  leftFrameSprites:
00002Er 2  33                 .byt $33
00002Fr 2  02 03              .byt $02, $03
000031r 2  12 13              .byt $12, $13
000033r 2  22 23              .byt $22, $23
000035r 2               
000035r 2                  leftFrame2Sprites:
000035r 2  33                 .byt $33
000036r 2  02 03              .byt $02, $03
000038r 2  14 15              .byt $14, $15
00003Ar 2  24 25              .byt $24, $25
00003Cr 2               
00003Cr 2                  leftFrame3Sprites:
00003Cr 2  33                 .byt $33
00003Dr 2  02 03              .byt $02, $03
00003Fr 2  16 17              .byt $16, $17
000041r 2  26 27              .byt $26, $27
000043r 2               
000043r 2                  leftFrameAttributes:
000043r 2  46                 .byt %01000110
000044r 2  47 47              .byt %01000111, %01000111
000046r 2  47 47              .byt %01000111, %01000111
000048r 2  47 47              .byt %01000111, %01000111
00004Ar 2               
00004Ar 2                  leftFrameOffsetX:
00004Ar 2  02                 .byt $02
00004Br 2  08 00              .byt $08, $00
00004Dr 2  08 00              .byt $08, $00
00004Fr 2  08 00              .byt $08, $00
000051r 2               
000051r 2                  leftFrameOffsetY:
000051r 2  00                 .byt $00
000052r 2  00 00              .byt $00, $00
000054r 2  08 08              .byt $08, $08
000056r 2  10 10              .byt $10, $10
000058r 2               
000058r 2               .segment "CODE"
00053Fr 2               
00053Fr 2               .proc firstProcHeroWalkLeft
00053Fr 2  60             RTS
000540r 2               .endproc
000540r 2               
000540r 2               .proc heroLeftWalk
000540r 2  AD rr rr         LDA heroYCoordinate
000543r 2  8D rr rr         STA collideY
000546r 2               
000546r 2  AD rr rr         LDA heroXCoordinate
000549r 2  18               CLC
00054Ar 2  E9 01            SBC #1
00054Cr 2  8D rr rr         STA collideX
00054Fr 2               
00054Fr 2  20 rr rr         JSR collisionOnMapLeft
000552r 2  AD rr rr         LDA collideFlag
000555r 2  C9 03            CMP #%00000011
000557r 2  F0 02            BEQ decrementXCoordinate
000559r 2  D0 03            BNE return
00055Br 2               ; todo dorabotat' esli geroy v levo idet do ekrana
00055Br 2               ;  LDA scrollPosition
00055Br 2               ;  CMP heroXCoordinate
00055Br 2               ;  BCS stopDecrement
00055Br 2               ;  BNE decrementX
00055Br 2               ;  stopDecrement:
00055Br 2               ;    RTS
00055Br 2               ;  decrementX:
00055Br 2                   decrementXCoordinate:
00055Br 2  CE rr rr             DEC heroXCoordinate
00055Er 2                   return:
00055Er 2  60                   RTS
00055Fr 2                 ; todo check left screen border
00055Fr 2               .endproc
00055Fr 2               
00055Fr 2               .proc drawHeroLeft
00055Fr 2  A5 rr            LDA scrollCounter
000561r 2  29 08            AND #8
000563r 2  C9 01            CMP #1
000565r 2  F0 08            BEQ drawLeftFrame1Label
000567r 2  29 08            AND #8
000569r 2  F0 0A            BEQ drawLeftFrame2Label
00056Br 2  29 0A            AND #10
00056Dr 2  F0 0C            BEQ drawLeftFrame3Label
00056Fr 2               
00056Fr 2                 drawLeftFrame1Label:
00056Fr 2  20 rr rr         JSR drawLeftFrame1
000572r 2  E6 rr            INC LeftFrameCountPlayerRightWalk
000574r 2  60               RTS
000575r 2                 drawLeftFrame2Label:
000575r 2  20 rr rr         JSR drawLeftFrame2
000578r 2  E6 rr            INC LeftFrameCountPlayerRightWalk
00057Ar 2  60               RTS
00057Br 2                 drawLeftFrame3Label:
00057Br 2  20 rr rr         JSR drawLeftFrame3
00057Er 2  E6 rr            INC LeftFrameCountPlayerRightWalk
000580r 2  60               RTS
000581r 2               .endproc
000581r 2               
000581r 2               .proc commonInitFrameLeft
000581r 2  A9 rr            LDA #<leftFrameAttributes
000583r 2  85 rr            STA frameAttributesLB
000585r 2  A9 rr            LDA #>leftFrameAttributes
000587r 2  85 rr            STA frameAttributesHB
000589r 2               
000589r 2  A9 rr            LDA #<leftFrameOffsetX
00058Br 2  85 rr            STA frameOffsetsXLB
00058Dr 2  A9 rr            LDA #>leftFrameOffsetX
00058Fr 2  85 rr            STA frameOffsetsXHB
000591r 2               
000591r 2  A9 rr            LDA #<leftFrameOffsetY
000593r 2  85 rr            STA frameOffsetsYLB
000595r 2  A9 rr            LDA #>leftFrameOffsetY
000597r 2  85 rr            STA frameOffsetsYHB
000599r 2               
000599r 2  60               RTS
00059Ar 2               .endproc
00059Ar 2               
00059Ar 2               .proc drawLeftFrame1
00059Ar 2  20 rr rr         JSR commonInitFrameLeft
00059Dr 2               
00059Dr 2  A9 rr            LDA #<leftFrameSprites
00059Fr 2  85 rr            STA frameSpritesLB
0005A1r 2  A9 rr            LDA #>leftFrameSprites
0005A3r 2  85 rr            STA frameSpritesHB
0005A5r 2               
0005A5r 2  20 rr rr         JSR drawFrame
0005A8r 2               
0005A8r 2  60               RTS
0005A9r 2               .endproc
0005A9r 2               
0005A9r 2               .proc drawLeftFrame2
0005A9r 2  20 rr rr         JSR commonInitFrameLeft
0005ACr 2               
0005ACr 2  A9 rr            LDA #<leftFrame2Sprites
0005AEr 2  85 rr            STA frameSpritesLB
0005B0r 2  A9 rr            LDA #>leftFrame2Sprites
0005B2r 2  85 rr            STA frameSpritesHB
0005B4r 2               
0005B4r 2  20 rr rr         JSR drawFrame
0005B7r 2               
0005B7r 2  60               RTS
0005B8r 2               .endproc
0005B8r 2               
0005B8r 2               .proc drawLeftFrame3
0005B8r 2  20 rr rr         JSR commonInitFrameLeft
0005BBr 2               
0005BBr 2  A9 rr            LDA #<leftFrame2Sprites
0005BDr 2  85 rr            STA frameSpritesLB
0005BFr 2  A9 rr            LDA #>leftFrame2Sprites
0005C1r 2  85 rr            STA frameSpritesHB
0005C3r 2               
0005C3r 2  20 rr rr         JSR drawFrame
0005C6r 2               
0005C6r 2  60               RTS
0005C7r 2               .endproc
0005C7r 2               
0005C7r 1               .include "./lib/heroStates/heroJump.asm"
0005C7r 2               .segment "ZEROPAGE"
00000Br 2  xx               isJump: .res 1;
00000Cr 2  xx               jumpHeight: .res 1;
00000Dr 2               
00000Dr 2               .segment "CODE"
0005C7r 2               
0005C7r 2               .proc firstJumpProcedure
0005C7r 2  60               RTS
0005C8r 2               .endproc
0005C8r 2               
0005C8r 2               .proc setIsJump
0005C8r 2  A9 01            LDA #01
0005CAr 2  85 rr            STA isJump
0005CCr 2  60               RTS
0005CDr 2               .endproc
0005CDr 2               
0005CDr 2               .proc unsetIsJump
0005CDr 2  A9 00            LDA #00
0005CFr 2  85 rr            STA isJump
0005D1r 2  60               RTS
0005D2r 2               .endproc
0005D2r 2               
0005D2r 2               .proc caclulateJump
0005D2r 2  A5 rr            LDA isJump
0005D4r 2  C9 01            CMP #01
0005D6r 2  D0 19            BNE return
0005D8r 2  F0 00            BEQ continue
0005DAr 2               
0005DAr 2                   continue:
0005DAr 2  A5 rr            LDA jumpHeight
0005DCr 2  C9 20            CMP #$20
0005DEr 2  F0 11            BEQ return
0005E0r 2  D0 00            BNE decrementY
0005E2r 2               
0005E2r 2                   decrementY:
0005E2r 2  CE rr rr             DEC heroYCoordinate
0005E5r 2  CE rr rr             DEC heroYCoordinate
0005E8r 2  CE rr rr             DEC heroYCoordinate
0005EBr 2  CE rr rr             DEC heroYCoordinate
0005EEr 2  E6 rr                INC jumpHeight
0005F0r 2  60                   RTS
0005F1r 2               
0005F1r 2                   return:
0005F1r 2  60                   RTS
0005F2r 2               .endproc
0005F2r 2               
0005F2r 2               .proc drawJumpRight
0005F2r 2  AD rr rr         lda heroYCoordinate
0005F5r 2  8D 00 02           sta $0200
0005F8r 2  A9 04              lda #$04
0005FAr 2  8D 01 02           sta $0201
0005FDr 2  A9 16              lda #%00010110
0005FFr 2  8D 02 02           sta $0202
000602r 2  AD rr rr           lda heroXCoordinate
000605r 2  69 06              adc #6
000607r 2  8D 03 02           sta $0203
00060Ar 2               
00060Ar 2  AD rr rr           lda heroYCoordinate
00060Dr 2  8D 04 02           sta $0204
000610r 2  A9 00              lda #00
000612r 2  8D 05 02           sta $0205
000615r 2  A9 17              lda #%00010111
000617r 2  8D 06 02           sta $0206
00061Ar 2  AD rr rr           lda heroXCoordinate
00061Dr 2  8D 07 02           sta $0207
000620r 2               
000620r 2  AD rr rr           lda heroYCoordinate
000623r 2  69 08              adc #8
000625r 2  8D 08 02           sta $0208
000628r 2  A9 18              lda #$18
00062Ar 2  8D 09 02           sta $0209
00062Dr 2  A9 17              lda #%00010111
00062Fr 2  8D 0A 02           sta $020A
000632r 2  AD rr rr           lda heroXCoordinate
000635r 2  8D 0B 02           sta $020B
000638r 2               
000638r 2  AD rr rr           lda heroYCoordinate
00063Br 2  69 10              adc #16
00063Dr 2  8D 0C 02           sta $020C
000640r 2  A9 28              lda #$28
000642r 2  8D 0D 02           sta $020D
000645r 2  A9 17              lda #%00010111
000647r 2  8D 0E 02           sta $020E
00064Ar 2  AD rr rr           lda heroXCoordinate
00064Dr 2  8D 0F 02           sta $020F
000650r 2               
000650r 2  AD rr rr           lda heroYCoordinate
000653r 2  8D 10 02           sta $0210
000656r 2  A9 01              lda #$01
000658r 2  8D 11 02           sta $0211
00065Br 2  A9 17              lda #%00010111
00065Dr 2  8D 12 02           sta $0212
000660r 2  AD rr rr           lda heroXCoordinate
000663r 2  69 08              adc #8
000665r 2  8D 13 02           sta $0213
000668r 2               
000668r 2  AD rr rr           lda heroYCoordinate
00066Br 2  69 08              adc #8
00066Dr 2  8D 14 02           sta $0214
000670r 2  A9 19              lda #$19
000672r 2  8D 15 02           sta $0215
000675r 2  A9 17              lda #%00010111
000677r 2  8D 16 02           sta $0216
00067Ar 2  AD rr rr           lda heroXCoordinate
00067Dr 2  69 08              adc #8
00067Fr 2  8D 17 02           sta $0217
000682r 2               
000682r 2  AD rr rr           lda heroYCoordinate
000685r 2  69 10              adc #16
000687r 2  8D 18 02           sta $0218
00068Ar 2  A9 29              lda #$29
00068Cr 2  8D 19 02           sta $0219
00068Fr 2  A9 17              lda #%00010111
000691r 2  8D 1A 02           sta $021A
000694r 2  AD rr rr           lda heroXCoordinate
000697r 2  69 08              adc #8
000699r 2  8D 1B 02           sta $021B
00069Cr 2               
00069Cr 2  60                 RTS
00069Dr 2               .endproc
00069Dr 2               
00069Dr 2               .proc drawJumpLeft
00069Dr 2  AD rr rr         lda heroYCoordinate
0006A0r 2  8D 00 02           sta $0200
0006A3r 2  A9 04              lda #$04
0006A5r 2  8D 01 02           sta $0201
0006A8r 2  A9 56              lda #%01010110
0006AAr 2  8D 02 02           sta $0202
0006ADr 2  AD rr rr           lda heroXCoordinate
0006B0r 2  8D 03 02           sta $0203
0006B3r 2               
0006B3r 2  AD rr rr           lda heroYCoordinate
0006B6r 2  8D 04 02           sta $0204
0006B9r 2  A9 00              lda #00
0006BBr 2  8D 05 02           sta $0205
0006BEr 2  A9 57              lda #%01010111
0006C0r 2  8D 06 02           sta $0206
0006C3r 2  AD rr rr           lda heroXCoordinate
0006C6r 2  69 07              adc #7
0006C8r 2  8D 07 02           sta $0207
0006CBr 2               
0006CBr 2  AD rr rr           lda heroYCoordinate
0006CEr 2  69 08              adc #8
0006D0r 2  8D 08 02           sta $0208
0006D3r 2  A9 18              lda #$18
0006D5r 2  8D 09 02           sta $0209
0006D8r 2  A9 57              lda #%01010111
0006DAr 2  8D 0A 02           sta $020A
0006DDr 2  AD rr rr           lda heroXCoordinate
0006E0r 2  69 08              adc #8
0006E2r 2  8D 0B 02           sta $020B
0006E5r 2               
0006E5r 2  AD rr rr           lda heroYCoordinate
0006E8r 2  69 10              adc #16
0006EAr 2  8D 0C 02           sta $020C
0006EDr 2  A9 28              lda #$28
0006EFr 2  8D 0D 02           sta $020D
0006F2r 2  A9 57              lda #%01010111
0006F4r 2  8D 0E 02           sta $020E
0006F7r 2  AD rr rr           lda heroXCoordinate
0006FAr 2  69 08              adc #8
0006FCr 2  8D 0F 02           sta $020F
0006FFr 2               
0006FFr 2  AD rr rr           lda heroYCoordinate
000702r 2  8D 10 02           sta $0210
000705r 2  A9 01              lda #$01
000707r 2  8D 11 02           sta $0211
00070Ar 2  A9 57              lda #%01010111
00070Cr 2  8D 12 02           sta $0212
00070Fr 2  AD rr rr           lda heroXCoordinate
000712r 2  8D 13 02           sta $0213
000715r 2               
000715r 2  AD rr rr           lda heroYCoordinate
000718r 2  69 08              adc #8
00071Ar 2  8D 14 02           sta $0214
00071Dr 2  A9 19              lda #$19
00071Fr 2  8D 15 02           sta $0215
000722r 2  A9 57              lda #%01010111
000724r 2  8D 16 02           sta $0216
000727r 2  AD rr rr           lda heroXCoordinate
00072Ar 2  8D 17 02           sta $0217
00072Dr 2               
00072Dr 2  AD rr rr           lda heroYCoordinate
000730r 2  69 10              adc #16
000732r 2  8D 18 02           sta $0218
000735r 2  A9 29              lda #$29
000737r 2  8D 19 02           sta $0219
00073Ar 2  A9 57              lda #%01010111
00073Cr 2  8D 1A 02           sta $021A
00073Fr 2  AD rr rr           lda heroXCoordinate
000742r 2  8D 1B 02           sta $021B
000745r 2               
000745r 2  60                 RTS
000746r 2               .endproc
000746r 2               
000746r 1               .include "./lib/heroStates/heroWalkRightAndFire.asm"
000746r 2               .segment "CODE"
000746r 2               
000746r 2               .proc firstProcRightWalkFire
000746r 2  60               RTS
000747r 2               .endproc
000747r 2               
000747r 2               .proc heroRightWalkFire
000747r 2  AD rr rr       LDA heroXCoordinate
00074Ar 2  C9 7A          CMP #122
00074Cr 2  B0 02          BCS incrementScreen
00074Er 2  D0 04          BNE incrementX
000750r 2                 incrementScreen:
000750r 2  20 rr rr         JSR incrementScrollPosition
000753r 2               ;    INC scrollPosition
000753r 2  60               RTS
000754r 2                 incrementX:
000754r 2  EE rr rr         INC heroXCoordinate
000757r 2  60               RTS
000758r 2               .endproc
000758r 2               
000758r 2               .proc drawHeroRightWalkFire
000758r 2  A5 rr            LDA scrollCounter
00075Ar 2  29 08            AND #8
00075Cr 2  C9 01            CMP #1
00075Er 2  F0 08            BEQ drawFrameAndFire1Label
000760r 2  29 08            AND #8
000762r 2  F0 0A            BEQ drawFrameAndFire2Label
000764r 2  29 0A            AND #10
000766r 2  F0 0C            BEQ drawFrameAndFire3Label
000768r 2               
000768r 2                 drawFrameAndFire1Label:
000768r 2  20 rr rr         JSR drawFrameAndFire1
00076Br 2  E6 rr            INC frameCountPlayerRightWalk
00076Dr 2               
00076Dr 2  60               RTS
00076Er 2                 drawFrameAndFire2Label:
00076Er 2  20 rr rr         JSR drawFrameAndFire2
000771r 2  E6 rr            INC frameCountPlayerRightWalk
000773r 2               
000773r 2  60               RTS
000774r 2                 drawFrameAndFire3Label:
000774r 2  20 rr rr         JSR drawFrameAndFire3
000777r 2  E6 rr            INC frameCountPlayerRightWalk
000779r 2               
000779r 2  60               RTS
00077Ar 2               .endproc
00077Ar 2               
00077Ar 2               .proc drawFrameAndFire1
00077Ar 2  AD rr rr         LDA heroYCoordinate
00077Dr 2  8D 00 02         STA $0200
000780r 2  A9 02            LDA #$02
000782r 2  8D 01 02         STA $0201
000785r 2  A9 17            LDA #%00010111
000787r 2  8D 02 02         STA $0202
00078Ar 2  AD rr rr         LDA heroXCoordinate
00078Dr 2  8D 03 02         STA $0203
000790r 2               
000790r 2  AD rr rr         LDA heroYCoordinate
000793r 2  69 07            ADC #7
000795r 2  8D 04 02         STA $0204
000798r 2  A9 12            LDA #$12
00079Ar 2  8D 05 02         STA $0205
00079Dr 2  A9 17            LDA #%00010111
00079Fr 2  8D 06 02         STA $0206
0007A2r 2  AD rr rr         LDA heroXCoordinate
0007A5r 2  8D 07 02         STA $0207
0007A8r 2               
0007A8r 2  AD rr rr         LDA heroYCoordinate
0007ABr 2  69 10            ADC #16
0007ADr 2  8D 08 02         STA $0208
0007B0r 2  A9 22            LDA #$22
0007B2r 2  8D 09 02         STA $0209
0007B5r 2  A9 17            LDA #%00010111
0007B7r 2  8D 0A 02         STA $020A
0007BAr 2  AD rr rr         LDA heroXCoordinate
0007BDr 2  8D 0B 02         STA $020B
0007C0r 2               
0007C0r 2  AD rr rr         LDA heroYCoordinate
0007C3r 2  8D 0C 02         STA $020C
0007C6r 2  A9 03            LDA #$03
0007C8r 2  8D 0D 02         STA $020D
0007CBr 2  A9 17            LDA #%00010111
0007CDr 2  8D 0E 02         STA $020E
0007D0r 2  AD rr rr         LDA heroXCoordinate
0007D3r 2  69 08            ADC #8
0007D5r 2  8D 0F 02         STA $020F
0007D8r 2               
0007D8r 2  AD rr rr         LDA heroYCoordinate
0007DBr 2  69 08            ADC #8
0007DDr 2  8D 10 02         STA $0210
0007E0r 2  A9 13            LDA #$13
0007E2r 2  8D 11 02         STA $0211
0007E5r 2  A9 17            LDA #%00010111
0007E7r 2  8D 12 02         STA $0212
0007EAr 2  AD rr rr         LDA heroXCoordinate
0007EDr 2  69 08            ADC #8
0007EFr 2  8D 13 02         STA $0213
0007F2r 2               
0007F2r 2  AD rr rr         LDA heroYCoordinate
0007F5r 2  69 10            ADC #16
0007F7r 2  8D 14 02         STA $0214
0007FAr 2  A9 23            LDA #$23
0007FCr 2  8D 15 02         STA $0215
0007FFr 2  A9 17            LDA #%00010111
000801r 2  8D 16 02         STA $0216
000804r 2  AD rr rr         LDA heroXCoordinate
000807r 2  69 08            ADC #8
000809r 2  8D 17 02         STA $0217
00080Cr 2               
00080Cr 2  AD rr rr         LDA heroYCoordinate
00080Fr 2  8D 18 02         STA $0218
000812r 2  A9 04            LDA #$04
000814r 2  8D 19 02         STA $0219
000817r 2  A9 16            LDA #%00010110
000819r 2  8D 1A 02         STA $021A
00081Cr 2  AD rr rr         LDA heroXCoordinate
00081Fr 2  69 06            ADC #6
000821r 2  8D 1B 02         STA $021B
000824r 2               
000824r 2  60               RTS
000825r 2               .endproc
000825r 2               
000825r 2               .proc drawFrameAndFire2
000825r 2  AD rr rr         LDA heroYCoordinate
000828r 2  8D 00 02         STA $0200
00082Br 2  A9 02            LDA #$02
00082Dr 2  8D 01 02         STA $0201
000830r 2  A9 17            LDA #%00010111
000832r 2  8D 02 02         STA $0202
000835r 2  AD rr rr         LDA heroXCoordinate
000838r 2  8D 03 02         STA $0203
00083Br 2               
00083Br 2  AD rr rr         LDA heroYCoordinate
00083Er 2  69 07            ADC #7
000840r 2  8D 04 02         STA $0204
000843r 2  A9 14            LDA #$14
000845r 2  8D 05 02         STA $0205
000848r 2  A9 17            LDA #%00010111
00084Ar 2  8D 06 02         STA $0206
00084Dr 2  AD rr rr         LDA heroXCoordinate
000850r 2  8D 07 02         STA $0207
000853r 2               
000853r 2  AD rr rr         LDA heroYCoordinate
000856r 2  69 10            ADC #16
000858r 2  8D 08 02         STA $0208
00085Br 2  A9 24            LDA #$24
00085Dr 2  8D 09 02         STA $0209
000860r 2  A9 17            LDA #%00010111
000862r 2  8D 0A 02         STA $020A
000865r 2  AD rr rr         LDA heroXCoordinate
000868r 2  8D 0B 02         STA $020B
00086Br 2               
00086Br 2  AD rr rr         LDA heroYCoordinate
00086Er 2  8D 0C 02         STA $020C
000871r 2  A9 03            LDA #$03
000873r 2  8D 0D 02         STA $020D
000876r 2  A9 17            LDA #%00010111
000878r 2  8D 0E 02         STA $020E
00087Br 2  AD rr rr         LDA heroXCoordinate
00087Er 2  69 08            ADC #8
000880r 2  8D 0F 02         STA $020F
000883r 2               
000883r 2  AD rr rr         LDA heroYCoordinate
000886r 2  69 08            ADC #8
000888r 2  8D 10 02         STA $0210
00088Br 2  A9 13            LDA #$13
00088Dr 2  8D 11 02         STA $0211
000890r 2  A9 17            LDA #%00010111
000892r 2  8D 12 02         STA $0212
000895r 2  AD rr rr         LDA heroXCoordinate
000898r 2  69 08            ADC #8
00089Ar 2  8D 13 02         STA $0213
00089Dr 2               
00089Dr 2  AD rr rr         LDA heroYCoordinate
0008A0r 2  69 10            ADC #16
0008A2r 2  8D 14 02         STA $0214
0008A5r 2  A9 25            LDA #$25
0008A7r 2  8D 15 02         STA $0215
0008AAr 2  A9 17            LDA #%00010111
0008ACr 2  8D 16 02         STA $0216
0008AFr 2  AD rr rr         LDA heroXCoordinate
0008B2r 2  69 08            ADC #8
0008B4r 2  8D 17 02         STA $0217
0008B7r 2               
0008B7r 2  AD rr rr         LDA heroYCoordinate
0008BAr 2  8D 18 02         STA $0218
0008BDr 2  A9 04            LDA #$04
0008BFr 2  8D 19 02         STA $0219
0008C2r 2  A9 16            LDA #%00010110
0008C4r 2  8D 1A 02         STA $021A
0008C7r 2  AD rr rr         LDA heroXCoordinate
0008CAr 2  69 06            ADC #6
0008CCr 2  8D 1B 02         STA $021B
0008CFr 2  60               RTS
0008D0r 2               .endproc
0008D0r 2               
0008D0r 2               .proc drawFrameAndFire3
0008D0r 2  AD rr rr         LDA heroYCoordinate
0008D3r 2  8D 00 02         STA $0200
0008D6r 2  A9 02            LDA #$02
0008D8r 2  8D 01 02         STA $0201
0008DBr 2  A9 17            LDA #%00010111
0008DDr 2  8D 02 02         STA $0202
0008E0r 2  AD rr rr         LDA heroXCoordinate
0008E3r 2  8D 03 02         STA $0203
0008E6r 2               
0008E6r 2  AD rr rr         LDA heroYCoordinate
0008E9r 2  69 07            ADC #7
0008EBr 2  8D 04 02         STA $0204
0008EEr 2  A9 16            LDA #$16
0008F0r 2  8D 05 02         STA $0205
0008F3r 2  A9 17            LDA #%00010111
0008F5r 2  8D 06 02         STA $0206
0008F8r 2  AD rr rr         LDA heroXCoordinate
0008FBr 2  8D 07 02         STA $0207
0008FEr 2               
0008FEr 2  AD rr rr         LDA heroYCoordinate
000901r 2  69 10            ADC #16
000903r 2  8D 08 02         STA $0208
000906r 2  A9 26            LDA #$26
000908r 2  8D 09 02         STA $0209
00090Br 2  A9 17            LDA #%00010111
00090Dr 2  8D 0A 02         STA $020A
000910r 2  AD rr rr         LDA heroXCoordinate
000913r 2  8D 0B 02         STA $020B
000916r 2               
000916r 2  AD rr rr         LDA heroYCoordinate
000919r 2  8D 0C 02         STA $020C
00091Cr 2  A9 03            LDA #$03
00091Er 2  8D 0D 02         STA $020D
000921r 2  A9 17            LDA #%00010111
000923r 2  8D 0E 02         STA $020E
000926r 2  AD rr rr         LDA heroXCoordinate
000929r 2  69 08            ADC #8
00092Br 2  8D 0F 02         STA $020F
00092Er 2               
00092Er 2  AD rr rr         LDA heroYCoordinate
000931r 2  69 08            ADC #8
000933r 2  8D 10 02         STA $0210
000936r 2  A9 13            LDA #$13
000938r 2  8D 11 02         STA $0211
00093Br 2  A9 17            LDA #%00010111
00093Dr 2  8D 12 02         STA $0212
000940r 2  AD rr rr         LDA heroXCoordinate
000943r 2  69 08            ADC #8
000945r 2  8D 13 02         STA $0213
000948r 2               
000948r 2  AD rr rr         LDA heroYCoordinate
00094Br 2  69 10            ADC #16
00094Dr 2  8D 14 02         STA $0214
000950r 2  A9 27            LDA #$27
000952r 2  8D 15 02         STA $0215
000955r 2  A9 17            LDA #%00010111
000957r 2  8D 16 02         STA $0216
00095Ar 2  AD rr rr         LDA heroXCoordinate
00095Dr 2  69 08            ADC #8
00095Fr 2  8D 17 02         STA $0217
000962r 2               
000962r 2  AD rr rr         LDA heroYCoordinate
000965r 2  8D 18 02         STA $0218
000968r 2  A9 04            LDA #$04
00096Ar 2  8D 19 02         STA $0219
00096Dr 2  A9 16            LDA #%00010110
00096Fr 2  8D 1A 02         STA $021A
000972r 2  AD rr rr         LDA heroXCoordinate
000975r 2  69 06            ADC #6
000977r 2  8D 1B 02         STA $021B
00097Ar 2               
00097Ar 2  60               RTS
00097Br 2               .endproc
00097Br 2               
00097Br 1               .include "./lib/heroStates/heroWalkLeftAndFire.asm"
00097Br 2               .segment "CODE"
00097Br 2               
00097Br 2               .proc firstProcHeroWalkLeftAndFire
00097Br 2  60             RTS
00097Cr 2               .endproc
00097Cr 2               
00097Cr 2               .proc heroLeftWalkFire
00097Cr 2               ; todo dorabotat' esli geroy v levo idet do ekrana
00097Cr 2               ;  LDA scrollPosition
00097Cr 2               ;  CMP heroXCoordinate
00097Cr 2               ;  BCS stopDecrement
00097Cr 2               ;  BNE decrementX
00097Cr 2               ;  stopDecrement:
00097Cr 2               ;    RTS
00097Cr 2               ;  decrementX:
00097Cr 2  CE rr rr         DEC heroXCoordinate
00097Fr 2  60               RTS
000980r 2                 ; todo check left screen border
000980r 2               .endproc
000980r 2               
000980r 2               .proc drawHeroLeftAndFire
000980r 2  A5 rr            LDA scrollCounter
000982r 2  29 08            AND #8
000984r 2  C9 01            CMP #1
000986r 2  F0 08            BEQ drawLeftAndFireFrame1Label
000988r 2  29 08            AND #8
00098Ar 2  F0 0A            BEQ drawLeftAndFireFrame2Label
00098Cr 2  29 0A            AND #10
00098Er 2  F0 0C            BEQ drawLeftAndFireFrame3Label
000990r 2               
000990r 2                 drawLeftAndFireFrame1Label:
000990r 2  20 rr rr         JSR drawLeftAndFireFrame1
000993r 2  E6 rr            INC frameCountPlayerRightWalk
000995r 2  60               RTS
000996r 2                 drawLeftAndFireFrame2Label:
000996r 2  20 rr rr         JSR drawLeftAndFireFrame2
000999r 2  E6 rr            INC frameCountPlayerRightWalk
00099Br 2  60               RTS
00099Cr 2                 drawLeftAndFireFrame3Label:
00099Cr 2  20 rr rr         JSR drawLeftAndFireFrame3
00099Fr 2  E6 rr            INC frameCountPlayerRightWalk
0009A1r 2  60               RTS
0009A2r 2               .endproc
0009A2r 2               
0009A2r 2               .proc drawLeftAndFireFrame1
0009A2r 2  AD rr rr         LDA heroYCoordinate
0009A5r 2  8D 00 02         STA $0200
0009A8r 2  A9 02            LDA #$02
0009AAr 2  8D 01 02         STA $0201
0009ADr 2  A9 57            LDA #%01010111
0009AFr 2  8D 02 02         STA $0202
0009B2r 2  AD rr rr         LDA heroXCoordinate
0009B5r 2  69 08            ADC #8
0009B7r 2  8D 03 02         STA $0203
0009BAr 2               
0009BAr 2  AD rr rr         LDA heroYCoordinate
0009BDr 2  69 07            ADC #7
0009BFr 2  8D 04 02         STA $0204
0009C2r 2  A9 12            LDA #$12
0009C4r 2  8D 05 02         STA $0205
0009C7r 2  A9 57            LDA #%01010111
0009C9r 2  8D 06 02         STA $0206
0009CCr 2  AD rr rr         LDA heroXCoordinate
0009CFr 2  69 08            ADC #8
0009D1r 2  8D 07 02         STA $0207
0009D4r 2               
0009D4r 2  AD rr rr         LDA heroYCoordinate
0009D7r 2  69 10            ADC #16
0009D9r 2  8D 08 02         STA $0208
0009DCr 2  A9 22            LDA #$22
0009DEr 2  8D 09 02         STA $0209
0009E1r 2  A9 57            LDA #%01010111
0009E3r 2  8D 0A 02         STA $020A
0009E6r 2  AD rr rr         LDA heroXCoordinate
0009E9r 2  69 08            ADC #8
0009EBr 2  8D 0B 02         STA $020B
0009EEr 2               
0009EEr 2  AD rr rr         LDA heroYCoordinate
0009F1r 2  8D 0C 02         STA $020C
0009F4r 2  A9 03            LDA #$03
0009F6r 2  8D 0D 02         STA $020D
0009F9r 2  A9 57            LDA #%01010111
0009FBr 2  8D 0E 02         STA $020E
0009FEr 2  AD rr rr         LDA heroXCoordinate
000A01r 2  8D 0F 02         STA $020F
000A04r 2               
000A04r 2  AD rr rr         LDA heroYCoordinate
000A07r 2  69 08            ADC #8
000A09r 2  8D 10 02         STA $0210
000A0Cr 2  A9 13            LDA #$13
000A0Er 2  8D 11 02         STA $0211
000A11r 2  A9 57            LDA #%01010111
000A13r 2  8D 12 02         STA $0212
000A16r 2  AD rr rr         LDA heroXCoordinate
000A19r 2  8D 13 02         STA $0213
000A1Cr 2               
000A1Cr 2  AD rr rr         LDA heroYCoordinate
000A1Fr 2  69 10            ADC #16
000A21r 2  8D 14 02         STA $0214
000A24r 2  A9 23            LDA #$23
000A26r 2  8D 15 02         STA $0215
000A29r 2  A9 57            LDA #%01010111
000A2Br 2  8D 16 02         STA $0216
000A2Er 2  AD rr rr         LDA heroXCoordinate
000A31r 2  8D 17 02         STA $0217
000A34r 2               
000A34r 2  AD rr rr         LDA heroYCoordinate
000A37r 2  8D 18 02         STA $0218
000A3Ar 2  A9 04            LDA #$04
000A3Cr 2  8D 19 02         STA $0219
000A3Fr 2  A9 16            LDA #%00010110
000A41r 2  8D 1A 02         STA $021A
000A44r 2  AD rr rr         LDA heroXCoordinate
000A47r 2  8D 1B 02         STA $021B
000A4Ar 2  60               RTS
000A4Br 2               .endproc
000A4Br 2               
000A4Br 2               .proc drawLeftAndFireFrame2
000A4Br 2  AD rr rr         LDA heroYCoordinate
000A4Er 2  8D 00 02         STA $0200
000A51r 2  A9 02            LDA #$02
000A53r 2  8D 01 02         STA $0201
000A56r 2  A9 57            LDA #%01010111
000A58r 2  8D 02 02         STA $0202
000A5Br 2  AD rr rr         LDA heroXCoordinate
000A5Er 2  69 07            ADC #7
000A60r 2  8D 03 02         STA $0203
000A63r 2               
000A63r 2  AD rr rr         LDA heroYCoordinate
000A66r 2  69 08            ADC #8
000A68r 2  8D 04 02         STA $0204
000A6Br 2  A9 14            LDA #$14
000A6Dr 2  8D 05 02         STA $0205
000A70r 2  A9 57            LDA #%01010111
000A72r 2  8D 06 02         STA $0206
000A75r 2  AD rr rr         LDA heroXCoordinate
000A78r 2  69 08            ADC #8
000A7Ar 2  8D 07 02         STA $0207
000A7Dr 2               
000A7Dr 2  AD rr rr         LDA heroYCoordinate
000A80r 2  69 10            ADC #16
000A82r 2  8D 08 02         STA $0208
000A85r 2  A9 24            LDA #$24
000A87r 2  8D 09 02         STA $0209
000A8Ar 2  A9 57            LDA #%01010111
000A8Cr 2  8D 0A 02         STA $020A
000A8Fr 2  AD rr rr         LDA heroXCoordinate
000A92r 2  69 08            ADC #8
000A94r 2  8D 0B 02         STA $020B
000A97r 2               
000A97r 2  AD rr rr         LDA heroYCoordinate
000A9Ar 2  8D 0C 02         STA $020C
000A9Dr 2  A9 03            LDA #$03
000A9Fr 2  8D 0D 02         STA $020D
000AA2r 2  A9 57            LDA #%01010111
000AA4r 2  8D 0E 02         STA $020E
000AA7r 2  AD rr rr         LDA heroXCoordinate
000AAAr 2  8D 0F 02         STA $020F
000AADr 2               
000AADr 2  AD rr rr         LDA heroYCoordinate
000AB0r 2  69 08            ADC #8
000AB2r 2  8D 10 02         STA $0210
000AB5r 2  A9 13            LDA #$13
000AB7r 2  8D 11 02         STA $0211
000ABAr 2  A9 57            LDA #%01010111
000ABCr 2  8D 12 02         STA $0212
000ABFr 2  AD rr rr         LDA heroXCoordinate
000AC2r 2  8D 13 02         STA $0213
000AC5r 2               
000AC5r 2  AD rr rr         LDA heroYCoordinate
000AC8r 2  69 10            ADC #16
000ACAr 2  8D 14 02         STA $0214
000ACDr 2  A9 25            LDA #$25
000ACFr 2  8D 15 02         STA $0215
000AD2r 2  A9 57            LDA #%01010111
000AD4r 2  8D 16 02         STA $0216
000AD7r 2  AD rr rr         LDA heroXCoordinate
000ADAr 2  8D 17 02         STA $0217
000ADDr 2               
000ADDr 2  AD rr rr         LDA heroYCoordinate
000AE0r 2  8D 18 02         STA $0218
000AE3r 2  A9 04            LDA #$04
000AE5r 2  8D 19 02         STA $0219
000AE8r 2  A9 16            LDA #%00010110
000AEAr 2  8D 1A 02         STA $021A
000AEDr 2  AD rr rr         LDA heroXCoordinate
000AF0r 2  8D 1B 02         STA $021B
000AF3r 2               
000AF3r 2  60               RTS
000AF4r 2               .endproc
000AF4r 2               
000AF4r 2               .proc drawLeftAndFireFrame3
000AF4r 2  AD rr rr         LDA heroYCoordinate
000AF7r 2  8D 00 02         STA $0200
000AFAr 2  A9 02            LDA #$02
000AFCr 2  8D 01 02         STA $0201
000AFFr 2  A9 57            LDA #%01010111
000B01r 2  8D 02 02         STA $0202
000B04r 2  AD rr rr         LDA heroXCoordinate
000B07r 2  69 08            ADC #8
000B09r 2  8D 03 02         STA $0203
000B0Cr 2               
000B0Cr 2  AD rr rr         LDA heroYCoordinate
000B0Fr 2  69 07            ADC #7
000B11r 2  8D 04 02         STA $0204
000B14r 2  A9 16            LDA #$16
000B16r 2  8D 05 02         STA $0205
000B19r 2  A9 57            LDA #%01010111
000B1Br 2  8D 06 02         STA $0206
000B1Er 2  AD rr rr         LDA heroXCoordinate
000B21r 2  69 08            ADC #8
000B23r 2  8D 07 02         STA $0207
000B26r 2               
000B26r 2  AD rr rr         LDA heroYCoordinate
000B29r 2  69 10            ADC #16
000B2Br 2  8D 08 02         STA $0208
000B2Er 2  A9 26            LDA #$26
000B30r 2  8D 09 02         STA $0209
000B33r 2  A9 57            LDA #%01010111
000B35r 2  8D 0A 02         STA $020A
000B38r 2  AD rr rr         LDA heroXCoordinate
000B3Br 2  69 08            ADC #8
000B3Dr 2  8D 0B 02         STA $020B
000B40r 2               
000B40r 2  AD rr rr         LDA heroYCoordinate
000B43r 2  8D 0C 02         STA $020C
000B46r 2  A9 03            LDA #$03
000B48r 2  8D 0D 02         STA $020D
000B4Br 2  A9 57            LDA #%01010111
000B4Dr 2  8D 0E 02         STA $020E
000B50r 2  AD rr rr         LDA heroXCoordinate
000B53r 2  8D 0F 02         STA $020F
000B56r 2               
000B56r 2  AD rr rr         LDA heroYCoordinate
000B59r 2  69 08            ADC #8
000B5Br 2  8D 10 02         STA $0210
000B5Er 2  A9 13            LDA #$13
000B60r 2  8D 11 02         STA $0211
000B63r 2  A9 57            LDA #%01010111
000B65r 2  8D 12 02         STA $0212
000B68r 2  AD rr rr         LDA heroXCoordinate
000B6Br 2  8D 13 02         STA $0213
000B6Er 2               
000B6Er 2  AD rr rr         LDA heroYCoordinate
000B71r 2  69 10            ADC #16
000B73r 2  8D 14 02         STA $0214
000B76r 2  A9 27            LDA #$27
000B78r 2  8D 15 02         STA $0215
000B7Br 2  A9 57            LDA #%01010111
000B7Dr 2  8D 16 02         STA $0216
000B80r 2  AD rr rr         LDA heroXCoordinate
000B83r 2  8D 17 02         STA $0217
000B86r 2               
000B86r 2  AD rr rr         LDA heroYCoordinate
000B89r 2  8D 18 02         STA $0218
000B8Cr 2  A9 04            LDA #$04
000B8Er 2  8D 19 02         STA $0219
000B91r 2  A9 16            LDA #%00010110
000B93r 2  8D 1A 02         STA $021A
000B96r 2  AD rr rr         LDA heroXCoordinate
000B99r 2  8D 1B 02         STA $021B
000B9Cr 2  60               RTS
000B9Dr 2               .endproc
000B9Dr 2               
000B9Dr 1               .include "./lib/collisionOnMap.asm"
000B9Dr 2               .segment "ZEROPAGE"
00000Dr 2  xx              isGravity: .res 1
00000Er 2  xx              xOffset: .res 1
00000Fr 2  xx              nameTableLowByte: .res 1
000010r 2  xx              nameTableHighByte: .res 1
000011r 2  xx              collisionTmp: .res 1
000012r 2  xx              currentAdc: .res 1
000013r 2  xx              currentNameTable: .res 1
000014r 2  xx              fakeXCoordinate: .res 1
000015r 2  xx              collideDetection: .res 1 ; remove in to be
000016r 2               
000016r 2  xx              collideX: .res 1
000017r 2  xx              collideY: .res 1
000018r 2  xx              collideFlag: .res 1
000019r 2               
000019r 2  xx              collisionFirstLB: .res 1
00001Ar 2  xx              collisionSecondLB: .res 1
00001Br 2               
00001Br 2  xx xx xx xx     collisionRAM1: .res 128
00001Fr 2  xx xx xx xx  
000023r 2  xx xx xx xx  
00009Br 2               ;   collisionRAM2: .res 128
00009Br 2  xx              currentNameTableCollide: .res 1
00009Cr 2               
00009Cr 2  xx              collisionPart: .res 1
00009Dr 2  xx              tmpCompare: .res 1
00009Er 2               
00009Er 2               .segment "RODATA"
000058r 2               
000058r 2               collisionRectangle:
000058r 2                 ;    begin x, y
000058r 2  01 70          .byt $01, $70
00005Ar 2                 ;    end x, y
00005Ar 2  F8 D8          .byt $F8, $D8
00005Cr 2               
00005Cr 2               ; collision polygon 12*8, 27*8 and 15*8, 25*8
00005Cr 2               ; 13,27 | 18,27 | 14,26 | 19,26 | 15,25 | 20,25
00005Cr 2               ; 68,D8 | 90,D8 | 70,D0 | 98,D0 | 78,C8 | A0,C8
00005Cr 2               collisionPolygonOneX:
00005Cr 2  68             .byt $68 ; 1
00005Dr 2  90             .byt $90 ; 2
00005Er 2  70             .byt $70 ; 3
00005Fr 2               
00005Fr 2  98             .byt $98 ; 4
000060r 2  78             .byt $78 ; 5
000061r 2  A0             .byt $A0 ; 6
000062r 2               collisionPolygonOneY:
000062r 2  D8             .byt $D8
000063r 2  D8             .byt $D8
000064r 2  D0             .byt $D0
000065r 2               
000065r 2  D0             .byt $D0
000066r 2  C8             .byt $C8
000067r 2  C8             .byt $C8
000068r 2               
000068r 2               .segment "CODE"
000B9Dr 2                   COLLIDE_WATER =     %00000001
000B9Dr 2                   COLLIDE_PLACE =     %00000011
000B9Dr 2                   COLLIDE_BORDER =    %00000010
000B9Dr 2               
000B9Dr 2               .proc initVar
000B9Dr 2  A9 00            LDA #00
000B9Fr 2  85 rr            STA collisionPart
000BA1r 2               
000BA1r 2  60               rts
000BA2r 2               .endproc
000BA2r 2               
000BA2r 2               .proc collisionOnMapUp
000BA2r 2  A4 rr            LDY collideY
000BA4r 2  A2 01            LDX #01
000BA6r 2  98               TYA
000BA7r 2  DD rr rr         CMP collisionRectangle, x
000BAAr 2  B0 02            BCS collisionYNo
000BACr 2  90 05            BCC collisionYYes
000BAEr 2               collisionYNo:
000BAEr 2  A9 03            LDA #%00000011
000BB0r 2  85 rr            STA collideFlag
000BB2r 2  60               RTS
000BB3r 2               collisionYYes:
000BB3r 2  A9 00            LDA #%00000000
000BB5r 2  85 rr            STA collideFlag
000BB7r 2  60               RTS
000BB8r 2               .endproc
000BB8r 2               
000BB8r 2               .proc collisionOnMapLeft
000BB8r 2  A4 rr            LDY collideX
000BBAr 2  A2 00            LDX #00
000BBCr 2  98               TYA
000BBDr 2  DD rr rr         CMP collisionRectangle, x
000BC0r 2  90 07            BCC collisionNo
000BC2r 2  B0 00            BCS collisionYes
000BC4r 2               collisionYes:
000BC4r 2  A9 03            LDA #%00000011
000BC6r 2  85 rr            STA collideFlag
000BC8r 2  60               RTS
000BC9r 2               collisionNo:
000BC9r 2  A9 00            LDA #%00000000
000BCBr 2  85 rr            STA collideFlag
000BCDr 2  60               RTS
000BCEr 2               .endproc
000BCEr 2               
000BCEr 2               .proc collisionOnPolygonX
000BCEr 2  A4 rr            LDY collideX
000BD0r 2  A2 02            LDX #02
000BD2r 2  98               TYA
000BD3r 2  DD rr rr         CMP collisionPolygonOneX, x
000BD6r 2  B0 02            BCS checkCollideY
000BD8r 2  90 09            BCC collisionYes
000BDAr 2               checkCollideY:
000BDAr 2  A5 rr            LDA collideY
000BDCr 2  DD rr rr         CMP collisionPolygonOneY, x
000BDFr 2  B0 07            BCS collisionNo
000BE1r 2  90 00            BCC collisionYes
000BE3r 2               collisionYes:
000BE3r 2  A9 03            LDA #%00000011
000BE5r 2  85 rr            STA collideFlag
000BE7r 2  60               RTS
000BE8r 2               collisionNo:
000BE8r 2  A9 00            LDA #%00000000
000BEAr 2  85 rr            STA collideFlag
000BECr 2  60               RTS
000BEDr 2               .endproc
000BEDr 2               
000BEDr 2               .proc collisionOnPolygonY
000BEDr 2  A5 rr            LDA collideY
000BEFr 2  A2 02            LDX #02
000BF1r 2  DD rr rr         CMP collisionPolygonOneY, x
000BF4r 2  B0 07            BCS collisionNo
000BF6r 2  90 00            BCC collisionYes
000BF8r 2               collisionYes:
000BF8r 2  A9 03            LDA #%00000011
000BFAr 2  85 rr            STA collideFlag
000BFCr 2  60               RTS
000BFDr 2               collisionNo:
000BFDr 2  A9 00            LDA #%00000000
000BFFr 2  85 rr            STA collideFlag
000C01r 2  60               RTS
000C02r 2               .endproc
000C02r 2               
000C02r 2               .proc collisionOnMapRight
000C02r 2  20 rr rr         JSR collisionOnPolygonX
000C05r 2  60               RTS
000C06r 2               .endproc
000C06r 2               
000C06r 2               .proc collisionOnMapDown
000C06r 2  A4 rr            LDY collideY
000C08r 2  A2 03            LDX #03
000C0Ar 2  98               TYA
000C0Br 2  DD rr rr         CMP collisionRectangle, x
000C0Er 2  B0 07            BCS collisionNo
000C10r 2  90 00            BCC collisionYes
000C12r 2               collisionYes:
000C12r 2  A9 03            LDA #%00000011
000C14r 2  85 rr            STA collideFlag
000C16r 2  60               RTS
000C17r 2               collisionNo:
000C17r 2  A9 00            LDA #%00000000
000C19r 2  85 rr            STA collideFlag
000C1Br 2  60               RTS
000C1Cr 2               .endproc
000C1Cr 2               
000C1Cr 1               .include "./lib/joypad.asm"
000C1Cr 2               
000C1Cr 2               .segment "RODATA"
000068r 2               
000068r 2               
000068r 2               .segment "CODE"
000C1Cr 2               
000C1Cr 2               	BUTTON_A      = 1 << 7
000C1Cr 2               	BUTTON_B      = 1 << 6
000C1Cr 2               	BUTTON_SELECT = 1 << 5
000C1Cr 2               	BUTTON_START  = 1 << 4
000C1Cr 2               	BUTTON_UP     = 1 << 3
000C1Cr 2               	BUTTON_DOWN   = 1 << 2
000C1Cr 2               	BUTTON_LEFT   = 1 << 1
000C1Cr 2               	BUTTON_RIGHT  = 1 << 0
000C1Cr 2               
000C1Cr 2               .proc readJoyPad
000C1Cr 2                 readJoyPad:
000C1Cr 2  A2 00            LDX  #$00
000C1Er 2  A9 01            LDA  #$01
000C20r 2  8D 16 40         STA  $4016
000C23r 2  A9 00            LDA  #$00
000C25r 2  8D 16 40         STA  $4016
000C28r 2               
000C28r 2  A0 08            LDY #$08 ; счетчик для цикла
000C2Ar 2                 readJoyCycle:
000C2Ar 2  BD 16 40         LDA $4016,x
000C2Dr 2  4A               LSR
000C2Er 2  7E rr rr         ROR joyState,x
000C31r 2  88               DEY
000C32r 2  D0 F6            BNE readJoyCycle
000C34r 2               
000C34r 2  60               RTS
000C35r 2               .endproc
000C35r 2               
000C35r 2               
000C35r 1               .include "./lib/apu.asm"
000C35r 2               
000C35r 2               .segment "RODATA"
000068r 2               regs:
000068r 2  30 08 00 00          .byt $30,$08,$00,$00
00006Cr 2  30 08 00 00          .byt $30,$08,$00,$00
000070r 2  80 00 00 00          .byt $80,$00,$00,$00
000074r 2  30 00 00 00          .byt $30,$00,$00,$00
000078r 2  00 00 00 00          .byt $00,$00,$00,$00
00007Cr 2               
00007Cr 2               periodTableLo:
00007Cr 2  F1 7F 13 AD    .byt $f1,$7f,$13,$ad,$4d,$f3,$9d,$4c,$00,$b8,$74,$34
000080r 2  4D F3 9D 4C  
000084r 2  00 B8 74 34  
000088r 2  F8 BF 89 56    .byt $f8,$bf,$89,$56,$26,$f9,$ce,$a6,$80,$5c,$3a,$1a
00008Cr 2  26 F9 CE A6  
000090r 2  80 5C 3A 1A  
000094r 2  FB DF C4 AB    .byt $fb,$df,$c4,$ab,$93,$7c,$67,$52,$3f,$2d,$1c,$0c
000098r 2  93 7C 67 52  
00009Cr 2  3F 2D 1C 0C  
0000A0r 2  FD EF E1 D5    .byt $fd,$ef,$e1,$d5,$c9,$bd,$b3,$a9,$9f,$96,$8e,$86
0000A4r 2  C9 BD B3 A9  
0000A8r 2  9F 96 8E 86  
0000ACr 2  7E 77 70 6A    .byt $7e,$77,$70,$6a,$64,$5e,$59,$54,$4f,$4b,$46,$42
0000B0r 2  64 5E 59 54  
0000B4r 2  4F 4B 46 42  
0000B8r 2  3F 3B 38 34    .byt $3f,$3b,$38,$34,$31,$2f,$2c,$29,$27,$25,$23,$21
0000BCr 2  31 2F 2C 29  
0000C0r 2  27 25 23 21  
0000C4r 2  1F 1D 1B 1A    .byt $1f,$1d,$1b,$1a,$18,$17,$15,$14
0000C8r 2  18 17 15 14  
0000CCr 2               
0000CCr 2               periodTableHi:
0000CCr 2  07 07 07 06    .byt $07,$07,$07,$06,$06,$05,$05,$05,$05,$04,$04,$04
0000D0r 2  06 05 05 05  
0000D4r 2  05 04 04 04  
0000D8r 2  03 03 03 03    .byt $03,$03,$03,$03,$03,$02,$02,$02,$02,$02,$02,$02
0000DCr 2  03 02 02 02  
0000E0r 2  02 02 02 02  
0000E4r 2  01 01 01 01    .byt $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01
0000E8r 2  01 01 01 01  
0000ECr 2  01 01 01 01  
0000F0r 2  00 00 00 00    .byt $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
0000F4r 2  00 00 00 00  
0000F8r 2  00 00 00 00  
0000FCr 2  00 00 00 00    .byt $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
000100r 2  00 00 00 00  
000104r 2  00 00 00 00  
000108r 2  00 00 00 00    .byt $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
00010Cr 2  00 00 00 00  
000110r 2  00 00 00 00  
000114r 2  00 00 00 00    .byt $00,$00,$00,$00,$00,$00,$00,$00
000118r 2  00 00 00 00  
00011Cr 2               
00011Cr 2               .segment "CODE"
000C35r 2               
000C35r 2               .proc init_apu
000C35r 2                       ; Init $4000-4013
000C35r 2  A0 13                ldy #$13
000C37r 2                 loop:
000C37r 2  B9 rr rr             lda regs,y
000C3Ar 2  99 00 40             sta $4000,y
000C3Dr 2  88                   dey
000C3Er 2  10 F7                bpl loop
000C40r 2               
000C40r 2                       ; We have to skip over $4014 (OAMDMA)
000C40r 2  A9 0F                lda #$0f
000C42r 2  8D 15 40             sta $4015
000C45r 2  A9 40                lda #$40
000C47r 2  8D 17 40             sta $4017
000C4Ar 2               
000C4Ar 2  60                   rts
000C4Br 2                 .endproc
000C4Br 2               
000C4Br 2               .proc playMusic
000C4Br 2  68              pla
000C4Cr 2  AA              tax
000C4Dr 2  BD rr rr        lda periodTableHi,x
000C50r 2  4A              lsr a
000C51r 2  8D 0B 40        sta $400B
000C54r 2               
000C54r 2  BD rr rr        lda periodTableLo,x
000C57r 2  6A              ror a
000C58r 2  8D 0A 40        sta $400A
000C5Br 2  E8              inx
000C5Cr 2  8A              txa
000C5Dr 2  C9 14           cmp #20
000C5Fr 2  F0 02           beq resetX
000C61r 2  D0 03           bne resetDone
000C63r 2                  resetX:
000C63r 2  A2 00           ldx #00
000C65r 2  8A              txa
000C66r 2                  resetDone:
000C66r 2  48              pha
000C67r 2               
000C67r 2  60              rts
000C68r 2               .endproc
000C68r 2               
000C68r 1               .include "./lib/stages/stageOne.asm"
000C68r 2               .segment "RODATA"
00011Cr 2                   map_level_1:
00011Cr 2  11 11 11 11          .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 1
000120r 2  11 11 11 11  
000124r 2  11 11 11 11  
00013Cr 2  11 11 11 11          .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 1
000140r 2  11 11 11 11  
000144r 2  11 11 11 11  
00015Cr 2  11 11 11 11          .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $03, $04, $05, $06, $11, $11, $11, $11 ; 2
000160r 2  11 11 11 11  
000164r 2  11 11 11 11  
00017Cr 2  11 11 11 11          .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $13, $14, $15, $16, $11, $11, $11, $11 ; 3
000180r 2  11 11 11 11  
000184r 2  11 11 11 11  
00019Cr 2  11 11 11 11          .byt $11, $11, $11, $11, $03, $04, $05, $06, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 4
0001A0r 2  03 04 05 06  
0001A4r 2  11 11 11 11  
0001BCr 2  11 11 11 11          .byt $11, $11, $11, $11, $13, $14, $15, $16, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 5
0001C0r 2  13 14 15 16  
0001C4r 2  11 11 11 11  
0001DCr 2  11 11 11 11          .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 6
0001E0r 2  11 11 11 11  
0001E4r 2  11 11 11 11  
0001FCr 2  11 11 11 11          .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 7
000200r 2  11 11 11 11  
000204r 2  11 11 11 11  
00021Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 8
000220r 2  11 11 11 11  
000224r 2  11 11 11 11  
00023Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 9
000240r 2  11 11 11 11  
000244r 2  11 11 11 11  
00025Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $03, $04, $05, $06, $11, $11,  $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 10
000260r 2  11 11 11 11  
000264r 2  11 11 11 11  
00027Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $13, $14, $15, $16, $11, $11,  $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 11
000280r 2  11 11 11 11  
000284r 2  11 11 11 11  
00029Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $20, $21, $11, $11, $11, $11, $11, $11, $11 ; 12
0002A0r 2  11 11 11 11  
0002A4r 2  11 11 11 11  
0002BCr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $30, $41, $11, $11, $11, $11, $11, $11, $11 ; 13
0002C0r 2  11 11 11 11  
0002C4r 2  11 11 11 11  
0002DCr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $30, $41, $11, $11, $11, $11, $11, $11, $11 ; 14
0002E0r 2  11 11 11 11  
0002E4r 2  11 11 11 11  
0002FCr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $30, $41, $11, $11, $11, $11, $11, $11, $11 ; 15
000300r 2  11 11 11 11  
000304r 2  11 11 11 11  
00031Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $30, $41, $11, $11, $11, $11, $11, $11, $11 ; 16
000320r 2  11 11 11 11  
000324r 2  11 11 11 11  
00033Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $30, $41, $11, $11, $11, $11, $11, $11, $11 ; 17
000340r 2  11 11 11 11  
000344r 2  11 11 11 11  
00035Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $40, $41, $11, $11, $11, $11, $11, $11, $11 ; 18
000360r 2  11 11 11 11  
000364r 2  11 11 11 11  
00037Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $20, $21, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $40, $41, $11, $11, $11, $11, $11, $11, $11 ; 19
000380r 2  20 21 11 11  
000384r 2  11 11 11 11  
00039Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $40, $41, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $20, $21, $11, $11, $11, $11, $40, $41, $11, $11, $11, $11, $11, $11, $11 ; 20
0003A0r 2  40 41 11 11  
0003A4r 2  11 11 11 11  
0003BCr 2  11 20 21 11    .byt $11, $20, $21, $11, $40, $41, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $40, $41, $11, $11, $11, $11, $40, $41, $11, $11, $11, $11, $11, $11, $11 ; 21
0003C0r 2  40 41 11 11  
0003C4r 2  11 11 11 11  
0003DCr 2  11 30 31 11    .byt $11, $30, $31, $11, $40, $41, $11, $11, $11, $11, $11, $11, $11, $11, $11, $20, $21, $30, $31, $11, $11, $11, $11, $40, $41, $11, $11, $11, $11, $11, $11, $11 ; 22
0003E0r 2  40 41 11 11  
0003E4r 2  11 11 11 11  
0003FCr 2  11 40 41 11    .byt $11, $40, $41, $11, $40, $41, $20, $21, $11, $11, $11, $11, $11, $11, $11, $30, $31, $30, $31, $11, $11, $20, $21, $40, $41, $11, $11, $11, $11, $11, $11, $11 ; 23
000400r 2  40 41 20 21  
000404r 2  11 11 11 11  
00041Cr 2  11 40 41 11    .byt $11, $40, $41, $11, $40, $41, $40, $41, $20, $21, $11, $11, $11, $11, $11, $40, $41, $30, $31, $20, $21, $30, $31, $40, $41, $11, $11, $11, $11, $11, $11, $11 ; 24
000420r 2  40 41 40 41  
000424r 2  20 21 11 11  
00043Cr 2  11 40 41 11    .byt $11, $40, $41, $11, $40, $41, $40, $41, $30, $31, $11, $11, $11, $11, $11, $40, $41, $30, $31, $30, $31, $30, $31, $40, $41, $11, $11, $11, $11, $11, $11, $11 ; 25
000440r 2  40 41 40 41  
000444r 2  30 31 11 11  
00045Cr 2  02 02 02 02    .byt $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $11, $11, $11, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $11, $02, $02, $02, $02 ; 26
000460r 2  02 02 02 02  
000464r 2  02 02 02 11  
00047Cr 2  01 01 01 01    .byt $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $11, $11, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $01, $01, $01, $01 ; 27
000480r 2  01 01 01 01  
000484r 2  01 01 01 11  
00049Cr 2  01 01 01 01    .byt $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $11, $11, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $01, $01, $01, $01 ; 28
0004A0r 2  01 01 01 01  
0004A4r 2  01 01 01 11  
0004BCr 2  01 01 01 01    .byt $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $11, $11, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $01, $01, $01, $01 ; 29
0004C0r 2  01 01 01 01  
0004C4r 2  01 01 01 11  
0004DCr 2  01 01 01 01    .byt $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $01, $01, $01, $01 ; 30
0004E0r 2  01 01 01 01  
0004E4r 2  01 01 01 01  
0004FCr 2  01 01 01 01    .byt $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $01, $01, $01, $01 ; 31
000500r 2  01 01 01 01  
000504r 2  01 01 01 01  
00051Cr 2  01 01 01 01    .byt $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $01, $01, $01 ; 32
000520r 2  01 01 01 01  
000524r 2  01 01 01 01  
00053Br 2               
00053Br 2               
00053Br 2               map_level_1_2:
00053Br 2               
00053Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00053Fr 2  11 11 11 11  
000543r 2  11 11 11 11  
00055Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00055Fr 2  11 11 11 11  
000563r 2  11 11 11 11  
00057Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
00057Fr 2  11 11 11 11  
000583r 2  11 11 11 11  
00059Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
00059Fr 2  11 11 11 11  
0005A3r 2  11 11 11 11  
0005BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $03, $13, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0005BFr 2  03 13 11 11  
0005C3r 2  11 11 11 11  
0005DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $04, $14, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0005DFr 2  04 14 11 11  
0005E3r 2  11 11 11 11  
0005FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $05, $15, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0005FFr 2  05 15 11 11  
000603r 2  11 11 11 11  
00061Br 2  11 11 11 11    .byt $11, $11, $11, $11, $06, $16, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00061Fr 2  06 16 11 11  
000623r 2  11 11 11 11  
00063Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $01, $01, $01, $01, $01, $01
00063Fr 2  11 11 11 11  
000643r 2  11 11 11 11  
00065Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $01, $01, $01, $01, $01, $01
00065Fr 2  11 11 11 11  
000663r 2  11 11 11 11  
00067Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $01, $01, $01, $01, $01, $01
00067Fr 2  11 11 11 11  
000683r 2  11 11 11 11  
00069Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00069Fr 2  11 11 11 11  
0006A3r 2  11 11 11 11  
0006BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0006BFr 2  11 11 11 11  
0006C3r 2  11 11 11 11  
0006DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0006DFr 2  11 11 11 11  
0006E3r 2  11 11 11 11  
0006FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0006FFr 2  11 11 11 11  
000703r 2  11 11 11 11  
00071Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00071Fr 2  11 11 11 11  
000723r 2  11 11 11 11  
00073Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00073Fr 2  11 11 11 11  
000743r 2  11 11 11 11  
00075Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
00075Fr 2  11 11 11 11  
000763r 2  11 11 11 11  
00077Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $02, $01, $01, $01, $01, $01, $01
00077Fr 2  11 11 11 11  
000783r 2  11 11 11 11  
00079Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $02, $01, $01, $01, $01, $01, $01
00079Fr 2  11 11 11 11  
0007A3r 2  11 11 11 11  
0007BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
0007BFr 2  11 11 11 11  
0007C3r 2  11 11 11 11  
0007DBr 2  11 11 03 13    .byt $11, $11, $03, $13, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0007DFr 2  11 11 11 11  
0007E3r 2  11 11 11 11  
0007FBr 2  11 11 04 14    .byt $11, $11, $04, $14, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0007FFr 2  11 11 11 11  
000803r 2  11 11 11 11  
00081Br 2  11 11 05 15    .byt $11, $11, $05, $15, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00081Fr 2  11 11 11 11  
000823r 2  11 11 11 11  
00083Br 2  11 11 06 16    .byt $11, $11, $06, $16, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
00083Fr 2  11 11 11 11  
000843r 2  11 11 11 11  
00085Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00085Fr 2  11 11 11 11  
000863r 2  11 11 11 11  
00087Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
00087Fr 2  11 11 11 11  
000883r 2  11 11 11 11  
00089Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00089Fr 2  11 11 11 11  
0008A3r 2  11 11 11 11  
0008BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
0008BFr 2  11 11 11 11  
0008C3r 2  11 11 11 11  
0008DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0008DFr 2  11 11 11 11  
0008E3r 2  11 11 11 11  
0008FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0008FFr 2  11 11 11 11  
000903r 2  11 11 11 11  
00091Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00091Fr 2  11 11 11 11  
000923r 2  11 11 11 11  
00093Br 2               
00093Br 2               map_level_1_page_1:
00093Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00093Fr 2  11 11 11 11  
000943r 2  11 11 11 11  
00095Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00095Fr 2  11 11 11 11  
000963r 2  11 11 11 11  
00097Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
00097Fr 2  11 11 11 11  
000983r 2  11 11 11 11  
00099Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
00099Fr 2  11 11 11 11  
0009A3r 2  11 11 11 11  
0009BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $03, $13, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0009BFr 2  03 13 11 11  
0009C3r 2  11 11 11 11  
0009DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $04, $14, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0009DFr 2  04 14 11 11  
0009E3r 2  11 11 11 11  
0009FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $05, $15, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0009FFr 2  05 15 11 11  
000A03r 2  11 11 11 11  
000A1Br 2  11 11 11 11    .byt $11, $11, $11, $11, $06, $16, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000A1Fr 2  06 16 11 11  
000A23r 2  11 11 11 11  
000A3Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000A3Fr 2  11 11 11 11  
000A43r 2  11 11 11 11  
000A5Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000A5Fr 2  11 11 11 11  
000A63r 2  11 11 11 11  
000A7Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000A7Fr 2  11 11 11 11  
000A83r 2  11 11 11 11  
000A9Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000A9Fr 2  11 11 11 11  
000AA3r 2  11 11 11 11  
000ABBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000ABFr 2  11 11 11 11  
000AC3r 2  11 11 11 11  
000ADBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000ADFr 2  11 11 11 11  
000AE3r 2  11 11 11 11  
000AFBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000AFFr 2  11 11 11 11  
000B03r 2  11 11 11 11  
000B1Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000B1Fr 2  11 11 11 11  
000B23r 2  11 11 11 11  
000B3Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000B3Fr 2  11 11 11 11  
000B43r 2  11 11 11 11  
000B5Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
000B5Fr 2  11 11 11 11  
000B63r 2  11 11 11 11  
000B7Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
000B7Fr 2  11 11 11 11  
000B83r 2  11 11 11 11  
000B9Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
000B9Fr 2  11 11 11 11  
000BA3r 2  11 11 11 11  
000BBBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
000BBFr 2  11 11 11 11  
000BC3r 2  11 11 11 11  
000BDBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000BDFr 2  11 11 11 11  
000BE3r 2  11 11 11 11  
000BFBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000BFFr 2  11 11 11 11  
000C03r 2  11 11 11 11  
000C1Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000C1Fr 2  11 11 11 11  
000C23r 2  11 11 11 11  
000C3Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000C3Fr 2  11 11 11 11  
000C43r 2  11 11 11 11  
000C5Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000C5Fr 2  11 11 11 11  
000C63r 2  11 11 11 11  
000C7Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000C7Fr 2  11 11 11 11  
000C83r 2  11 11 11 11  
000C9Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
000C9Fr 2  11 11 11 11  
000CA3r 2  11 11 11 11  
000CBBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000CBFr 2  11 11 11 11  
000CC3r 2  11 11 11 11  
000CDBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000CDFr 2  11 11 11 11  
000CE3r 2  11 11 11 11  
000CFBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000CFFr 2  11 11 11 11  
000D03r 2  11 11 11 11  
000D1Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000D1Fr 2  11 11 11 11  
000D23r 2  11 11 11 11  
000D3Br 2               
000D3Br 2               map_level_1_page_2:
000D3Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000D3Fr 2  11 11 11 11  
000D43r 2  11 11 11 11  
000D5Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000D5Fr 2  11 11 11 11  
000D63r 2  11 11 11 11  
000D7Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
000D7Fr 2  11 11 11 11  
000D83r 2  11 11 11 11  
000D9Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $11, $11, $11
000D9Fr 2  11 11 11 11  
000DA3r 2  11 11 11 11  
000DBBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000DBFr 2  11 11 11 11  
000DC3r 2  11 11 11 11  
000DDBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000DDFr 2  11 11 11 11  
000DE3r 2  11 11 11 11  
000DFBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000DFFr 2  11 11 11 11  
000E03r 2  11 11 11 11  
000E1Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000E1Fr 2  11 11 11 11  
000E23r 2  11 11 11 11  
000E3Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000E3Fr 2  11 11 11 11  
000E43r 2  11 11 11 11  
000E5Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000E5Fr 2  11 11 11 11  
000E63r 2  11 11 11 11  
000E7Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000E7Fr 2  11 11 11 11  
000E83r 2  11 11 11 11  
000E9Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000E9Fr 2  11 11 11 11  
000EA3r 2  11 11 11 11  
000EBBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000EBFr 2  11 11 11 11  
000EC3r 2  11 11 11 11  
000EDBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000EDFr 2  11 11 11 11  
000EE3r 2  11 11 11 11  
000EFBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000EFFr 2  11 11 11 11  
000F03r 2  11 11 11 11  
000F1Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000F1Fr 2  11 11 11 11  
000F23r 2  11 11 11 11  
000F3Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000F3Fr 2  11 11 11 11  
000F43r 2  11 11 11 11  
000F5Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
000F5Fr 2  11 11 11 11  
000F63r 2  11 11 11 11  
000F7Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $02, $01, $01, $01, $01, $01, $01
000F7Fr 2  11 11 11 11  
000F83r 2  11 11 11 11  
000F9Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $02, $02, $02, $02, $01, $01, $01, $01, $01, $01
000F9Fr 2  11 11 11 11  
000FA3r 2  11 11 11 11  
000FBBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $02, $01, $01, $01, $01, $01, $01
000FBFr 2  11 11 11 11  
000FC3r 2  11 11 11 11  
000FDBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000FDFr 2  11 11 11 11  
000FE3r 2  11 11 11 11  
000FFBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000FFFr 2  11 11 11 11  
001003r 2  11 11 11 11  
00101Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00101Fr 2  11 11 11 11  
001023r 2  11 11 11 11  
00103Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00103Fr 2  11 11 11 11  
001043r 2  11 11 11 11  
00105Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00105Fr 2  11 11 11 11  
001063r 2  11 11 11 11  
00107Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $01, $01, $01, $01, $01, $01
00107Fr 2  11 11 11 11  
001083r 2  11 11 11 11  
00109Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00109Fr 2  11 11 11 11  
0010A3r 2  11 11 11 11  
0010BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0010BFr 2  11 11 11 11  
0010C3r 2  11 11 11 11  
0010DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0010DFr 2  11 11 11 11  
0010E3r 2  11 11 11 11  
0010FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0010FFr 2  11 11 11 11  
001103r 2  11 11 11 11  
00111Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00111Fr 2  11 11 11 11  
001123r 2  11 11 11 11  
00113Br 2               
00113Br 2               map_level_1_page_3:
00113Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00113Fr 2  11 11 11 11  
001143r 2  11 11 11 11  
00115Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00115Fr 2  11 11 11 11  
001163r 2  11 11 11 11  
00117Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
00117Fr 2  11 11 11 11  
001183r 2  11 11 11 11  
00119Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
00119Fr 2  11 11 11 11  
0011A3r 2  11 11 11 11  
0011BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0011BFr 2  11 11 11 11  
0011C3r 2  11 11 11 11  
0011DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0011DFr 2  11 11 11 11  
0011E3r 2  11 11 11 11  
0011FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0011FFr 2  11 11 11 11  
001203r 2  11 11 11 11  
00121Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00121Fr 2  11 11 11 11  
001223r 2  11 11 11 11  
00123Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00123Fr 2  11 11 11 11  
001243r 2  11 11 11 11  
00125Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00125Fr 2  11 11 11 11  
001263r 2  11 11 11 11  
00127Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00127Fr 2  11 11 11 11  
001283r 2  11 11 11 11  
00129Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $11, $11, $11
00129Fr 2  11 11 11 11  
0012A3r 2  11 11 11 11  
0012BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0012BFr 2  11 11 11 11  
0012C3r 2  11 11 11 11  
0012DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0012DFr 2  11 11 11 11  
0012E3r 2  11 11 11 11  
0012FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0012FFr 2  11 11 11 11  
001303r 2  11 11 11 11  
00131Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00131Fr 2  11 11 11 11  
001323r 2  11 11 11 11  
00133Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00133Fr 2  11 11 11 11  
001343r 2  11 11 11 11  
00135Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $11, $11, $01, $01, $01, $01
00135Fr 2  11 11 11 11  
001363r 2  11 11 11 11  
00137Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $11, $11, $01, $01, $01, $01
00137Fr 2  11 11 11 11  
001383r 2  11 11 11 11  
00139Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
00139Fr 2  11 11 11 11  
0013A3r 2  11 11 11 11  
0013BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
0013BFr 2  11 11 11 11  
0013C3r 2  11 11 11 11  
0013DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0013DFr 2  11 11 11 11  
0013E3r 2  11 11 11 11  
0013FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0013FFr 2  11 11 11 11  
001403r 2  11 11 11 11  
00141Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00141Fr 2  11 11 11 11  
001423r 2  11 11 11 11  
00143Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00143Fr 2  11 11 11 11  
001443r 2  11 11 11 11  
00145Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00145Fr 2  11 11 11 11  
001463r 2  11 11 11 11  
00147Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
00147Fr 2  11 11 11 11  
001483r 2  11 11 11 11  
00149Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00149Fr 2  11 11 11 11  
0014A3r 2  11 11 11 11  
0014BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0014BFr 2  11 11 11 11  
0014C3r 2  11 11 11 11  
0014DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0014DFr 2  11 11 11 11  
0014E3r 2  11 11 11 11  
0014FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0014FFr 2  11 11 11 11  
001503r 2  11 11 11 11  
00151Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00151Fr 2  11 11 11 11  
001523r 2  11 11 11 11  
00153Br 2               
00153Br 2               
00153Br 2               attributeTableLevel1Page1:
00153Br 2                   ;   1    2    3    4    5    6    7    8
00153Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $FF, $00 ; !
00153Fr 2  00 00 FF 00  
001543r 2  00 FF 00 00    .byt $00, $FF, $00, $00, $00, $00, $00, $00 ; 2
001547r 2  00 00 00 00  
00154Br 2  00 00 00 FF    .byt $00, $00, $00, $FF, $00, $00, $00, $00 ; 3
00154Fr 2  00 00 00 00  
001553r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $55, $55, $00 ; 4
001557r 2  00 55 55 00  
00155Br 2  00 55 55 00    .byt $00, $55, $55, $00, $00, $55, $55, $00 ; 5
00155Fr 2  00 55 55 00  
001563r 2  55 55 55 55    .byt $55, $55, $55, $55, $55, $55, $55, $00 ; 6
001567r 2  55 55 55 00  
00156Br 2  A5 A5 A5 A5    .byt $A5, $A5, $A5, $A5, $A5, $A5, $A5, $AA ; 8
00156Fr 2  A5 A5 A5 AA  
001573r 2  AA AA AA AA    .byt $AA, $AA, $AA, $AA, $AA, $AA, $AA, $AA ; 8
001577r 2  AA AA AA AA  
00157Br 2               
00157Br 2               attributeTableLevel1Page2:
00157Br 2                   ;   1    2    3    4    5    6    7    8
00157Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; !
00157Fr 2  00 00 AA AA  
001583r 2  00 FF 00 00    .byt $00, $FF, $00, $00, $00, $00, $AA, $AA ; 2
001587r 2  00 00 AA AA  
00158Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; 3
00158Fr 2  00 00 AA AA  
001593r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; 4
001597r 2  00 00 AA AA  
00159Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $AA, $AA, $AA ; 5
00159Fr 2  00 AA AA AA  
0015A3r 2  FF 00 00 00    .byt $FF, $00, $00, $00, $00, $AA, $AA, $AA ; 6
0015A7r 2  00 AA AA AA  
0015ABr 2  FF 00 00 00    .byt $FF, $00, $00, $00, $00, $00, $AA, $AA ; 8
0015AFr 2  00 00 AA AA  
0015B3r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; 8
0015B7r 2  00 00 AA AA  
0015BBr 2               
0015BBr 2               attributeTableLevel1Page3:
0015BBr 2                   ;   1    2    3    4    5    6    7    8
0015BBr 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; !
0015BFr 2  00 00 AA AA  
0015C3r 2  00 FF 00 00    .byt $00, $FF, $00, $00, $00, $00, $AA, $AA ; 2
0015C7r 2  00 00 AA AA  
0015CBr 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; 3
0015CFr 2  00 00 AA AA  
0015D3r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; 4
0015D7r 2  00 00 AA AA  
0015DBr 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $AA, $AA, $AA ; 5
0015DFr 2  00 AA AA AA  
0015E3r 2  FF 00 00 00    .byt $FF, $00, $00, $00, $00, $AA, $AA, $AA ; 6
0015E7r 2  00 AA AA AA  
0015EBr 2  FF 00 00 00    .byt $FF, $00, $00, $00, $00, $00, $AA, $AA ; 8
0015EFr 2  00 00 AA AA  
0015F3r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; 8
0015F7r 2  00 00 AA AA  
0015FBr 2               
0015FBr 2               
0015FBr 2               .segment "CODE"
000C68r 2               
000C68r 2               .proc screenFactory
000C68r 2               
000C68r 2  AD rr rr         LDA scrollPosition
000C6Br 2  C9 FD            CMP #$FD
000C6Dr 2  F0 02            BEQ incrementScreenCount
000C6Fr 2  D0 06            BNE incrementScreenDone
000C71r 2               
000C71r 2                 incrementScreenCount:
000C71r 2  EE rr rr         INC screenCount
000C74r 2  4C rr rr         JMP incrementScreenDone
000C77r 2               
000C77r 2                 incrementScreenDone:
000C77r 2               
000C77r 2                 resetScreens:
000C77r 2               
000C77r 2                 loadScreens:
000C77r 2  AD rr rr         LDA screenCount
000C7Ar 2  C9 00            CMP #00
000C7Cr 2  F0 10            BEQ loadScreen1
000C7Er 2  C9 01            CMP #01
000C80r 2  F0 23            BEQ loadScreen2
000C82r 2  C9 02            CMP #02
000C84r 2  F0 36            BEQ loadScreen3
000C86r 2  C9 03            CMP #03
000C88r 2  F0 3F            BEQ loadScreen4
000C8Ar 2  C9 04            CMP #04
000C8Cr 2  F0 48            BEQ resetScreen
000C8Er 2               
000C8Er 2                 loadScreen1:
000C8Er 2  A2 rr            LDX #<map_level_1_2
000C90r 2  8E rr rr         STX lowMapByte
000C93r 2  A2 rr            LDX #>map_level_1_2
000C95r 2  8E rr rr         STX highMapByte
000C98r 2               
000C98r 2  A2 rr            LDX #<attributeTableLevel1Page2
000C9Ar 2  8E rr rr         STX lAB
000C9Dr 2  A2 rr            LDX #>attributeTableLevel1Page2
000C9Fr 2  8E rr rr         STX hAB
000CA2r 2               
000CA2r 2  4C rr rr         JMP loadScreenDone
000CA5r 2               
000CA5r 2                 loadScreen2:
000CA5r 2  A2 rr            LDX #<map_level_1_page_1
000CA7r 2  8E rr rr         STX lowMapByte
000CAAr 2  A2 rr            LDX #>map_level_1_page_1
000CACr 2  8E rr rr         STX highMapByte
000CAFr 2               
000CAFr 2  A2 rr            LDX #<attributeTableLevel1Page3
000CB1r 2  8E rr rr         STX lAB
000CB4r 2  A2 rr            LDX #>attributeTableLevel1Page3
000CB6r 2  8E rr rr         STX hAB
000CB9r 2               
000CB9r 2  4C rr rr         JMP loadScreenDone
000CBCr 2               
000CBCr 2                 loadScreen3:
000CBCr 2  A2 rr            LDX #<map_level_1_page_2
000CBEr 2  8E rr rr         STX lowMapByte
000CC1r 2  A2 rr            LDX #>map_level_1_page_2
000CC3r 2  8E rr rr         STX highMapByte
000CC6r 2  4C rr rr         JMP loadScreenDone
000CC9r 2               
000CC9r 2                 loadScreen4:
000CC9r 2  A2 rr            LDX #<map_level_1_page_3
000CCBr 2  8E rr rr         STX lowMapByte
000CCEr 2  A2 rr            LDX #>map_level_1_page_3
000CD0r 2  8E rr rr         STX highMapByte
000CD3r 2  4C rr rr         JMP loadScreenDone
000CD6r 2               
000CD6r 2                 resetScreen:
000CD6r 2  A2 00            LDX #00
000CD8r 2  8E rr rr         STX screenCount
000CDBr 2  4C rr rr         JMP resetScreens
000CDEr 2               
000CDEr 2                 loadScreenDone:
000CDEr 2  60               RTS
000CDFr 2               .endproc
000CDFr 2               
000CDFr 2               .proc loadStageOneBackground
000CDFr 2  A9 rr            LDA #<map_level_1
000CE1r 2  8D rr rr         STA mapLoByte       ; put the low byte of the address of background into pointer
000CE4r 2  A9 rr            LDA #>map_level_1
000CE6r 2  8D rr rr         STA mapHiByte       ; put the high byte of the address into pointer
000CE9r 2               .endproc
000CE9r 2               
000CE9r 1               .include "./lib/stages/stageTwo.asm"
000CE9r 2               .segment "RODATA"
0015FBr 2               
0015FBr 2               levelPalete:
0015FBr 2                   palette_data_stage_2:
0015FBr 2                           ; 00                        01              10              11
0015FBr 2  31 00 10 2D        		.byt $31,$00,$10,$2D,  $31,$1D,$27,$37,  $10,$1D,$27,$10,  $31,$3F,$3c,$02   ;;background
0015FFr 2  31 1D 27 37  
001603r 2  10 1D 27 10  
00160Br 2  32 10 1A 0F        		.byt $32,$10,$1A,$0F,  $32,$36,$17,$0F,  $10,$30,$21,$0F,  $32,$29,$05,$01   ;;sprite palette
00160Fr 2  32 36 17 0F  
001613r 2  10 30 21 0F  
00161Br 2               
00161Br 2               map_level_2:
00161Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 1
00161Fr 2  11 11 11 11  
001623r 2  11 11 11 11  
00163Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 1
00163Fr 2  11 11 11 11  
001643r 2  11 11 11 11  
00165Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $03, $04, $05, $06, $11, $11, $11, $11 ; 2
00165Fr 2  11 11 11 11  
001663r 2  11 11 11 11  
00167Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $13, $14, $15, $16, $11, $11, $11, $11 ; 3
00167Fr 2  11 11 11 11  
001683r 2  11 11 11 11  
00169Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 6
00169Fr 2  11 11 11 11  
0016A3r 2  11 11 11 11  
0016BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 7
0016BFr 2  11 11 11 11  
0016C3r 2  11 11 11 11  
0016DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $20, $21, $11, $11, $11, $11, $11, $11, $11 ; 12
0016DFr 2  11 11 11 11  
0016E3r 2  11 11 11 11  
0016FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $30, $41, $11, $11, $11, $11, $11, $11, $11 ; 17
0016FFr 2  11 11 11 11  
001703r 2  11 11 11 11  
00171Br 2  29 2A 29 2A    .byt $29, $2A, $29, $2A, $29, $2A, $29, $2A, $29, $2F, $11, $11, $11, $11, $11, $11, $11, $11, $3d, $3d, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 20
00171Fr 2  29 2A 29 2A  
001723r 2  29 2F 11 11  
00173Br 2  2C 2B 2C 2B    .byt $2C, $2B, $2C, $2B, $2c, $2b, $2c, $2b, $2c, $2E, $2F, $11, $11, $11, $11, $11, $11, $3d, $2e, $2e, $29, $2a, $29, $2A, $29, $2A, $29, $2A, $29, $2a, $29, $2a ; 20
00173Fr 2  2C 2B 2C 2B  
001743r 2  2C 2E 2F 11  
00175Br 2  2C 2B 2C 2B    .byt $2C, $2B, $2C, $2b, $2c, $2b, $2c, $2b, $2c, $2E, $2E, $2F, $11, $11, $11, $11, $3d, $2e, $2e, $2e, $2c, $2b, $2c, $2b, $2c, $2b, $2c, $2b, $2c, $2b, $2c, $2b ; 20
00175Fr 2  2C 2B 2C 2B  
001763r 2  2C 2E 2E 2F  
00177Br 2  2C 2B 2C 2B    .byt $2C, $2B, $2C, $2b, $2c, $2b, $2c, $2b, $2c, $2E, $2E, $2E, $2f, $11, $29, $2a, $2e, $2e, $2e, $2e, $2c, $2b, $2c, $2b, $2c, $2b, $2c, $2b, $2c, $2b, $2c, $2b ; 20
00177Fr 2  2C 2B 2C 2B  
001783r 2  2C 2E 2E 2E  
00179Br 2  2C 2B 2C 2B    .byt $2C, $2B, $2C, $2B, $2C, $2b, $2C, $2b, $2C, $2E, $2E, $2E, $2e, $2a, $2c, $2B, $2e, $2e, $2e, $2e, $2c, $2b, $2c, $2b, $2c, $2b, $2c, $2b, $2c, $2b, $2c, $2b ; 21
00179Fr 2  2C 2B 2C 2B  
0017A3r 2  2C 2E 2E 2E  
0017BBr 2  27 28 27 28    .byt $27, $28, $27, $28, $27, $28, $27, $28, $27, $2E, $2E, $2E, $2e, $2B, $2c, $2B, $2e, $2e, $2e, $2e, $27, $28, $27, $28, $27, $28, $27, $28, $27, $28, $27, $28 ; 22
0017BFr 2  27 28 27 28  
0017C3r 2  27 2E 2E 2E  
0017DBr 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $0A, $2D, $2E, $2E, $2e, $2B, $2C, $2B, $2e, $2e, $2e, $3f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 23
0017DFr 2  00 00 00 00  
0017E3r 2  0A 2D 2E 2E  
0017FBr 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $0A, $0A, $2D, $2E, $2e, $2B, $2C, $2B, $2e, $2e, $3f, $0a, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 23
0017FFr 2  00 00 00 00  
001803r 2  0A 0A 2D 2E  
00181Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0A, $2D, $2e, $2B, $2C, $2B, $2e, $3f, $0a, $0a, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 23
00181Fr 2  00 00 00 00  
001823r 2  00 00 0A 2D  
00183Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0A, $0A, $2D, $28, $27, $28, $3F, $0a, $0a, $0a, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 24
00183Fr 2  00 00 00 00  
001843r 2  00 00 0A 0A  
00185Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0a, $0a, $0a, $0a, $0a, $0a, $0a, $0a, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 25
00185Fr 2  00 00 00 00  
001863r 2  00 00 00 00  
00187Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0a, $0a, $0a, $0a, $0a, $0a, $0a, $0a, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 25
00187Fr 2  00 00 00 00  
001883r 2  00 00 00 00  
00189Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 25
00189Fr 2  00 00 00 00  
0018A3r 2  00 00 00 00  
0018BBr 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 25
0018BFr 2  00 00 00 00  
0018C3r 2  00 00 00 00  
0018DBr 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 25
0018DFr 2  00 00 00 00  
0018E3r 2  00 00 00 00  
0018FBr 2  00 3B 3B 3B    .byt $00, $3b, $3b, $3b, $00, $00, $3b, $3b, $3b, $00, $00, $00, $00, $00, $00, $00, $3b, $3b, $3b, $00, $00, $3b, $3b, $3b, $3b, $00, $00, $00, $3b, $3b, $3b, $00 ; 25
0018FFr 2  00 00 3B 3B  
001903r 2  3B 00 00 00  
00191Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $3b, $3b, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 25
00191Fr 2  00 00 00 00  
001923r 2  00 00 00 3B  
00193Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4E, $4D, $4D, $4D, $4D, $3C, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 26
00193Fr 2  00 00 00 00  
001943r 2  00 00 00 00  
00195Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4B, $4C, $11, $11, $11, $3e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 26
00195Fr 2  00 00 00 00  
001963r 2  00 00 00 00  
00197Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4B, $4c, $11, $11, $11, $3e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 29
00197Fr 2  00 00 00 00  
001983r 2  00 00 00 00  
00199Br 2  4D 4D 4D 4D    .byt $4D, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4f, $4c, $11, $11, $11, $11, $4a, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d ; 32
00199Fr 2  4D 4D 4D 4D  
0019A3r 2  4D 4D 4D 4D  
0019BBr 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4B, $4c, $11, $11, $11, $11, $11, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 00
0019BFr 2  00 00 00 00  
0019C3r 2  00 00 00 00  
0019DBr 2               
0019DBr 2               
0019DBr 2               map_level_2_2:
0019DBr 2               
0019DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0019DFr 2  11 11 11 11  
0019E3r 2  11 11 11 11  
0019FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0019FFr 2  11 11 11 11  
001A03r 2  11 11 11 11  
001A1Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
001A1Fr 2  11 11 11 11  
001A23r 2  11 11 11 11  
001A3Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
001A3Fr 2  11 11 11 11  
001A43r 2  11 11 11 11  
001A5Br 2  11 11 11 11    .byt $11, $11, $11, $11, $03, $13, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
001A5Fr 2  03 13 11 11  
001A63r 2  11 11 11 11  
001A7Br 2  11 11 11 11    .byt $11, $11, $11, $11, $04, $14, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
001A7Fr 2  04 14 11 11  
001A83r 2  11 11 11 11  
001A9Br 2  11 11 11 11    .byt $11, $11, $11, $11, $06, $16, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
001A9Fr 2  06 16 11 11  
001AA3r 2  11 11 11 11  
001ABBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $01, $01, $01, $01, $01, $01
001ABFr 2  11 11 11 11  
001AC3r 2  11 11 11 11  
001ADBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $01, $01, $01, $01, $01, $01
001ADFr 2  11 11 11 11  
001AE3r 2  11 11 11 11  
001AFBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $01, $01, $01, $01, $01, $01
001AFFr 2  11 11 11 11  
001B03r 2  11 11 11 11  
001B1Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
001B1Fr 2  11 11 11 11  
001B23r 2  11 11 11 11  
001B3Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
001B3Fr 2  11 11 11 11  
001B43r 2  11 11 11 11  
001B5Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
001B5Fr 2  11 11 11 11  
001B63r 2  11 11 11 11  
001B7Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
001B7Fr 2  11 11 11 11  
001B83r 2  11 11 11 11  
001B9Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
001B9Fr 2  11 11 11 11  
001BA3r 2  11 11 11 11  
001BBBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $02, $01, $01, $01, $01, $01, $01
001BBFr 2  11 11 11 11  
001BC3r 2  11 11 11 11  
001BDBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $02, $01, $01, $01, $01, $01, $01
001BDFr 2  11 11 11 11  
001BE3r 2  11 11 11 11  
001BFBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
001BFFr 2  11 11 11 11  
001C03r 2  11 11 11 11  
001C1Br 2  11 11 03 13    .byt $11, $11, $03, $13, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
001C1Fr 2  11 11 11 11  
001C23r 2  11 11 11 11  
001C3Br 2  11 11 04 14    .byt $11, $11, $04, $14, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
001C3Fr 2  11 11 11 11  
001C43r 2  11 11 11 11  
001C5Br 2  11 11 05 15    .byt $11, $11, $05, $15, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
001C5Fr 2  11 11 11 11  
001C63r 2  11 11 11 11  
001C7Br 2  11 11 06 16    .byt $11, $11, $06, $16, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
001C7Fr 2  11 11 11 11  
001C83r 2  11 11 11 11  
001C9Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
001C9Fr 2  11 11 11 11  
001CA3r 2  11 11 11 11  
001CBBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
001CBFr 2  11 11 11 11  
001CC3r 2  11 11 11 11  
001CDBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
001CDFr 2  11 11 11 11  
001CE3r 2  11 11 11 11  
001CFBr 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
001CFFr 2  00 00 00 00  
001D03r 2  00 00 00 00  
001D1Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
001D1Fr 2  11 11 11 11  
001D23r 2  11 11 11 11  
001D3Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
001D3Fr 2  11 11 11 11  
001D43r 2  11 11 11 11  
001D5Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $02, $01, $01, $01, $01, $01, $01
001D5Fr 2  00 00 00 00  
001D63r 2  00 00 00 00  
001D7Br 2               
001D7Br 2               map_level_2_page_1:
001D7Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
001D7Fr 2  11 11 11 11  
001D83r 2  11 11 11 11  
001D9Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
001D9Fr 2  11 11 11 11  
001DA3r 2  11 11 11 11  
001DBBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
001DBFr 2  11 11 11 11  
001DC3r 2  11 11 11 11  
001DDBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
001DDFr 2  11 11 11 11  
001DE3r 2  11 11 11 11  
001DFBr 2  11 11 11 11    .byt $11, $11, $11, $11, $03, $13, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
001DFFr 2  03 13 11 11  
001E03r 2  11 11 11 11  
001E1Br 2  11 11 11 11    .byt $11, $11, $11, $11, $04, $14, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
001E1Fr 2  04 14 11 11  
001E23r 2  11 11 11 11  
001E3Br 2  11 11 11 11    .byt $11, $11, $11, $11, $05, $15, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
001E3Fr 2  05 15 11 11  
001E43r 2  11 11 11 11  
001E5Br 2  11 11 11 11    .byt $11, $11, $11, $11, $06, $16, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
001E5Fr 2  06 16 11 11  
001E63r 2  11 11 11 11  
001E7Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
001E7Fr 2  11 11 11 11  
001E83r 2  11 11 11 11  
001E9Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
001E9Fr 2  11 11 11 11  
001EA3r 2  11 11 11 11  
001EBBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
001EBFr 2  11 11 11 11  
001EC3r 2  11 11 11 11  
001EDBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
001EDFr 2  11 11 11 11  
001EE3r 2  11 11 11 11  
001EFBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
001EFFr 2  11 11 11 11  
001F03r 2  11 11 11 11  
001F1Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
001F1Fr 2  11 11 11 11  
001F23r 2  11 11 11 11  
001F3Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
001F3Fr 2  11 11 11 11  
001F43r 2  11 11 11 11  
001F5Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
001F5Fr 2  11 11 11 11  
001F63r 2  11 11 11 11  
001F7Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
001F7Fr 2  11 11 11 11  
001F83r 2  11 11 11 11  
001F9Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
001F9Fr 2  11 11 11 11  
001FA3r 2  11 11 11 11  
001FBBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
001FBFr 2  11 11 11 11  
001FC3r 2  11 11 11 11  
001FDBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
001FDFr 2  11 11 11 11  
001FE3r 2  11 11 11 11  
001FFBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
001FFFr 2  11 11 11 11  
002003r 2  11 11 11 11  
00201Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00201Fr 2  11 11 11 11  
002023r 2  11 11 11 11  
00203Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00203Fr 2  11 11 11 11  
002043r 2  11 11 11 11  
00205Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00205Fr 2  11 11 11 11  
002063r 2  11 11 11 11  
00207Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00207Fr 2  11 11 11 11  
002083r 2  11 11 11 11  
00209Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00209Fr 2  11 11 11 11  
0020A3r 2  11 11 11 11  
0020BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0020BFr 2  11 11 11 11  
0020C3r 2  11 11 11 11  
0020DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
0020DFr 2  11 11 11 11  
0020E3r 2  11 11 11 11  
0020FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0020FFr 2  11 11 11 11  
002103r 2  11 11 11 11  
00211Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00211Fr 2  11 11 11 11  
002123r 2  11 11 11 11  
00213Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00213Fr 2  11 11 11 11  
002143r 2  11 11 11 11  
00215Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00215Fr 2  11 11 11 11  
002163r 2  11 11 11 11  
00217Br 2               
00217Br 2               map_level_2_page_2:
00217Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00217Fr 2  11 11 11 11  
002183r 2  11 11 11 11  
00219Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00219Fr 2  11 11 11 11  
0021A3r 2  11 11 11 11  
0021BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
0021BFr 2  11 11 11 11  
0021C3r 2  11 11 11 11  
0021DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $11, $11, $11
0021DFr 2  11 11 11 11  
0021E3r 2  11 11 11 11  
0021FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0021FFr 2  11 11 11 11  
002203r 2  11 11 11 11  
00221Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00221Fr 2  11 11 11 11  
002223r 2  11 11 11 11  
00223Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00223Fr 2  11 11 11 11  
002243r 2  11 11 11 11  
00225Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00225Fr 2  11 11 11 11  
002263r 2  11 11 11 11  
00227Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00227Fr 2  11 11 11 11  
002283r 2  11 11 11 11  
00229Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00229Fr 2  11 11 11 11  
0022A3r 2  11 11 11 11  
0022BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0022BFr 2  11 11 11 11  
0022C3r 2  11 11 11 11  
0022DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0022DFr 2  11 11 11 11  
0022E3r 2  11 11 11 11  
0022FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0022FFr 2  11 11 11 11  
002303r 2  11 11 11 11  
00231Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00231Fr 2  11 11 11 11  
002323r 2  11 11 11 11  
00233Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00233Fr 2  11 11 11 11  
002343r 2  11 11 11 11  
00235Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00235Fr 2  11 11 11 11  
002363r 2  11 11 11 11  
00237Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00237Fr 2  11 11 11 11  
002383r 2  11 11 11 11  
00239Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
00239Fr 2  11 11 11 11  
0023A3r 2  11 11 11 11  
0023BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $02, $01, $01, $01, $01, $01, $01
0023BFr 2  11 11 11 11  
0023C3r 2  11 11 11 11  
0023DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $02, $02, $02, $02, $01, $01, $01, $01, $01, $01
0023DFr 2  11 11 11 11  
0023E3r 2  11 11 11 11  
0023FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $02, $01, $01, $01, $01, $01, $01
0023FFr 2  11 11 11 11  
002403r 2  11 11 11 11  
00241Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00241Fr 2  11 11 11 11  
002423r 2  11 11 11 11  
00243Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00243Fr 2  11 11 11 11  
002443r 2  11 11 11 11  
00245Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00245Fr 2  11 11 11 11  
002463r 2  11 11 11 11  
00247Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00247Fr 2  11 11 11 11  
002483r 2  11 11 11 11  
00249Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00249Fr 2  11 11 11 11  
0024A3r 2  11 11 11 11  
0024BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $01, $01, $01, $01, $01, $01
0024BFr 2  11 11 11 11  
0024C3r 2  11 11 11 11  
0024DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0024DFr 2  11 11 11 11  
0024E3r 2  11 11 11 11  
0024FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0024FFr 2  11 11 11 11  
002503r 2  11 11 11 11  
00251Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00251Fr 2  11 11 11 11  
002523r 2  11 11 11 11  
00253Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00253Fr 2  11 11 11 11  
002543r 2  11 11 11 11  
00255Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00255Fr 2  11 11 11 11  
002563r 2  11 11 11 11  
00257Br 2               
00257Br 2               attributeTableLevel2Page1:
00257Br 2                   ;   1    2    3    4    5    6    7    8
00257Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $FF, $00 ; !
00257Fr 2  00 00 FF 00  
002583r 2  00 FF 00 00    .byt $00, $FF, $00, $00, $00, $00, $00, $00 ; 2
002587r 2  00 00 00 00  
00258Br 2  55 55 55 55    .byt $55, $55, $55, $55, $55, $55, $55, $55 ; 3
00258Fr 2  55 55 55 55  
002593r 2  05 05 A5 55    .byt $05, $05, $A5, $55, $a5, $05, $05, $05 ; 4
002597r 2  A5 05 05 05  
00259Br 2  00 00 08 AA    .byt $00, $00, $08, $aa, $aa, $00, $00, $00 ; 5
00259Fr 2  AA 00 00 00  
0025A3r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00 ; 6
0025A7r 2  00 00 00 00  
0025ABr 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00 ; 8
0025AFr 2  00 00 00 00  
0025B3r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00 ; 8
0025B7r 2  00 00 00 00  
0025BBr 2               
0025BBr 2               attributeTableLevel2Page2:
0025BBr 2                   ;   1    2    3    4    5    6    7    8
0025BBr 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; !
0025BFr 2  00 00 AA AA  
0025C3r 2  00 FF 00 00    .byt $00, $FF, $00, $00, $00, $00, $AA, $AA ; 2
0025C7r 2  00 00 AA AA  
0025CBr 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; 3
0025CFr 2  00 00 AA AA  
0025D3r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; 4
0025D7r 2  00 00 AA AA  
0025DBr 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $AA, $AA, $AA ; 5
0025DFr 2  00 AA AA AA  
0025E3r 2  FF 00 00 00    .byt $FF, $00, $00, $00, $00, $AA, $AA, $AA ; 6
0025E7r 2  00 AA AA AA  
0025EBr 2  FF 00 00 00    .byt $FF, $00, $00, $00, $00, $00, $AA, $AA ; 8
0025EFr 2  00 00 AA AA  
0025F3r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; 8
0025F7r 2  00 00 AA AA  
0025FBr 2               
0025FBr 2               attributeTableLevel2Page3:
0025FBr 2                   ;   1    2    3    4    5    6    7    8
0025FBr 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; !
0025FFr 2  00 00 AA AA  
002603r 2  00 FF 00 00    .byt $00, $FF, $00, $00, $00, $00, $AA, $AA ; 2
002607r 2  00 00 AA AA  
00260Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; 3
00260Fr 2  00 00 AA AA  
002613r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; 4
002617r 2  00 00 AA AA  
00261Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $AA, $AA, $AA ; 5
00261Fr 2  00 AA AA AA  
002623r 2  FF 00 00 00    .byt $FF, $00, $00, $00, $00, $AA, $AA, $AA ; 6
002627r 2  00 AA AA AA  
00262Br 2  FF 00 00 00    .byt $FF, $00, $00, $00, $00, $00, $AA, $AA ; 8
00262Fr 2  00 00 AA AA  
002633r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; 8
002637r 2  00 00 AA AA  
00263Br 2               
00263Br 2               
00263Br 2               .segment "CODE"
000CE9r 2               
000CE9r 2               .proc screenFactoryTwo
000CE9r 2               
000CE9r 2  AD rr rr         LDA scrollPosition
000CECr 2  C9 FD            CMP #$FD
000CEEr 2  F0 02            BEQ incrementScreenCount
000CF0r 2  D0 06            BNE incrementScreenDone
000CF2r 2               
000CF2r 2                 incrementScreenCount:
000CF2r 2  EE rr rr         INC screenCount
000CF5r 2  4C rr rr         JMP incrementScreenDone
000CF8r 2               
000CF8r 2                 incrementScreenDone:
000CF8r 2               
000CF8r 2                 resetScreens:
000CF8r 2               
000CF8r 2                 loadScreens:
000CF8r 2  AD rr rr         LDA screenCount
000CFBr 2  C9 00            CMP #00
000CFDr 2  F0 0C            BEQ loadScreen1
000CFFr 2  C9 01            CMP #01
000D01r 2  F0 1F            BEQ loadScreen2
000D03r 2  C9 02            CMP #02
000D05r 2  F0 32            BEQ loadScreen3
000D07r 2  C9 03            CMP #03
000D09r 2  F0 3B            BEQ resetScreen
000D0Br 2               
000D0Br 2                 loadScreen1:
000D0Br 2  A2 rr            LDX #<map_level_2_2
000D0Dr 2  8E rr rr         STX lowMapByte
000D10r 2  A2 rr            LDX #>map_level_2_2
000D12r 2  8E rr rr         STX highMapByte
000D15r 2               
000D15r 2  A2 rr            LDX #<attributeTableLevel2Page2
000D17r 2  8E rr rr         STX lAB
000D1Ar 2  A2 rr            LDX #>attributeTableLevel2Page2
000D1Cr 2  8E rr rr         STX hAB
000D1Fr 2               
000D1Fr 2  4C rr rr         JMP loadScreenDone
000D22r 2               
000D22r 2                 loadScreen2:
000D22r 2  A2 rr            LDX #<map_level_2_page_1
000D24r 2  8E rr rr         STX lowMapByte
000D27r 2  A2 rr            LDX #>map_level_2_page_1
000D29r 2  8E rr rr         STX highMapByte
000D2Cr 2               
000D2Cr 2  A2 rr            LDX #<attributeTableLevel2Page3
000D2Er 2  8E rr rr         STX lAB
000D31r 2  A2 rr            LDX #>attributeTableLevel2Page3
000D33r 2  8E rr rr         STX hAB
000D36r 2               
000D36r 2  4C rr rr         JMP loadScreenDone
000D39r 2               
000D39r 2                 loadScreen3:
000D39r 2  A2 rr            LDX #<map_level_2_page_2
000D3Br 2  8E rr rr         STX lowMapByte
000D3Er 2  A2 rr            LDX #>map_level_2_page_2
000D40r 2  8E rr rr         STX highMapByte
000D43r 2  4C rr rr         JMP loadScreenDone
000D46r 2               
000D46r 2                 resetScreen:
000D46r 2  A2 00            LDX #00
000D48r 2  8E rr rr         STX screenCount
000D4Br 2  4C rr rr         JMP resetScreens
000D4Er 2               
000D4Er 2                 loadScreenDone:
000D4Er 2  60               RTS
000D4Fr 2               .endproc
000D4Fr 2               
000D4Fr 2               .proc loadStageTwoBackground
000D4Fr 2  A9 rr            LDA #<map_level_2
000D51r 2  8D rr rr         STA mapLoByte       ; put the low byte of the address of background into pointer
000D54r 2  A9 rr            LDA #>map_level_2
000D56r 2  8D rr rr         STA mapHiByte       ; put the high byte of the address into pointer
000D59r 2               .endproc
000D59r 2               
000D59r 2               
000D59r 2               .proc loadPaleteStageTwo
000D59r 2                 LoadPalettes:
000D59r 2  AD 02 20         LDA $2002
000D5Cr 2  A9 3F            LDA #$3F
000D5Er 2  8D 06 20         STA $2006             ; говорим ppu что нам необходим адрес 3F00 здесь храниться палитра
000D61r 2  A9 00            LDA #$00
000D63r 2  8D 06 20         STA $2006             ; Сначала старший байт записываем 3F потом младший 00 при записи этот адрес будет автоматически увеличиваться
000D66r 2               
000D66r 2  A2 00            LDX #$00              ; X = 0
000D68r 2                 LoadPalettesLoop:
000D68r 2  BD rr rr         LDA palette_data_stage_2, x
000D6Br 2  8D 07 20         STA $2007             ; записываем в ppu по факту в адрес 3F00
000D6Er 2  E8               INX                   ; X = X + 1
000D6Fr 2  E0 20            CPX #$20
000D71r 2  D0 F5            BNE LoadPalettesLoop
000D73r 2  60               RTS
000D74r 2               .endproc
000D74r 2               
000D74r 1               .include "./lib/palete.asm"
000D74r 2               .segment "RODATA"
00263Br 2               	palette_data:
00263Br 2  09 0A 0C 0D    		.byt $09,$0A,$0C,$0D,  $21,$0C,$08,$28,  $21,$1C,$29,$07,  $31,$3F,$3c,$02   ;;background
00263Fr 2  21 0C 08 28  
002643r 2  21 1C 29 07  
00264Br 2  32 10 1A 0F    		.byt $32,$10,$1A,$0F,  $32,$36,$17,$0F,  $32,$30,$21,$0F,  $32,$27,$17,$0F   ;;sprite palette
00264Fr 2  32 36 17 0F  
002653r 2  32 30 21 0F  
00265Br 2               
00265Br 2               .segment "CODE"
000D74r 2               
000D74r 2               .proc loadPalete
000D74r 2                 LoadPalettes:
000D74r 2  AD 02 20         LDA $2002
000D77r 2  A9 3F            LDA #$3F
000D79r 2  8D 06 20         STA $2006             ; говорим ppu что нам необходим адрес 3F00 здесь храниться палитра
000D7Cr 2  A9 00            LDA #$00
000D7Er 2  8D 06 20         STA $2006             ; Сначала старший байт записываем 3F потом младший 00 при записи этот адрес будет автоматически увеличиваться
000D81r 2               
000D81r 2  A2 00            LDX #$00              ; X = 0
000D83r 2                 LoadPalettesLoop:
000D83r 2  BD rr rr         LDA palette_data, x
000D86r 2  8D 07 20         STA $2007             ; записываем в ppu по факту в адрес 3F00
000D89r 2  E8               INX                   ; X = X + 1
000D8Ar 2  E0 20            CPX #$20
000D8Cr 2  D0 F5            BNE LoadPalettesLoop
000D8Er 2  60               RTS
000D8Fr 2               .endproc
000D8Fr 2               
000D8Fr 1               .include "./lib/reset.asm"
000D8Fr 2               .segment "CODE"
000D8Fr 2               
000D8Fr 2               .proc resetProcedure
000D8Fr 2               
000D8Fr 2               
000D8Fr 2  78           	sei
000D90r 2  A2 00        	ldx #0
000D92r 2  8E 00 20     	stx $2000		; обнуляем память
000D95r 2  8E 01 20     	stx $2001		; выключаем рендер
000D98r 2  8E 10 40     	stx $4010	; отключаем DMC
000D9Br 2  CA           	dex 				; X = $FF
000D9Cr 2  9A           	txs					; Стэк равен = $FF
000D9Dr 2  2C 02 20     :	bit $2002
000DA0r 2  10 FB        	bpl :-
000DA2r 2               
000DA2r 2  60           	RTS
000DA3r 2               .endproc
000DA3r 2               
000DA3r 1               .include "./lib/stageFunctions.asm"
000DA3r 2               
000DA3r 2               .segment "CODE"
000DA3r 2               
000DA3r 2               .proc setStageVar
000DA3r 2  A9 00          lda #00
000DA5r 2  8D rr rr       sta currentStage
000DA8r 2               
000DA8r 2  60             rts
000DA9r 2               .endproc
000DA9r 2               
000DA9r 1               .include "./lib/backgroundFunctions.asm"
000DA9r 2               .segment "RODATA"
00265Br 2               
00265Br 2               .segment "CODE"
000DA9r 2               
000DA9r 2               .proc firstProcBackground
000DA9r 2  60              RTS
000DAAr 2               .endproc
000DAAr 2               
000DAAr 2               .proc loadBackground
000DAAr 2                   LoadBackground:
000DAAr 2  AD 02 20           LDA $2002             ; read PPU status to reset the high/low latch
000DADr 2  A9 20              LDA #$20
000DAFr 2  8D 06 20           STA $2006             ; write the high byte of $2000 address
000DB2r 2  A9 00              LDA #$00
000DB4r 2  8D 06 20           STA $2006             ; write the low byte of $2000 address
000DB7r 2               
000DB7r 2  A2 00              LDX #$00            ; start at pointer + 0
000DB9r 2  A0 00              LDY #$00
000DBBr 2                   OutsideLoop:
000DBBr 2               
000DBBr 2                   InsideLoop:
000DBBr 2  B1 rr              LDA (mapLoByte), y  ; copy one background byte from address in pointer plus Y
000DBDr 2  8D 07 20           STA $2007           ; this runs 256 * 4 times
000DC0r 2               
000DC0r 2  C8                 INY                 ; inside loop counter
000DC1r 2  C0 00              CPY #$00
000DC3r 2  D0 F6              BNE InsideLoop      ; run the inside loop 256 times before continuing down
000DC5r 2               
000DC5r 2  EE rr rr           INC mapHiByte       ; low byte went 0 to 256, so high byte needs to be changed now
000DC8r 2               
000DC8r 2  E8                 INX
000DC9r 2  E0 04              CPX #$04
000DCBr 2  D0 EE              BNE OutsideLoop     ; run the outside loop 256 times before continuing down
000DCDr 2               
000DCDr 2  60                 RTS
000DCEr 2               .endproc
000DCEr 2               
000DCEr 2               .proc loadAttributePages
000DCEr 2                 LoadAttributePage1:
000DCEr 2  AD 02 20         lda $2002
000DD1r 2  A9 23            lda #$23
000DD3r 2  8D 06 20         sta $2006
000DD6r 2  A9 C0            lda #$C0
000DD8r 2  8D 06 20         sta $2006
000DDBr 2               
000DDBr 2  A2 00            ldx #00
000DDDr 2                 AttributePage1Loop:
000DDDr 2  BD rr rr         lda attributeTableLevel2Page1, x
000DE0r 2  8D 07 20         sta $2007
000DE3r 2  E8               inx
000DE4r 2  E0 42            cpx #66
000DE6r 2  D0 F5            bne AttributePage1Loop
000DE8r 2               
000DE8r 2                 LoadAttributePage2:
000DE8r 2  AD 02 20         lda $2002
000DEBr 2  A9 27            lda #$27
000DEDr 2  8D 06 20         sta $2006
000DF0r 2  A9 C0            lda #$C0
000DF2r 2  8D 06 20         sta $2006
000DF5r 2               
000DF5r 2  A2 00            ldx #00
000DF7r 2                 AttributePage2Loop:
000DF7r 2  BD rr rr         lda attributeTableLevel2Page1, x
000DFAr 2  8D 07 20         sta $2007
000DFDr 2  E8               inx
000DFEr 2  E0 42            cpx #66
000E00r 2  D0 F5            bne AttributePage2Loop
000E02r 2               
000E02r 2  60               RTS
000E03r 2               .endproc
000E03r 2               
000E03r 2               .proc drawNewAttribute
000E03r 2               
000E03r 2               NewAttributeCheck:
000E03r 2  AD rr rr         LDA scrollPosition
000E06r 2  29 0F            AND #%00001111
000E08r 2  D0 6F            BNE NewAttributeCheckDone
000E0Ar 2  4C rr rr         JMP DrawNewAttribute
000E0Dr 2               
000E0Dr 2               DrawNewAttribute:
000E0Dr 2  AD rr rr         LDA nameTable
000E10r 2  49 01            EOR #$01
000E12r 2  0A               ASL A
000E13r 2  0A               ASL A
000E14r 2  18               CLC
000E15r 2  69 23            ADC #$23
000E17r 2  8D rr rr         STA colHig
000E1Ar 2               
000E1Ar 2  AD rr rr         LDA scrollPosition
000E1Dr 2  4A               LSR A
000E1Er 2  4A               LSR A
000E1Fr 2  4A               LSR A
000E20r 2  4A               LSR A
000E21r 2  4A               LSR A
000E22r 2  18               CLC
000E23r 2  69 C0            ADC #$C0
000E25r 2  8D rr rr         STA colLow
000E28r 2               
000E28r 2  AD rr rr         LDA columnNumber
000E2Br 2  29 FC            AND #%11111100
000E2Dr 2  0A               ASL A
000E2Er 2  8D rr rr         STA sourceLow
000E31r 2  AD rr rr         LDA columnNumber
000E34r 2  4A               LSR A
000E35r 2  4A               LSR A
000E36r 2  4A               LSR A
000E37r 2  4A               LSR A
000E38r 2  4A               LSR A
000E39r 2  4A               LSR A
000E3Ar 2  4A               LSR A
000E3Br 2  8D rr rr         STA sourceHig
000E3Er 2               
000E3Er 2  AD rr rr         LDA sourceLow
000E41r 2  18               CLC
000E42r 2  6D rr rr         ADC lAB
000E45r 2  8D rr rr         STA sourceLow
000E48r 2  AD rr rr         LDA sourceHig
000E4Br 2  6D rr rr         ADC hAB
000E4Er 2  8D rr rr         STA sourceHig
000E51r 2               
000E51r 2  A0 00            LDY #$00
000E53r 2  AD 02 20         LDA $2002
000E56r 2               DrawNewAttributeLoop:
000E56r 2  AD rr rr         LDA colHig
000E59r 2  8D 06 20         STA $2006
000E5Cr 2  AD rr rr         LDA colLow
000E5Fr 2  8D 06 20         STA $2006
000E62r 2  B1 rr            LDA (sourceLow), y
000E64r 2  8D 07 20         STA $2007
000E67r 2               
000E67r 2  C8               INY
000E68r 2  C0 08            CPY #$08
000E6Ar 2  F0 0C            BEQ DrawAttributeLoopDone
000E6Cr 2               
000E6Cr 2  AD rr rr         LDA colLow
000E6Fr 2  18               CLC
000E70r 2  69 08            ADC #$08
000E72r 2  8D rr rr         STA colLow
000E75r 2  4C rr rr         JMP DrawNewAttributeLoop
000E78r 2               
000E78r 2               DrawAttributeLoopDone:
000E78r 2  60           RTS
000E79r 2               
000E79r 2               NewAttributeCheckDone:
000E79r 2  60           RTS
000E7Ar 2               .endproc
000E7Ar 2               
000E7Ar 2               .proc drawNewCollumnNametable
000E7Ar 2               
000E7Ar 2               DrawNewColumn:
000E7Ar 2  AD rr rr         LDA scrollPosition ; позиция скрола
000E7Dr 2  4A               LSR A ; смещение право
000E7Er 2  4A               LSR A
000E7Fr 2  4A               LSR A ; / 8
000E80r 2  8D rr rr         STA colLow
000E83r 2  8D rr rr         STA columnNumber
000E86r 2               
000E86r 2  AD rr rr         LDA nameTable
000E89r 2  0A               ASL A
000E8Ar 2  0A               ASL A ; * 4
000E8Br 2  18               CLC
000E8Cr 2  69 24            ADC #$24
000E8Er 2  8D rr rr         STA colHig
000E91r 2               
000E91r 2  AD rr rr         LDA columnNumber
000E94r 2  0A               ASL A
000E95r 2  0A               ASL A
000E96r 2  0A               ASL A
000E97r 2  0A               ASL A
000E98r 2  0A               ASL A
000E99r 2  8D rr rr         STA sourceLow
000E9Cr 2  AD rr rr         LDA columnNumber
000E9Fr 2  4A               LSR A
000EA0r 2  4A               LSR A
000EA1r 2  4A               LSR A
000EA2r 2  8D rr rr         STA sourceHig
000EA5r 2               
000EA5r 2  AD rr rr         LDA sourceLow
000EA8r 2  18               CLC
000EA9r 2  6D rr rr         ADC lowMapByte
000EACr 2  8D rr rr         STA sourceLow
000EAFr 2  AD rr rr         LDA sourceHig
000EB2r 2  6D rr rr         ADC highMapByte
000EB5r 2  8D rr rr         STA sourceHig
000EB8r 2               
000EB8r 2                DrawColumn:
000EB8r 2  A9 84            LDA #%10000100
000EBAr 2  4D rr rr         EOR nameTable
000EBDr 2  8D 00 20         STA $2000
000EC0r 2               
000EC0r 2  AD 02 20         LDA $2002             ; read PPU status to reset the high/low latch
000EC3r 2  AD rr rr         LDA colHig
000EC6r 2  8D 06 20         STA $2006             ; write the high byte of column address
000EC9r 2  AD rr rr         LDA colLow
000ECCr 2  8D 06 20         STA $2006             ; write the low byte of column address
000ECFr 2  A2 1E            LDX #$1E              ; copy 30 bytes
000ED1r 2  A0 00            LDY #$00
000ED3r 2               DrawColumnLoop:
000ED3r 2  B1 rr            LDA (sourceLow), y
000ED5r 2  8D 07 20         STA $2007
000ED8r 2  C8               INY
000ED9r 2  CA               DEX
000EDAr 2  D0 F7            BNE DrawColumnLoop
000EDCr 2               
000EDCr 2  A9 90            LDA #%10010000
000EDEr 2  4D rr rr         EOR nameTable ; 01 00
000EE1r 2  8D 00 20         STA $2000
000EE4r 2               
000EE4r 2  60               RTS
000EE5r 2               .endproc
000EE5r 2               
000EE5r 2               .proc drawNewCollumn
000EE5r 2               ; column check
000EE5r 2               NewColumnCheck:
000EE5r 2  AD rr rr         LDA scrollPosition
000EE8r 2  29 07            AND #%00000111
000EEAr 2  D0 0B            BNE NewColumnCheckDone
000EECr 2  20 rr rr         JSR drawNewCollumnNametable
000EEFr 2  AD rr rr         LDA columnNumber
000EF2r 2               
000EF2r 2  29 7F            AND #%01111111
000EF4r 2  8D rr rr         STA columnNumber
000EF7r 2               NewColumnCheckDone:
000EF7r 2  A9 90            LDA #%10010000
000EF9r 2  0D rr rr         ORA nameTable
000EFCr 2  8D 00 20         STA $2000
000EFFr 2               
000EFFr 2  A9 1E            LDA #%00011110
000F01r 2  8D 01 20         STA $2001
000F04r 2               
000F04r 2  60               RTS
000F05r 2               
000F05r 2               .endproc
000F05r 2               
000F05r 2               .proc swapNametable
000F05r 2               
000F05r 2               NameTableCheckSwap:
000F05r 2  AD rr rr         LDA scrollPosition
000F08r 2  C9 FF            CMP #$FF
000F0Ar 2  D0 09            BNE NameTableCheckSwapDone
000F0Cr 2               NameTableSwap:
000F0Cr 2  AD rr rr         LDA nameTable
000F0Fr 2  49 01            EOR #$01
000F11r 2  8D rr rr         STA nameTable
000F14r 2               
000F14r 2  60               RTS
000F15r 2               
000F15r 2               
000F15r 2               NameTableCheckSwapDone:
000F15r 2  60               RTS
000F16r 2               
000F16r 2               .endproc
000F16r 2               
000F16r 2               .proc enableNMI
000F16r 2  A9 90          lda #%10010000 ;enable NMI, sprites from Pattern 0, background from Pattern 1
000F18r 2  8D 00 20       sta $2000
000F1Br 2               
000F1Br 2  60             RTS
000F1Cr 2               .endproc
000F1Cr 2               
000F1Cr 2               .proc enableRender
000F1Cr 2  A9 18          lda #%00011000
000F1Er 2  8D 01 20       sta $2001
000F21r 2               
000F21r 2  60             RTS
000F22r 2               .endproc
000F22r 2               
000F22r 2               .proc disableRender
000F22r 2  A9 00            LDA #$00
000F24r 2  8D 01 20         STA $2001
000F27r 2               
000F27r 2  60               RTS
000F28r 2               .endproc
000F28r 2               
000F28r 1               .include "./lib/heroStates/debugSquired.asm"
000F28r 2               .segment "CODE"
000F28r 2               
000F28r 2               .proc firstDebug
000F28r 2  60               RTS
000F29r 2               .endproc
000F29r 2               
000F29r 2               .proc debug
000F29r 2  AD 02 20         LDA $2002             ; read PPU status to reset the high/low latch
000F2Cr 2  A9 20            LDA #$20
000F2Er 2  8D 06 20         STA $2006             ; write the high byte of $2000 address
000F31r 2  A9 ED            LDA #$ED
000F33r 2  8D 06 20         STA $2006             ; write the low byte of $2000 address
000F36r 2               
000F36r 2  A9 2F            LDA #$2F
000F38r 2  8D 07 20         STA $2007
000F3Br 2  60               RTS
000F3Cr 2               .endproc
000F3Cr 2               
000F3Cr 2               .proc unsetDebug
000F3Cr 2  AD 02 20         LDA $2002             ; read PPU status to reset the high/low latch
000F3Fr 2  A9 20            LDA #$20
000F41r 2  8D 06 20         STA $2006             ; write the high byte of $2000 address
000F44r 2  A9 ED            LDA #$ED
000F46r 2  8D 06 20         STA $2006             ; write the low byte of $2000 address
000F49r 2               
000F49r 2  A9 16            LDA #$16
000F4Br 2  8D 07 20         STA $2007
000F4Er 2  60               RTS
000F4Fr 2               .endproc
000F4Fr 2               
000F4Fr 1               .segment "HEADER"
000000r 1  4E 45 53 1A  	.byt "NES",$1A
000004r 1  01           	.byt 1 				; 1 x 16kB PRG block.
000005r 1  01           	.byt 1 				; 1 x 8kB CHR block.
000006r 1  01           	.byt 1              ; 0 horizontal, 1 vertical mirror
000007r 1  01           	.byt 1              ; mapper
000008r 1               
000008r 1               .segment "VECTORS"
000000r 1  rr rr rr rr  	.addr nmi_isr, reset, irq_isr
000004r 1  rr rr        
000006r 1               
000006r 1               .segment "ZEROPAGE"
00009Er 1  xx               heroXCoordinate: .res 1 ; координата x
00009Fr 1  xx               heroYCoordinate: .res 1 ; координата y
0000A0r 1               
0000A0r 1  xx               buttons: .res 1 ; кнопочки
0000A1r 1               
0000A1r 1  xx               lifes: .res 1 ; жизни
0000A2r 1               
0000A2r 1  xx               mapLoByte: .res 1
0000A3r 1  xx               mapHiByte: .res 1
0000A4r 1  xx               scroolX: .res 1
0000A5r 1  xx               loopLoadBackOutside: .res 1;
0000A6r 1  xx               loopLoadBackInside: .res 1;
0000A7r 1  xx               ppuHB: .res 1;
0000A8r 1  xx               ppuLB: .res 1;
0000A9r 1  xx               flagStopLoad: .res 1;
0000AAr 1  xx               tmp: .res 1;
0000ABr 1               
0000ABr 1  xx               colLow: .res 1;
0000ACr 1  xx               colHig: .res 1;
0000ADr 1  xx               sourceLow: .res 1;
0000AEr 1  xx               sourceHig: .res 1;
0000AFr 1  xx               columnNumber: .res 1;
0000B0r 1               
0000B0r 1  xx               scrollPosition: .res 1;
0000B1r 1  xx               nameTable: .res 1;
0000B2r 1  xx               screenCount: .res 1;
0000B3r 1               
0000B3r 1  xx               lowMapByte: .res 1;
0000B4r 1  xx               highMapByte: .res 1;
0000B5r 1               
0000B5r 1  xx               joyState: .res 1;
0000B6r 1  xx               collisionY: .res 1;
0000B7r 1  xx               collisionX: .res 1;
0000B8r 1               
0000B8r 1  xx               isRightCollision: .res 1;
0000B9r 1               
0000B9r 1  xx               tScroll: .res 1;
0000BAr 1  xx               currentStage: .res 1;
0000BBr 1               
0000BBr 1  xx               lAB: .res 1;
0000BCr 1  xx               hAB: .res 1;
0000BDr 1               
0000BDr 1  xx               zacumulator: .res 1;
0000BEr 1  xx               dinamicalCollisionMap: .res 1;
0000BFr 1  xx               offsetColumn: .res 1;
0000C0r 1               
0000C0r 1  xx               mapTestLo: .res 1;
0000C1r 1  xx               mapTestHig: .res 1;
0000C2r 1  xx               mapByteOffset: .res 1;
0000C3r 1               
0000C3r 1  xx               scroolCounter: .res 1;
0000C4r 1               
0000C4r 1  xx               stageStates: .res 1;
0000C5r 1               
0000C5r 1  xx               heroDirection: .res 1 ; 01 left 02 right
0000C6r 1  xx               isHeroWalk: .res 1
0000C7r 1  xx               isHeroFire: .res 1
0000C8r 1  xx               isHeroStay: .res 1
0000C9r 1  xx               lastPositionY: .res 1
0000CAr 1               
0000CAr 1               .segment "BSS"
000000r 1               
000000r 1               .segment "RODATA"
00265Br 1               
00265Br 1               .segment "CODE"
000F4Fr 1               
000F4Fr 1               
000F4Fr 1               .proc changeSpriteBuffer
000F4Fr 1  A9 00             LDA #$00
000F51r 1  8D 03 20          STA $2003     ; set the low byte (00) of the RAM address
000F54r 1  A9 02             LDA #$02
000F56r 1  8D 14 40          STA $4014
000F59r 1               
000F59r 1  60                rts
000F5Ar 1               .endproc
000F5Ar 1               
000F5Ar 1               .proc incScrollCounter
000F5Ar 1  E6 rr            INC scrollCounter
000F5Cr 1  60               RTS
000F5Dr 1               .endproc
000F5Dr 1               
000F5Dr 1               .proc nmi_isr
000F5Dr 1  20 rr rr          JSR incScrollCounter
000F60r 1  20 rr rr          JSR heroStateMovement
000F63r 1  20 rr rr          JSR screenFactoryTwo
000F66r 1  20 rr rr          JSR swapNametable
000F69r 1  20 rr rr          JSR drawNewAttribute
000F6Cr 1  20 rr rr          JSR drawNewCollumn
000F6Fr 1                    ; each time after write to ppu
000F6Fr 1  20 rr rr          JSR scrolling
000F72r 1  20 rr rr          JSR changeSpriteBuffer
000F75r 1  20 rr rr          JSR scrolling
000F78r 1                    ; read joy and player animation must be last run
000F78r 1  20 rr rr          JSR readJoyPad
000F7Br 1  20 rr rr          JSR scrolling
000F7Er 1  20 rr rr          JSR readJoyState
000F81r 1  20 rr rr          JSR scrolling
000F84r 1  20 rr rr          JSR playerHundler
000F87r 1                    ; always scrolling in last this interapt
000F87r 1  20 rr rr          JSR scrolling
000F8Ar 1               
000F8Ar 1  40                RTI
000F8Br 1               .endproc
000F8Br 1               
000F8Br 1               .proc irq_isr
000F8Br 1  40                RTI
000F8Cr 1               .endproc
000F8Cr 1               
000F8Cr 1               .proc reset
000F8Cr 1  78               SEI
000F8Dr 1  A2 00            LDX #0
000F8Fr 1  8E 00 20         STX $2000   ; обнуляем память
000F92r 1  8E 01 20         STX $2001   ; выключаем рендер
000F95r 1  8E 10 40         STX $4010 ; отключаем DMC
000F98r 1  CA               DEX     ; X = $FF
000F99r 1  9A               TXS     ; Стэк равен = $FF
000F9Ar 1  2C 02 20         : BIT $2002
000F9Dr 1  10 FB            BPL :-
000F9Fr 1  20 rr rr         JSR setHeroVar
000FA2r 1               ;    JSR loadPalete
000FA2r 1  20 rr rr         JSR setStageVar
000FA5r 1                   ; @todo create state automat
000FA5r 1  20 rr rr         JSR loadStageTwoBackground
000FA8r 1  20 rr rr         JSR loadPaleteStageTwo
000FABr 1               
000FABr 1  20 rr rr         JSR loadBackground
000FAEr 1  20 rr rr         JSR loadAttributePages
000FB1r 1  20 rr rr         JSR fixScroll
000FB4r 1  20 rr rr         JSR enableNMI
000FB7r 1  20 rr rr         JSR enableRender
000FBAr 1               
000FBAr 1               mainLoop:
000FBAr 1  4C rr rr       JMP mainLoop
000FBDr 1               
000FBDr 1  40             RTI
000FBEr 1               .endproc
000FBEr 1               
000FBEr 1               
000FBEr 1               
000FBEr 1               ; =====	CHR-ROM Pattern Tables =================================================
000FBEr 1               
000FBEr 1               ; ----- Pattern Table 0 --------------------------------------------------------
000FBEr 1               
000FBEr 1               .segment "CHR"
000000r 1               
000000r 1  00 07 0F 0F  	.incbin "test.chr"
000004r 1  0F 0F 07 03  
000008r 1  07 08 10 10  
002000r 1               
002000r 1               
