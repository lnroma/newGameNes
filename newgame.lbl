ca65 V2.18 - N/A
Main file   : newGame.asm
Current file: newGame.asm

000000r 1               .debuginfo on
000000r 1               .include "./lib/player.asm"
000000r 2               .segment "ZEROPAGE"
000000r 2               
000000r 2               .segment "RODATA"
000000r 2                 lifesBytes:
000000r 2  00 08 10 17  	.byt $00, $08, $10, $17
000004r 2               
000004r 2               .segment "CODE"
000000r 2               
000000r 2               .proc firstProcPlayer
000000r 2  60               RTS
000001r 2               .endproc
000001r 2               
000001r 2               .proc setHeroVar
000001r 2  A9 64          lda #100
000003r 2  8D rr rr       sta heroXCoordinate
000006r 2  A9 00          lda #$00
000008r 2  8D rr rr       sta buttons
00000Br 2  8D rr rr       sta offsetColumn
00000Er 2  A9 C8          lda #200
000010r 2  8D rr rr       sta heroYCoordinate
000013r 2  8D rr rr       sta lastPositionY
000016r 2  A9 04          lda #04
000018r 2  8D rr rr       sta lifes
00001Br 2  A9 01          lda #01
00001Dr 2  8D rr rr       sta isGravity
000020r 2  A9 00          lda #00
000022r 2  8D rr rr       sta frameCountPlayerRightWalk
000025r 2  A9 00          lda #00
000027r 2  8D rr rr       sta jumpHeight
00002Ar 2  A9 00          LDA #00
00002Cr 2  8D rr rr       STA collisionPart
00002Fr 2  8D rr rr       STA isStageEnd
000032r 2               
000032r 2  60             rts
000033r 2               .endproc
000033r 2               
000033r 2               .proc playerHundler
000033r 2  20 rr rr        JSR checkCollide
000036r 2  60              RTS
000037r 2               .endproc
000037r 2               
000037r 2               .proc fixScroll
000037r 2  A9 00           lda #00
000039r 2  8D rr rr        sta screenCount
00003Cr 2  A9 00           lda #$00
00003Er 2  8D rr rr        sta nameTable
000041r 2  A9 00           lda #00
000043r 2  8D rr rr        sta scrollPosition
000046r 2               
000046r 2  60              RTS
000047r 2               .endproc
000047r 2               
000047r 2               .proc scrolling
000047r 2  48             PHA
000048r 2  AD rr rr       LDA scrollPosition
00004Br 2  8D 05 20       STA $2005
00004Er 2  A9 00          LDA #$00
000050r 2  8D 05 20       STA $2005
000053r 2  68             PLA
000054r 2  60             RTS
000055r 2               .endproc
000055r 2               
000055r 2               .proc drawLifes
000055r 2  AE rr rr       LDX lifes
000058r 2                 lifeLoop:
000058r 2  A9 0A            LDA #10
00005Ar 2  8D 04 20         STA $2004
00005Dr 2  A9 06            LDA #06
00005Fr 2  8D 04 20         STA $2004
000062r 2  A9 17            LDA #%00010111
000064r 2  8D 04 20         STA $2004
000067r 2  BD rr rr         LDA lifesBytes, x
00006Ar 2  69 0A            ADC #10
00006Cr 2  8D 04 20         STA $2004
00006Fr 2  CA               DEX
000070r 2  D0 E6            BNE lifeLoop
000072r 2               
000072r 2  60             RTS
000073r 2               .endproc
000073r 2               
000073r 2               .proc playerGravity
000073r 2  60           RTS
000074r 2               ;    JSR collisionOnMap
000074r 2               ;    LDA collideFlag
000074r 2               ;    CMP #%00000011
000074r 2  D0 02            BNE incy
000076r 2  F0 06            BEQ return
000078r 2               incy:
000078r 2  EE rr rr         INC heroYCoordinate
00007Br 2  EE rr rr         INC heroYCoordinate
00007Er 2               return:
00007Er 2  60               RTS
00007Fr 2               .endproc
00007Fr 2               
00007Fr 2               .proc checkCollide
00007Fr 2  AD rr rr         LDA lastPositionY
000082r 2  CD rr rr         CMP heroYCoordinate
000085r 2  D0 02            BNE incrementY
000087r 2  F0 01            BEQ continue
000089r 2                   incrementY:
000089r 2                     ;JSR playerGravity
000089r 2               ;      INC heroYCoordinate
000089r 2  60                 RTS
00008Ar 2                   continue:
00008Ar 2  A9 00              LDA #00
00008Cr 2  8D rr rr           STA isGravity
00008Fr 2  8D rr rr           STA jumpHeight
000092r 2  8D rr rr           STA isJump
000095r 2  60                 RTS
000096r 2               .endproc
000096r 2               
000096r 2               .proc readJoyState
000096r 2  20 rr rr        JSR unsetHeroFire
000099r 2  20 rr rr        JSR unsetHeroStay
00009Cr 2  20 rr rr        JSR unsetHeroWalk
00009Fr 2               
00009Fr 2  AE rr rr        LDX joyState
0000A2r 2  20 rr rr        JSR handleDirections
0000A5r 2  60              RTS
0000A6r 2               .endproc
0000A6r 2               
0000A6r 2               .proc handleFireAndJump
0000A6r 2  E0 02           CPX #%00000010
0000A8r 2  F0 14           BEQ heroJump
0000AAr 2  E0 82           CPX #%10000010
0000ACr 2  F0 14           BEQ walkAndJumpRight
0000AEr 2  E0 81           CPX #%10000001
0000B0r 2  F0 24           BEQ walkAndFireRight
0000B2r 2  E0 41           CPX #%01000001
0000B4r 2  F0 24           BEQ walkAndFireLeft
0000B6r 2  E0 42           CPX #%01000010
0000B8r 2  F0 12           BEQ walkAndJumpLeft
0000BAr 2               
0000BAr 2  20 rr rr        JSR setHeroStay
0000BDr 2  60              RTS
0000BEr 2               
0000BEr 2                  heroJump:
0000BEr 2  20 rr rr             JSR setIsJump
0000C1r 2  60                   RTS
0000C2r 2               
0000C2r 2                  walkAndJumpRight:
0000C2r 2  20 rr rr             JSR setIsJump
0000C5r 2  20 rr rr             JSR heroRightWalk
0000C8r 2  20 rr rr             JSR setHeroRight
0000CBr 2  60                   RTS
0000CCr 2                  walkAndJumpLeft:
0000CCr 2  20 rr rr             JSR setIsJump
0000CFr 2  20 rr rr             JSR heroLeftWalk
0000D2r 2  20 rr rr             JSR setHeroLeft
0000D5r 2  60                   RTS
0000D6r 2                  walkAndFireRight:
0000D6r 2  20 rr rr             JSR walkAndFireRightProc
0000D9r 2  60                   RTS
0000DAr 2                  walkAndFireLeft:
0000DAr 2  20 rr rr             JSR setIsFire
0000DDr 2  20 rr rr             JSR heroLeftWalk
0000E0r 2  20 rr rr             JSR setHeroLeft
0000E3r 2  60                   RTS
0000E4r 2                  walkAndJumpAndFireRight:
0000E4r 2  20 rr rr             JSR jumpAndFire
0000E7r 2  60                   RTS
0000E8r 2                  walkAndJumpAndFireLeft:
0000E8r 2  20 rr rr             JSR walkAndFireProc
0000EBr 2  60                   RTS
0000ECr 2                  heroFire:
0000ECr 2  20 rr rr             JSR setIsFire
0000EFr 2  60                   RTS
0000F0r 2               .endproc
0000F0r 2               
0000F0r 2               .proc handleDirections
0000F0r 2  E0 40            CPX #%01000000
0000F2r 2  F0 34            BEQ heroWalkLeft
0000F4r 2  E0 60            CPX #%01100000
0000F6r 2  F0 20            BEQ heroWalkLeftAndDown
0000F8r 2  E0 A0            CPX #%10100000
0000FAr 2  F0 20            BEQ heroWalkRightAndDown
0000FCr 2  E0 50            CPX #%01010000
0000FEr 2  F0 14            BEQ heroWalkLeftAndUp
000100r 2  E0 90            CPX #%10010000
000102r 2  F0 1C            BEQ heroWalkRightAndUp
000104r 2  E0 80            CPX #%10000000
000106r 2  F0 1C            BEQ heroWalkRight
000108r 2  E0 20            CPX #%00100000
00010Ar 2  F0 20            BEQ walkDown
00010Cr 2  E0 10            CPX #%00010000
00010Er 2  F0 20            BEQ walkUp
000110r 2               
000110r 2  20 rr rr         JSR handleFireAndJump
000113r 2  60               RTS
000114r 2               
000114r 2                   heroWalkLeftAndUp:
000114r 2  20 rr rr             JSR heroWalkLeftAndUpProcedure
000117r 2  60                   RTS
000118r 2                   heroWalkLeftAndDown:
000118r 2  20 rr rr             JSR heroWalkLeftAndDownProcedure
00011Br 2  60                   RTS
00011Cr 2                   heroWalkRightAndDown:
00011Cr 2  20 rr rr             JSR heroWalkRightAndDownProcedure
00011Fr 2  60                   RTS
000120r 2                   heroWalkRightAndUp:
000120r 2  20 rr rr             JSR heroWalkRightAndUpProcedure
000123r 2  60                   RTS
000124r 2                   heroWalkRight:
000124r 2  20 rr rr             JSR heroWalkRightProc
000127r 2  60                   RTS
000128r 2                   heroWalkLeft:
000128r 2  20 rr rr             JSR heroWalkLeftProc
00012Br 2  60                   RTS
00012Cr 2                   walkDown:
00012Cr 2  20 rr rr             JSR walkDownProcedure
00012Fr 2  60                   RTS
000130r 2                   walkUp:
000130r 2  20 rr rr             JSR walkUpProcedure
000133r 2  60                   RTS
000134r 2               .endproc
000134r 2               
000134r 2               .proc heroWalkLeftProc
000134r 2  20 rr rr         JSR setHeroLeft
000137r 2  20 rr rr         JSR setHeroWalk
00013Ar 2  20 rr rr         JSR heroLeftWalk
00013Dr 2               
00013Dr 2  60               RTS
00013Er 2               .endproc
00013Er 2               
00013Er 2               .proc walkAndFireRightProc
00013Er 2  20 rr rr         JSR setIsFire
000141r 2  20 rr rr         JSR heroRightWalk
000144r 2  20 rr rr         JSR setHeroRight
000147r 2               
000147r 2  60               RTS
000148r 2               .endproc
000148r 2               
000148r 2               .proc heroWalkRightProc
000148r 2  20 rr rr         JSR heroRightWalk
00014Br 2  20 rr rr         JSR setHeroRight
00014Er 2  20 rr rr         JSR setHeroWalk
000151r 2               
000151r 2  60               RTS
000152r 2               .endproc
000152r 2               
000152r 2               .proc jumpAndFire
000152r 2  20 rr rr         JSR setIsFire
000155r 2  20 rr rr         JSR heroRightWalk
000158r 2  20 rr rr         JSR setHeroRight
00015Br 2  20 rr rr         JSR setIsJump
00015Er 2               
00015Er 2  60               RTS
00015Fr 2               .endproc
00015Fr 2               
00015Fr 2               .proc walkAndFireProc
00015Fr 2  20 rr rr         JSR setIsFire
000162r 2  20 rr rr         JSR heroLeftWalk
000165r 2  20 rr rr         JSR setHeroLeft
000168r 2  20 rr rr         JSR setIsJump
00016Br 2               
00016Br 2  60               RTS
00016Cr 2               .endproc
00016Cr 2               
00016Cr 2               .proc heroWalkRightAndDownProcedure
00016Cr 2  20 rr rr         JSR setHeroRight
00016Fr 2  20 rr rr         JSR heroRightWalk
000172r 2  20 rr rr         JSR setHeroWalk
000175r 2  20 rr rr         JSR walkDownProcedure
000178r 2               
000178r 2  60               RTS
000179r 2               .endproc
000179r 2               
000179r 2               .proc heroWalkLeftAndDownProcedure
000179r 2  20 rr rr         JSR setHeroLeft
00017Cr 2  20 rr rr         JSR heroLeftWalk
00017Fr 2  20 rr rr         JSR setHeroWalk
000182r 2  20 rr rr         JSR walkDownProcedure
000185r 2               
000185r 2  60               RTS
000186r 2               .endproc
000186r 2               
000186r 2               .proc heroWalkLeftAndUpProcedure
000186r 2  20 rr rr         JSR heroLeftWalk
000189r 2  20 rr rr         JSR walkUpProcedure
00018Cr 2               
00018Cr 2  60               RTS
00018Dr 2               .endproc
00018Dr 2               
00018Dr 2               .proc heroWalkRightAndUpProcedure
00018Dr 2  20 rr rr         JSR setHeroRight
000190r 2  20 rr rr         JSR heroRightWalk
000193r 2  20 rr rr         JSR setHeroWalk
000196r 2  20 rr rr         JSR walkUpProcedure
000199r 2               
000199r 2  60               RTS
00019Ar 2               .endproc
00019Ar 2               
00019Ar 2               .proc heroDownWalk
00019Ar 2  20 rr rr         JSR collisionOnMapDown
00019Dr 2  AD rr rr         LDA collideFlag
0001A0r 2  C9 03            CMP #%00000011
0001A2r 2  F0 02            BEQ incrementY
0001A4r 2  D0 09            BNE return
0001A6r 2                   incrementY:
0001A6r 2  EE rr rr             INC heroYCoordinate
0001A9r 2  AD rr rr             LDA heroYCoordinate
0001ACr 2  8D rr rr             STA lastPositionY
0001AFr 2                   return:
0001AFr 2  60                   RTS
0001B0r 2               .endproc
0001B0r 2               
0001B0r 2               .proc heroUpWalk
0001B0r 2  20 rr rr         JSR collisionOnMapUp
0001B3r 2  AD rr rr         LDA collideFlag
0001B6r 2  C9 03            CMP #%00000011
0001B8r 2  F0 02            BEQ decrementY
0001BAr 2  D0 09            BNE return
0001BCr 2               
0001BCr 2                   decrementY:
0001BCr 2  CE rr rr             DEC heroYCoordinate
0001BFr 2  AD rr rr             LDA heroYCoordinate
0001C2r 2  8D rr rr             STA lastPositionY
0001C5r 2                   return:
0001C5r 2  60                   RTS
0001C6r 2               .endproc
0001C6r 2               
0001C6r 2               .proc walkDownProcedure
0001C6r 2  AD rr rr         LDA heroDirection
0001C9r 2  C9 01            CMP #01
0001CBr 2  F0 02            BEQ heroLeft
0001CDr 2  D0 06            BNE heroRight
0001CFr 2               
0001CFr 2                   heroLeft:
0001CFr 2  20 rr rr             JSR setHeroLeft
0001D2r 2  4C rr rr             JMP setHero
0001D5r 2                   heroRight:
0001D5r 2  20 rr rr             JSR setHeroRight
0001D8r 2               
0001D8r 2                   setHero:
0001D8r 2  20 rr rr             JSR heroDownWalk
0001DBr 2  20 rr rr             JSR setHeroWalk
0001DEr 2               
0001DEr 2  60                   RTS
0001DFr 2               .endproc
0001DFr 2               
0001DFr 2               .proc walkUpProcedure
0001DFr 2  AD rr rr         LDA heroDirection
0001E2r 2  C9 01            CMP #01
0001E4r 2  F0 02            BEQ heroLeft
0001E6r 2  D0 06            BNE heroRight
0001E8r 2               
0001E8r 2                   heroLeft:
0001E8r 2  20 rr rr             JSR setHeroLeft
0001EBr 2  4C rr rr             JMP setHero
0001EEr 2                   heroRight:
0001EEr 2  20 rr rr             JSR setHeroRight
0001F1r 2               
0001F1r 2                   setHero:
0001F1r 2  20 rr rr             JSR heroUpWalk
0001F4r 2  20 rr rr             JSR setHeroWalk
0001F7r 2               
0001F7r 2  60                   RTS
0001F8r 2               .endproc
0001F8r 2               
0001F8r 2               .proc heroStateMovement
0001F8r 2  20 rr rr         JSR caclulateJump
0001FBr 2  20 rr rr         JSR heroStateAnimations
0001FEr 2  60               RTS
0001FFr 2               .endproc
0001FFr 2               
0001FFr 2               .proc heroStateAnimations
0001FFr 2  20 rr rr         JSR heroJumpAnimation
000202r 2  20 rr rr         JSR heroWalkAnimation
000205r 2  20 rr rr         JSR heroStayAnimation
000208r 2               
000208r 2  60               RTS
000209r 2               .endproc
000209r 2               
000209r 2               .proc heroWalkAnimation
000209r 2  AD rr rr         LDA isHeroWalk
00020Cr 2  C9 01            CMP #01
00020Er 2  F0 02            BEQ checkFlagJump
000210r 2               ;    BEQ walkWithOutFire
000210r 2  D0 34            BNE return
000212r 2               
000212r 2                   checkFlagJump:
000212r 2  AD rr rr             LDA isJump
000215r 2  C9 01                CMP #01
000217r 2  F0 2D                BEQ return
000219r 2  D0 00                BNE checkIsFire
00021Br 2               
00021Br 2                   checkIsFire:
00021Br 2  AD rr rr             LDA isHeroFire
00021Er 2  C9 01                CMP #01
000220r 2  F0 02                BEQ walkAndFire
000222r 2  D0 11                BNE walkWithOutFire
000224r 2               
000224r 2                   walkAndFire:
000224r 2  AD rr rr             LDA heroDirection
000227r 2  C9 01                CMP #01
000229r 2  F0 06                BEQ drawHeroWalkAndFireLeft
00022Br 2  D0 00                BNE drawHeroWalkAndFireRight
00022Dr 2                   drawHeroWalkAndFireRight:
00022Dr 2  20 rr rr             JSR drawHeroRightWalkFire
000230r 2  60                   RTS
000231r 2                   drawHeroWalkAndFireLeft:
000231r 2  20 rr rr             JSR drawHeroLeftAndFire
000234r 2  60                   RTS
000235r 2               
000235r 2                   walkWithOutFire:
000235r 2  AD rr rr             LDA heroDirection
000238r 2  C9 01                CMP #01
00023Ar 2  F0 06                BEQ drawHeroWalkLeft
00023Cr 2  D0 00                BNE drawHeroWalkRight
00023Er 2                   drawHeroWalkRight:
00023Er 2  20 rr rr             JSR drawHeroRightWalk
000241r 2  60                   RTS
000242r 2                   drawHeroWalkLeft:
000242r 2  20 rr rr             JSR drawHeroLeft
000245r 2  60                   RTS
000246r 2                   return:
000246r 2  60                   RTS
000247r 2               .endproc
000247r 2               
000247r 2               .proc heroStayAnimation
000247r 2  AD rr rr         LDA isHeroStay
00024Ar 2  C9 01            CMP #01
00024Cr 2  D0 13            BNE return
00024Er 2  F0 00            BEQ checkDirection
000250r 2                   checkDirection:
000250r 2  AD rr rr             LDA heroDirection
000253r 2  C9 01                CMP #01
000255r 2  F0 06                BEQ drawStayLeftLabel
000257r 2  D0 00                BNE drawStayRightLabel
000259r 2                       drawStayRightLabel:
000259r 2  20 rr rr                 JSR drawStayRight
00025Cr 2  60                       RTS
00025Dr 2                       drawStayLeftLabel:
00025Dr 2  20 rr rr                 JSR drawStayRight
000260r 2  60                       RTS
000261r 2                   return:
000261r 2  60                   RTS
000262r 2               .endproc
000262r 2               
000262r 2               .proc heroJumpAnimation
000262r 2  AD rr rr         LDA isJump
000265r 2  C9 01            CMP #01
000267r 2  F0 02            BEQ drawJumpAnimation
000269r 2  D0 11            BNE return
00026Br 2                   drawJumpAnimation:
00026Br 2  AD rr rr             LDA heroDirection
00026Er 2  C9 01                CMP #01
000270r 2  F0 02                BEQ drawJumpAnimationLeft
000272r 2  D0 04                BNE drawJumpAnimationRight
000274r 2                   drawJumpAnimationLeft:
000274r 2  20 rr rr             JSR drawJumpLeft
000277r 2  60                   RTS
000278r 2                   drawJumpAnimationRight:
000278r 2  20 rr rr             JSR drawJumpRight
00027Br 2  60                   RTS
00027Cr 2                   return:
00027Cr 2  60                   RTS
00027Dr 2               .endproc
00027Dr 2               
00027Dr 2               .proc clearMemory
00027Dr 2  20 rr rr         JSR clearStayRight
000280r 2               
000280r 2  60               RTS
000281r 2               .endproc
000281r 2               
000281r 2               .proc setHeroLeft
000281r 2  A9 01            LDA #01
000283r 2  8D rr rr         STA heroDirection
000286r 2  60               RTS
000287r 2               .endproc
000287r 2               
000287r 2               .proc setHeroRight
000287r 2  A9 02            LDA #02
000289r 2  8D rr rr         STA heroDirection
00028Cr 2  60               RTS
00028Dr 2               .endproc
00028Dr 2               
00028Dr 2               .proc setHeroWalk
00028Dr 2  A9 01            LDA #01
00028Fr 2  8D rr rr         STA isHeroWalk
000292r 2  60               RTS
000293r 2               .endproc
000293r 2               
000293r 2               .proc unsetHeroWalk
000293r 2  A9 00            LDA #00
000295r 2  8D rr rr         STA isHeroWalk
000298r 2  60               RTS
000299r 2               .endproc
000299r 2               
000299r 2               .proc setIsFire
000299r 2  A9 01            LDA #01
00029Br 2  8D rr rr         STA isHeroFire
00029Er 2  60               RTS
00029Fr 2               .endproc
00029Fr 2               
00029Fr 2               .proc unsetHeroFire
00029Fr 2  A9 00            LDA #00
0002A1r 2  8D rr rr         STA isHeroFire
0002A4r 2  60               RTS
0002A5r 2               .endproc
0002A5r 2               
0002A5r 2               .proc setHeroStay
0002A5r 2  A9 01            LDA #01
0002A7r 2  8D rr rr         STA isHeroStay
0002AAr 2  60               RTS
0002ABr 2               .endproc
0002ABr 2               
0002ABr 2               .proc unsetHeroStay
0002ABr 2  A9 00            LDA #00
0002ADr 2  8D rr rr         STA isHeroStay
0002B0r 2  60               RTS
0002B1r 2               .endproc
0002B1r 2               
0002B1r 1               .include "./lib/heroStates/heroWalkRight.asm"
0002B1r 2               .segment "ZEROPAGE"
000000r 2  xx             frameCountPlayerRightWalk: .res 1
000001r 2  xx             scrollCounter: .res 1
000002r 2               
000002r 2  xx             frameSpritesLB: .res 1
000003r 2  xx             frameSpritesHB: .res 1
000004r 2               
000004r 2  xx             frameAttributesLB: .res 1
000005r 2  xx             frameAttributesHB: .res 1
000006r 2               
000006r 2  xx             frameOffsetsXLB: .res 1
000007r 2  xx             frameOffsetsXHB: .res 1
000008r 2               
000008r 2  xx             frameOffsetsYLB: .res 1
000009r 2  xx             frameOffsetsYHB: .res 1
00000Ar 2               
00000Ar 2               .segment "RODATA"
000004r 2                  frame1_sprites:
000004r 2  33                 .byt $33
000005r 2  02 03              .byt $02, $03
000007r 2  12 13              .byt $12, $13
000009r 2  22 23              .byt $22, $23
00000Br 2               
00000Br 2                  frame2_sprites:
00000Br 2  33                 .byt $33
00000Cr 2  02 03              .byt $02, $03
00000Er 2  14 15              .byt $14, $15
000010r 2  24 25              .byt $24, $25
000012r 2               
000012r 2                  frame3_sprites:
000012r 2  33                 .byt $33
000013r 2  02 03              .byt $02, $03
000015r 2  16 17              .byt $16, $17
000017r 2  26 27              .byt $26, $27
000019r 2               
000019r 2                  frame_attributes:
000019r 2  16                 .byt %00010110
00001Ar 2  17 17              .byt %00010111, %00010111
00001Cr 2  17 17              .byt %00010111, %00010111
00001Er 2  17 17              .byt %00010111, %00010111
000020r 2               
000020r 2                  frame_offset_x:
000020r 2  06                 .byt $06
000021r 2  00 08              .byt $00, $08
000023r 2  00 08              .byt $00, $08
000025r 2  00 08              .byt $00, $08
000027r 2               
000027r 2                  frame_offset_y:
000027r 2  00                 .byt $00
000028r 2  00 00              .byt $00, $00
00002Ar 2  08 08              .byt $08, $08
00002Cr 2  10 10              .byt $10, $10
00002Er 2               
00002Er 2               .segment "CODE"
0002B1r 2               
0002B1r 2               .proc firstProcRightWalk
0002B1r 2  60               RTS
0002B2r 2               .endproc
0002B2r 2               
0002B2r 2               .proc heroRightWalk
0002B2r 2  AD rr rr         LDA isStageEnd
0002B5r 2  C9 01            CMP #01
0002B7r 2  F0 02            BEQ heroRightWalkIncrementX
0002B9r 2  D0 04            BNE heroRightWalk
0002BBr 2                 heroRightWalkIncrementX:
0002BBr 2  20 rr rr         JSR heroRightWalkIncrementXCoordinate
0002BEr 2  60               RTS
0002BFr 2                 heroRightWalk:
0002BFr 2  20 rr rr         JSR heroRightWalkStandard
0002C2r 2  60               RTS
0002C3r 2               .endproc
0002C3r 2               
0002C3r 2               .proc heroRightWalkIncrementXCoordinate
0002C3r 2  EE rr rr         INC heroXCoordinate
0002C6r 2  60               RTS
0002C7r 2               .endproc
0002C7r 2               
0002C7r 2               .proc heroRightWalkStandard
0002C7r 2  AD rr rr         LDA heroYCoordinate
0002CAr 2  8D rr rr         STA collideY
0002CDr 2               
0002CDr 2  AD rr rr         LDA heroXCoordinate
0002D0r 2  18               CLC
0002D1r 2  69 01            ADC #1
0002D3r 2  8D rr rr         STA collideX
0002D6r 2               
0002D6r 2  20 rr rr         JSR collisionOnMapRight
0002D9r 2  AD rr rr         LDA collideFlag
0002DCr 2  C9 03            CMP #%00000011
0002DEr 2  F0 01            BEQ incXCoord
0002E0r 2               
0002E0r 2  60               RTS
0002E1r 2               
0002E1r 2                 incXCoord:
0002E1r 2  AD rr rr         LDA heroXCoordinate
0002E4r 2  C9 7A            CMP #122
0002E6r 2  B0 02            BCS incrementScreen
0002E8r 2  D0 04            BNE incrementX
0002EAr 2               
0002EAr 2                 incrementScreen:
0002EAr 2  20 rr rr         JSR incrementScrollPosition
0002EDr 2               ;    INC scrollPosition
0002EDr 2  60               RTS
0002EEr 2                 incrementX:
0002EEr 2  EE rr rr         INC heroXCoordinate
0002F1r 2  60               RTS
0002F2r 2               .endproc
0002F2r 2               
0002F2r 2               .proc incrementScrollPosition
0002F2r 2  EE rr rr         INC scrollPosition
0002F5r 2  60               RTS
0002F6r 2               .endproc
0002F6r 2               
0002F6r 2               .proc drawHeroRightWalk
0002F6r 2  20 rr rr         JSR commonInitFrame
0002F9r 2  A5 rr            LDA scrollCounter
0002FBr 2  29 08            AND #8
0002FDr 2  C9 01            CMP #1
0002FFr 2  F0 08            BEQ drawFrame1Label
000301r 2  C9 08            CMP #8
000303r 2  F0 0A            BEQ drawFrame2Label
000305r 2  C9 0A            CMP #10
000307r 2  F0 0C            BEQ drawFrame3Label
000309r 2               
000309r 2                 drawFrame1Label:
000309r 2  20 rr rr         JSR drawFrame1
00030Cr 2  E6 rr            INC frameCountPlayerRightWalk
00030Er 2  60               RTS
00030Fr 2                 drawFrame2Label:
00030Fr 2  20 rr rr         JSR drawFrame2
000312r 2  E6 rr            INC frameCountPlayerRightWalk
000314r 2  60               RTS
000315r 2                 drawFrame3Label:
000315r 2  20 rr rr         JSR drawFrame3
000318r 2  E6 rr            INC frameCountPlayerRightWalk
00031Ar 2  60               RTS
00031Br 2               .endproc
00031Br 2               
00031Br 2               .proc drawFrame
00031Br 2  A2 00            LDX #00
00031Dr 2  A0 00            LDY #00
00031Fr 2                   frameDrawLoop:
00031Fr 2  AD rr rr             LDA heroYCoordinate
000322r 2  18                   CLC
000323r 2  71 rr                ADC (frameOffsetsYLB), y
000325r 2  9D 00 02             STA $0200, x
000328r 2  B1 rr                LDA (frameSpritesLB), y
00032Ar 2  E8                   INX
00032Br 2  9D 00 02             STA $0200, x
00032Er 2  B1 rr                LDA (frameAttributesLB), y
000330r 2  E8                   INX
000331r 2  9D 00 02             STA $0200, x
000334r 2  AD rr rr             LDA heroXCoordinate
000337r 2  18                   CLC
000338r 2  71 rr                ADC (frameOffsetsXLB), y
00033Ar 2  E8                   INX
00033Br 2  9D 00 02             STA $0200, x
00033Er 2  E8                   INX
00033Fr 2  C8                   INY
000340r 2  C0 07                CPY #07
000342r 2  D0 DB                BNE frameDrawLoop
000344r 2               
000344r 2  60               RTS
000345r 2               .endproc
000345r 2               
000345r 2               .proc commonInitFrame
000345r 2  A9 rr            LDA #<frame_attributes
000347r 2  85 rr            STA frameAttributesLB
000349r 2  A9 rr            LDA #>frame_attributes
00034Br 2  85 rr            STA frameAttributesHB
00034Dr 2               
00034Dr 2  A9 rr            LDA #<frame_offset_x
00034Fr 2  85 rr            STA frameOffsetsXLB
000351r 2  A9 rr            LDA #>frame_offset_x
000353r 2  85 rr            STA frameOffsetsXHB
000355r 2               
000355r 2  A9 rr            LDA #<frame_offset_y
000357r 2  85 rr            STA frameOffsetsYLB
000359r 2  A9 rr            LDA #>frame_offset_y
00035Br 2  85 rr            STA frameOffsetsYHB
00035Dr 2               
00035Dr 2  60               RTS
00035Er 2               .endproc
00035Er 2               
00035Er 2               .proc drawFrame1
00035Er 2  A9 rr            LDA #<frame1_sprites
000360r 2  85 rr            STA frameSpritesLB
000362r 2  A9 rr            LDA #>frame1_sprites
000364r 2  85 rr            STA frameSpritesHB
000366r 2               
000366r 2  20 rr rr         JSR drawFrame
000369r 2  60               RTS
00036Ar 2               .endproc
00036Ar 2               
00036Ar 2               .proc drawFrame2
00036Ar 2  A9 rr            LDA #<frame2_sprites
00036Cr 2  85 rr            STA frameSpritesLB
00036Er 2  A9 rr            LDA #>frame2_sprites
000370r 2  85 rr            STA frameSpritesHB
000372r 2               
000372r 2  20 rr rr         JSR drawFrame
000375r 2  60               RTS
000376r 2               .endproc
000376r 2               
000376r 2               .proc drawFrame3
000376r 2  A9 rr            LDA #<frame3_sprites
000378r 2  85 rr            STA frameSpritesLB
00037Ar 2  A9 rr            LDA #>frame3_sprites
00037Cr 2  85 rr            STA frameSpritesHB
00037Er 2               
00037Er 2  20 rr rr         JSR drawFrame
000381r 2  60               RTS
000382r 2               .endproc
000382r 2               
000382r 1               .include "./lib/heroStates/heroStayRight.asm"
000382r 2               .segment "CODE"
000382r 2               
000382r 2               .proc heroStayFirstProc
000382r 2  60             RTS
000383r 2               .endproc
000383r 2               
000383r 2               .proc drawStayRight
000383r 2  AD rr rr       LDA heroYCoordinate
000386r 2  69 00          ADC #0
000388r 2  8D 00 02       STA $0200
00038Br 2  A9 34          LDA #$34
00038Dr 2  8D 01 02       STA $0201
000390r 2  A9 16          LDA #%00010110
000392r 2  8D 02 02       STA $0202
000395r 2  AD rr rr       LDA heroXCoordinate
000398r 2  69 04          ADC #4
00039Ar 2  8D 03 02       STA $0203
00039Dr 2               
00039Dr 2  AD rr rr       LDA heroYCoordinate
0003A0r 2  8D 04 02       STA $0204
0003A3r 2  A9 00          LDA #00
0003A5r 2  8D 05 02       STA $0205
0003A8r 2  A9 17          LDA #%00010111
0003AAr 2  8D 06 02       STA $0206
0003ADr 2  AD rr rr       LDA heroXCoordinate
0003B0r 2  8D 07 02       STA $0207
0003B3r 2               
0003B3r 2  AD rr rr       LDA heroYCoordinate
0003B6r 2  69 08          ADC #8
0003B8r 2  8D 08 02       STA $0208
0003BBr 2  A9 10          LDA #$10
0003BDr 2  8D 09 02       STA $0209
0003C0r 2  A9 17          LDA #%00010111
0003C2r 2  8D 0A 02       STA $020A
0003C5r 2  AD rr rr       LDA heroXCoordinate
0003C8r 2  8D 0B 02       STA $020B
0003CBr 2               
0003CBr 2  AD rr rr       LDA heroYCoordinate
0003CEr 2  69 10          ADC #16
0003D0r 2  8D 0C 02       STA $020C
0003D3r 2  A9 20          LDA #$20
0003D5r 2  8D 0D 02       STA $020D
0003D8r 2  A9 17          LDA #%00010111
0003DAr 2  8D 0E 02       STA $020E
0003DDr 2  AD rr rr       LDA heroXCoordinate
0003E0r 2  8D 0F 02       STA $020F
0003E3r 2               
0003E3r 2  AD rr rr       LDA heroYCoordinate
0003E6r 2  8D 10 02       STA $0210
0003E9r 2  A9 00          LDA #$00
0003EBr 2  8D 11 02       STA $0211
0003EEr 2  A9 57          LDA #%01010111
0003F0r 2  8D 12 02       STA $0212
0003F3r 2  AD rr rr       LDA heroXCoordinate
0003F6r 2  69 08          ADC #8
0003F8r 2  8D 13 02       STA $0213
0003FBr 2               
0003FBr 2  AD rr rr       LDA heroYCoordinate
0003FEr 2  69 08          ADC #8
000400r 2  8D 14 02       STA $0214
000403r 2  A9 10          LDA #$10
000405r 2  8D 15 02       STA $0215
000408r 2  A9 57          LDA #%01010111
00040Ar 2  8D 16 02       STA $0216
00040Dr 2  AD rr rr       LDA heroXCoordinate
000410r 2  69 08          ADC #8
000412r 2  8D 17 02       STA $0217
000415r 2               
000415r 2  AD rr rr       LDA heroYCoordinate
000418r 2  69 10          ADC #16
00041Ar 2  8D 18 02       STA $0218
00041Dr 2  A9 20          LDA #$20
00041Fr 2  8D 19 02       STA $0219
000422r 2  A9 57          LDA #%01010111
000424r 2  8D 1A 02       STA $021A
000427r 2  AD rr rr       LDA heroXCoordinate
00042Ar 2  69 08          ADC #8
00042Cr 2  8D 1B 02       STA $021B
00042Fr 2               
00042Fr 2  60             RTS
000430r 2               .endproc
000430r 2               
000430r 2               .proc clearStayRight
000430r 2  A9 00            LDA #$00
000432r 2  A2 00            LDX #$00
000434r 2               clearLoop:
000434r 2  9D 00 02         STA $0200, x
000437r 2  E8               INX
000438r 2  C9 23            CMP #$23
00043Ar 2  D0 F8            BNE clearLoop
00043Cr 2               
00043Cr 2  60               RTS
00043Dr 2               .endproc
00043Dr 2               
00043Dr 1               .include "./lib/heroStates/heroStayLeft.asm"
00043Dr 2               .segment "CODE"
00043Dr 2               
00043Dr 2               .proc heroStayLeftFirstProc
00043Dr 2  60               RTS
00043Er 2               .endproc
00043Er 2               
00043Er 2               .proc drawStayLeft
00043Er 2  AD rr rr       LDA heroYCoordinate
000441r 2  8D 00 02       STA $0200
000444r 2  A9 04          LDA #$04
000446r 2  8D 01 02       STA $0201
000449r 2  A9 56          LDA #%01010110
00044Br 2  8D 02 02       STA $0202
00044Er 2  AD rr rr       LDA heroXCoordinate
000451r 2  8D 03 02       STA $0203
000454r 2               
000454r 2  AD rr rr       LDA heroYCoordinate
000457r 2  8D 04 02       STA $0204
00045Ar 2  A9 00          LDA #00
00045Cr 2  8D 05 02       STA $0205
00045Fr 2  A9 57          LDA #%01010111
000461r 2  8D 06 02       STA $0206
000464r 2  AD rr rr       LDA heroXCoordinate
000467r 2  69 07          ADC #7
000469r 2  8D 07 02       STA $0207
00046Cr 2               
00046Cr 2  AD rr rr       LDA heroYCoordinate
00046Fr 2  69 08          ADC #8
000471r 2  8D 08 02       STA $0208
000474r 2  A9 10          LDA #$10
000476r 2  8D 09 02       STA $0209
000479r 2  A9 17          LDA #%00010111
00047Br 2  8D 0A 02       STA $020A
00047Er 2  AD rr rr       LDA heroXCoordinate
000481r 2  8D 0B 02       STA $020B
000484r 2               
000484r 2  AD rr rr       LDA heroYCoordinate
000487r 2  69 10          ADC #16
000489r 2  8D 0C 02       STA $020C
00048Cr 2  A9 20          LDA #$20
00048Er 2  8D 0D 02       STA $020D
000491r 2  A9 17          LDA #%00010111
000493r 2  8D 0E 02       STA $020E
000496r 2  AD rr rr       LDA heroXCoordinate
000499r 2  8D 0F 02       STA $020F
00049Cr 2               
00049Cr 2  AD rr rr       LDA heroYCoordinate
00049Fr 2  8D 10 02       STA $0210
0004A2r 2  A9 01          LDA #$01
0004A4r 2  8D 11 02       STA $0211
0004A7r 2  A9 57          LDA #%01010111
0004A9r 2  8D 12 02       STA $0212
0004ACr 2  AD rr rr       LDA heroXCoordinate
0004AFr 2  8D 13 02       STA $0213
0004B2r 2               
0004B2r 2  AD rr rr       LDA heroYCoordinate
0004B5r 2  69 08          ADC #8
0004B7r 2  8D 14 02       STA $0214
0004BAr 2  A9 10          LDA #$10
0004BCr 2  8D 15 02       STA $0215
0004BFr 2  A9 57          LDA #%01010111
0004C1r 2  8D 16 02       STA $0216
0004C4r 2  AD rr rr       LDA heroXCoordinate
0004C7r 2  69 08          ADC #8
0004C9r 2  8D 17 02       STA $0217
0004CCr 2               
0004CCr 2  AD rr rr       LDA heroYCoordinate
0004CFr 2  69 10          ADC #16
0004D1r 2  8D 18 02       STA $0218
0004D4r 2  A9 20          LDA #$20
0004D6r 2  8D 19 02       STA $0219
0004D9r 2  A9 57          LDA #%01010111
0004DBr 2  8D 1A 02       STA $021A
0004DEr 2  AD rr rr       LDA heroXCoordinate
0004E1r 2  69 08          ADC #8
0004E3r 2  8D 1B 02       STA $021B
0004E6r 2               
0004E6r 2  60             RTS
0004E7r 2               .endproc
0004E7r 2               
0004E7r 2               .proc clearStayLeft
0004E7r 2  A9 00            LDA #$00
0004E9r 2  8D 00 02         STA $0200
0004ECr 2  8D 01 02         STA $0201
0004EFr 2  8D 02 02         STA $0202
0004F2r 2  8D 03 02         STA $0203
0004F5r 2  8D 04 02         STA $0204
0004F8r 2  8D 05 02         STA $0205
0004FBr 2  8D 06 02         STA $0206
0004FEr 2  8D 07 02         STA $0207
000501r 2  8D 08 02         STA $0208
000504r 2  8D 09 02         STA $0209
000507r 2  8D 0A 02         STA $020A
00050Ar 2  8D 0B 02         STA $020B
00050Dr 2  8D 0C 02         STA $020C
000510r 2  8D 0D 02         STA $020D
000513r 2  8D 0E 02         STA $020E
000516r 2  8D 0F 02         STA $020F
000519r 2  8D 10 02         STA $0210
00051Cr 2  8D 11 02         STA $0211
00051Fr 2  8D 12 02         STA $0212
000522r 2  8D 13 02         STA $0213
000525r 2  8D 14 02         STA $0214
000528r 2  8D 15 02         STA $0215
00052Br 2  8D 16 02         STA $0216
00052Er 2  8D 17 02         STA $0217
000531r 2  8D 18 02         STA $0218
000534r 2  8D 19 02         STA $0219
000537r 2  8D 1A 02         STA $021A
00053Ar 2  8D 1B 02         STA $021B
00053Dr 2               
00053Dr 2  60               RTS
00053Er 2               .endproc
00053Er 2               
00053Er 1               .include "./lib/heroStates/heroWalkLeft.asm"
00053Er 2               .segment "ZEROPAGE"
00000Ar 2  xx             LeftFrameCountPlayerRightWalk: .res 1;
00000Br 2               
00000Br 2               .segment "RODATA"
00002Er 2                  leftFrameSprites:
00002Er 2  33                 .byt $33
00002Fr 2  02 03              .byt $02, $03
000031r 2  12 13              .byt $12, $13
000033r 2  22 23              .byt $22, $23
000035r 2               
000035r 2                  leftFrame2Sprites:
000035r 2  33                 .byt $33
000036r 2  02 03              .byt $02, $03
000038r 2  14 15              .byt $14, $15
00003Ar 2  24 25              .byt $24, $25
00003Cr 2               
00003Cr 2                  leftFrame3Sprites:
00003Cr 2  33                 .byt $33
00003Dr 2  02 03              .byt $02, $03
00003Fr 2  16 17              .byt $16, $17
000041r 2  26 27              .byt $26, $27
000043r 2               
000043r 2                  leftFrameAttributes:
000043r 2  46                 .byt %01000110
000044r 2  47 47              .byt %01000111, %01000111
000046r 2  47 47              .byt %01000111, %01000111
000048r 2  47 47              .byt %01000111, %01000111
00004Ar 2               
00004Ar 2                  leftFrameOffsetX:
00004Ar 2  02                 .byt $02
00004Br 2  08 00              .byt $08, $00
00004Dr 2  08 00              .byt $08, $00
00004Fr 2  08 00              .byt $08, $00
000051r 2               
000051r 2                  leftFrameOffsetY:
000051r 2  00                 .byt $00
000052r 2  00 00              .byt $00, $00
000054r 2  08 08              .byt $08, $08
000056r 2  10 10              .byt $10, $10
000058r 2               
000058r 2               .segment "CODE"
00053Er 2               
00053Er 2               .proc firstProcHeroWalkLeft
00053Er 2  60             RTS
00053Fr 2               .endproc
00053Fr 2               
00053Fr 2               .proc heroLeftWalk
00053Fr 2  20 rr rr         JSR collisionOnMapLeft
000542r 2  AD rr rr         LDA collideFlag
000545r 2  C9 03            CMP #%00000011
000547r 2  F0 02            BEQ decrementXCoordinate
000549r 2  D0 03            BNE return
00054Br 2               ; todo dorabotat' esli geroy v levo idet do ekrana
00054Br 2               ;  LDA scrollPosition
00054Br 2               ;  CMP heroXCoordinate
00054Br 2               ;  BCS stopDecrement
00054Br 2               ;  BNE decrementX
00054Br 2               ;  stopDecrement:
00054Br 2               ;    RTS
00054Br 2               ;  decrementX:
00054Br 2                   decrementXCoordinate:
00054Br 2  CE rr rr             DEC heroXCoordinate
00054Er 2                   return:
00054Er 2  60                   RTS
00054Fr 2                 ; todo check left screen border
00054Fr 2               .endproc
00054Fr 2               
00054Fr 2               .proc drawHeroLeft
00054Fr 2  A5 rr            LDA scrollCounter
000551r 2  29 08            AND #8
000553r 2  C9 01            CMP #1
000555r 2  F0 08            BEQ drawLeftFrame1Label
000557r 2  29 08            AND #8
000559r 2  F0 0A            BEQ drawLeftFrame2Label
00055Br 2  29 0A            AND #10
00055Dr 2  F0 0C            BEQ drawLeftFrame3Label
00055Fr 2               
00055Fr 2                 drawLeftFrame1Label:
00055Fr 2  20 rr rr         JSR drawLeftFrame1
000562r 2  E6 rr            INC LeftFrameCountPlayerRightWalk
000564r 2  60               RTS
000565r 2                 drawLeftFrame2Label:
000565r 2  20 rr rr         JSR drawLeftFrame2
000568r 2  E6 rr            INC LeftFrameCountPlayerRightWalk
00056Ar 2  60               RTS
00056Br 2                 drawLeftFrame3Label:
00056Br 2  20 rr rr         JSR drawLeftFrame3
00056Er 2  E6 rr            INC LeftFrameCountPlayerRightWalk
000570r 2  60               RTS
000571r 2               .endproc
000571r 2               
000571r 2               .proc commonInitFrameLeft
000571r 2  A9 rr            LDA #<leftFrameAttributes
000573r 2  85 rr            STA frameAttributesLB
000575r 2  A9 rr            LDA #>leftFrameAttributes
000577r 2  85 rr            STA frameAttributesHB
000579r 2               
000579r 2  A9 rr            LDA #<leftFrameOffsetX
00057Br 2  85 rr            STA frameOffsetsXLB
00057Dr 2  A9 rr            LDA #>leftFrameOffsetX
00057Fr 2  85 rr            STA frameOffsetsXHB
000581r 2               
000581r 2  A9 rr            LDA #<leftFrameOffsetY
000583r 2  85 rr            STA frameOffsetsYLB
000585r 2  A9 rr            LDA #>leftFrameOffsetY
000587r 2  85 rr            STA frameOffsetsYHB
000589r 2               
000589r 2  60               RTS
00058Ar 2               .endproc
00058Ar 2               
00058Ar 2               .proc drawLeftFrame1
00058Ar 2  20 rr rr         JSR commonInitFrameLeft
00058Dr 2               
00058Dr 2  A9 rr            LDA #<leftFrameSprites
00058Fr 2  85 rr            STA frameSpritesLB
000591r 2  A9 rr            LDA #>leftFrameSprites
000593r 2  85 rr            STA frameSpritesHB
000595r 2               
000595r 2  20 rr rr         JSR drawFrame
000598r 2               
000598r 2  60               RTS
000599r 2               .endproc
000599r 2               
000599r 2               .proc drawLeftFrame2
000599r 2  20 rr rr         JSR commonInitFrameLeft
00059Cr 2               
00059Cr 2  A9 rr            LDA #<leftFrame2Sprites
00059Er 2  85 rr            STA frameSpritesLB
0005A0r 2  A9 rr            LDA #>leftFrame2Sprites
0005A2r 2  85 rr            STA frameSpritesHB
0005A4r 2               
0005A4r 2  20 rr rr         JSR drawFrame
0005A7r 2               
0005A7r 2  60               RTS
0005A8r 2               .endproc
0005A8r 2               
0005A8r 2               .proc drawLeftFrame3
0005A8r 2  20 rr rr         JSR commonInitFrameLeft
0005ABr 2               
0005ABr 2  A9 rr            LDA #<leftFrame2Sprites
0005ADr 2  85 rr            STA frameSpritesLB
0005AFr 2  A9 rr            LDA #>leftFrame2Sprites
0005B1r 2  85 rr            STA frameSpritesHB
0005B3r 2               
0005B3r 2  20 rr rr         JSR drawFrame
0005B6r 2               
0005B6r 2  60               RTS
0005B7r 2               .endproc
0005B7r 2               
0005B7r 1               .include "./lib/heroStates/heroJump.asm"
0005B7r 2               .segment "ZEROPAGE"
00000Br 2  xx               isJump: .res 1;
00000Cr 2  xx               jumpHeight: .res 1;
00000Dr 2               
00000Dr 2               .segment "CODE"
0005B7r 2               
0005B7r 2               .proc firstJumpProcedure
0005B7r 2  60               RTS
0005B8r 2               .endproc
0005B8r 2               
0005B8r 2               .proc setIsJump
0005B8r 2  A9 01            LDA #01
0005BAr 2  85 rr            STA isJump
0005BCr 2  60               RTS
0005BDr 2               .endproc
0005BDr 2               
0005BDr 2               .proc unsetIsJump
0005BDr 2  A9 00            LDA #00
0005BFr 2  85 rr            STA isJump
0005C1r 2  60               RTS
0005C2r 2               .endproc
0005C2r 2               
0005C2r 2               .proc caclulateJump
0005C2r 2  A5 rr            LDA isJump
0005C4r 2  C9 01            CMP #01
0005C6r 2  D0 19            BNE return
0005C8r 2  F0 00            BEQ continue
0005CAr 2               
0005CAr 2                   continue:
0005CAr 2  A5 rr            LDA jumpHeight
0005CCr 2  C9 20            CMP #$20
0005CEr 2  F0 11            BEQ return
0005D0r 2  D0 00            BNE decrementY
0005D2r 2               
0005D2r 2                   decrementY:
0005D2r 2  CE rr rr             DEC heroYCoordinate
0005D5r 2  CE rr rr             DEC heroYCoordinate
0005D8r 2  CE rr rr             DEC heroYCoordinate
0005DBr 2  CE rr rr             DEC heroYCoordinate
0005DEr 2  E6 rr                INC jumpHeight
0005E0r 2  60                   RTS
0005E1r 2               
0005E1r 2                   return:
0005E1r 2  60                   RTS
0005E2r 2               .endproc
0005E2r 2               
0005E2r 2               .proc drawJumpRight
0005E2r 2  AD rr rr         lda heroYCoordinate
0005E5r 2  8D 00 02           sta $0200
0005E8r 2  A9 04              lda #$04
0005EAr 2  8D 01 02           sta $0201
0005EDr 2  A9 16              lda #%00010110
0005EFr 2  8D 02 02           sta $0202
0005F2r 2  AD rr rr           lda heroXCoordinate
0005F5r 2  69 06              adc #6
0005F7r 2  8D 03 02           sta $0203
0005FAr 2               
0005FAr 2  AD rr rr           lda heroYCoordinate
0005FDr 2  8D 04 02           sta $0204
000600r 2  A9 00              lda #00
000602r 2  8D 05 02           sta $0205
000605r 2  A9 17              lda #%00010111
000607r 2  8D 06 02           sta $0206
00060Ar 2  AD rr rr           lda heroXCoordinate
00060Dr 2  8D 07 02           sta $0207
000610r 2               
000610r 2  AD rr rr           lda heroYCoordinate
000613r 2  69 08              adc #8
000615r 2  8D 08 02           sta $0208
000618r 2  A9 18              lda #$18
00061Ar 2  8D 09 02           sta $0209
00061Dr 2  A9 17              lda #%00010111
00061Fr 2  8D 0A 02           sta $020A
000622r 2  AD rr rr           lda heroXCoordinate
000625r 2  8D 0B 02           sta $020B
000628r 2               
000628r 2  AD rr rr           lda heroYCoordinate
00062Br 2  69 10              adc #16
00062Dr 2  8D 0C 02           sta $020C
000630r 2  A9 28              lda #$28
000632r 2  8D 0D 02           sta $020D
000635r 2  A9 17              lda #%00010111
000637r 2  8D 0E 02           sta $020E
00063Ar 2  AD rr rr           lda heroXCoordinate
00063Dr 2  8D 0F 02           sta $020F
000640r 2               
000640r 2  AD rr rr           lda heroYCoordinate
000643r 2  8D 10 02           sta $0210
000646r 2  A9 01              lda #$01
000648r 2  8D 11 02           sta $0211
00064Br 2  A9 17              lda #%00010111
00064Dr 2  8D 12 02           sta $0212
000650r 2  AD rr rr           lda heroXCoordinate
000653r 2  69 08              adc #8
000655r 2  8D 13 02           sta $0213
000658r 2               
000658r 2  AD rr rr           lda heroYCoordinate
00065Br 2  69 08              adc #8
00065Dr 2  8D 14 02           sta $0214
000660r 2  A9 19              lda #$19
000662r 2  8D 15 02           sta $0215
000665r 2  A9 17              lda #%00010111
000667r 2  8D 16 02           sta $0216
00066Ar 2  AD rr rr           lda heroXCoordinate
00066Dr 2  69 08              adc #8
00066Fr 2  8D 17 02           sta $0217
000672r 2               
000672r 2  AD rr rr           lda heroYCoordinate
000675r 2  69 10              adc #16
000677r 2  8D 18 02           sta $0218
00067Ar 2  A9 29              lda #$29
00067Cr 2  8D 19 02           sta $0219
00067Fr 2  A9 17              lda #%00010111
000681r 2  8D 1A 02           sta $021A
000684r 2  AD rr rr           lda heroXCoordinate
000687r 2  69 08              adc #8
000689r 2  8D 1B 02           sta $021B
00068Cr 2               
00068Cr 2  60                 RTS
00068Dr 2               .endproc
00068Dr 2               
00068Dr 2               .proc drawJumpLeft
00068Dr 2  AD rr rr         lda heroYCoordinate
000690r 2  8D 00 02           sta $0200
000693r 2  A9 04              lda #$04
000695r 2  8D 01 02           sta $0201
000698r 2  A9 56              lda #%01010110
00069Ar 2  8D 02 02           sta $0202
00069Dr 2  AD rr rr           lda heroXCoordinate
0006A0r 2  8D 03 02           sta $0203
0006A3r 2               
0006A3r 2  AD rr rr           lda heroYCoordinate
0006A6r 2  8D 04 02           sta $0204
0006A9r 2  A9 00              lda #00
0006ABr 2  8D 05 02           sta $0205
0006AEr 2  A9 57              lda #%01010111
0006B0r 2  8D 06 02           sta $0206
0006B3r 2  AD rr rr           lda heroXCoordinate
0006B6r 2  69 07              adc #7
0006B8r 2  8D 07 02           sta $0207
0006BBr 2               
0006BBr 2  AD rr rr           lda heroYCoordinate
0006BEr 2  69 08              adc #8
0006C0r 2  8D 08 02           sta $0208
0006C3r 2  A9 18              lda #$18
0006C5r 2  8D 09 02           sta $0209
0006C8r 2  A9 57              lda #%01010111
0006CAr 2  8D 0A 02           sta $020A
0006CDr 2  AD rr rr           lda heroXCoordinate
0006D0r 2  69 08              adc #8
0006D2r 2  8D 0B 02           sta $020B
0006D5r 2               
0006D5r 2  AD rr rr           lda heroYCoordinate
0006D8r 2  69 10              adc #16
0006DAr 2  8D 0C 02           sta $020C
0006DDr 2  A9 28              lda #$28
0006DFr 2  8D 0D 02           sta $020D
0006E2r 2  A9 57              lda #%01010111
0006E4r 2  8D 0E 02           sta $020E
0006E7r 2  AD rr rr           lda heroXCoordinate
0006EAr 2  69 08              adc #8
0006ECr 2  8D 0F 02           sta $020F
0006EFr 2               
0006EFr 2  AD rr rr           lda heroYCoordinate
0006F2r 2  8D 10 02           sta $0210
0006F5r 2  A9 01              lda #$01
0006F7r 2  8D 11 02           sta $0211
0006FAr 2  A9 57              lda #%01010111
0006FCr 2  8D 12 02           sta $0212
0006FFr 2  AD rr rr           lda heroXCoordinate
000702r 2  8D 13 02           sta $0213
000705r 2               
000705r 2  AD rr rr           lda heroYCoordinate
000708r 2  69 08              adc #8
00070Ar 2  8D 14 02           sta $0214
00070Dr 2  A9 19              lda #$19
00070Fr 2  8D 15 02           sta $0215
000712r 2  A9 57              lda #%01010111
000714r 2  8D 16 02           sta $0216
000717r 2  AD rr rr           lda heroXCoordinate
00071Ar 2  8D 17 02           sta $0217
00071Dr 2               
00071Dr 2  AD rr rr           lda heroYCoordinate
000720r 2  69 10              adc #16
000722r 2  8D 18 02           sta $0218
000725r 2  A9 29              lda #$29
000727r 2  8D 19 02           sta $0219
00072Ar 2  A9 57              lda #%01010111
00072Cr 2  8D 1A 02           sta $021A
00072Fr 2  AD rr rr           lda heroXCoordinate
000732r 2  8D 1B 02           sta $021B
000735r 2               
000735r 2  60                 RTS
000736r 2               .endproc
000736r 2               
000736r 1               .include "./lib/heroStates/heroWalkRightAndFire.asm"
000736r 2               .segment "CODE"
000736r 2               
000736r 2               .proc firstProcRightWalkFire
000736r 2  60               RTS
000737r 2               .endproc
000737r 2               
000737r 2               .proc heroRightWalkFire
000737r 2  AD rr rr       LDA heroXCoordinate
00073Ar 2  C9 7A          CMP #122
00073Cr 2  B0 02          BCS incrementScreen
00073Er 2  D0 04          BNE incrementX
000740r 2                 incrementScreen:
000740r 2  20 rr rr         JSR incrementScrollPosition
000743r 2               ;    INC scrollPosition
000743r 2  60               RTS
000744r 2                 incrementX:
000744r 2  EE rr rr         INC heroXCoordinate
000747r 2  60               RTS
000748r 2               .endproc
000748r 2               
000748r 2               .proc drawHeroRightWalkFire
000748r 2  A5 rr            LDA scrollCounter
00074Ar 2  29 08            AND #8
00074Cr 2  C9 01            CMP #1
00074Er 2  F0 08            BEQ drawFrameAndFire1Label
000750r 2  29 08            AND #8
000752r 2  F0 0A            BEQ drawFrameAndFire2Label
000754r 2  29 0A            AND #10
000756r 2  F0 0C            BEQ drawFrameAndFire3Label
000758r 2               
000758r 2                 drawFrameAndFire1Label:
000758r 2  20 rr rr         JSR drawFrameAndFire1
00075Br 2  E6 rr            INC frameCountPlayerRightWalk
00075Dr 2               
00075Dr 2  60               RTS
00075Er 2                 drawFrameAndFire2Label:
00075Er 2  20 rr rr         JSR drawFrameAndFire2
000761r 2  E6 rr            INC frameCountPlayerRightWalk
000763r 2               
000763r 2  60               RTS
000764r 2                 drawFrameAndFire3Label:
000764r 2  20 rr rr         JSR drawFrameAndFire3
000767r 2  E6 rr            INC frameCountPlayerRightWalk
000769r 2               
000769r 2  60               RTS
00076Ar 2               .endproc
00076Ar 2               
00076Ar 2               .proc drawFrameAndFire1
00076Ar 2  AD rr rr         LDA heroYCoordinate
00076Dr 2  8D 00 02         STA $0200
000770r 2  A9 02            LDA #$02
000772r 2  8D 01 02         STA $0201
000775r 2  A9 17            LDA #%00010111
000777r 2  8D 02 02         STA $0202
00077Ar 2  AD rr rr         LDA heroXCoordinate
00077Dr 2  8D 03 02         STA $0203
000780r 2               
000780r 2  AD rr rr         LDA heroYCoordinate
000783r 2  69 07            ADC #7
000785r 2  8D 04 02         STA $0204
000788r 2  A9 12            LDA #$12
00078Ar 2  8D 05 02         STA $0205
00078Dr 2  A9 17            LDA #%00010111
00078Fr 2  8D 06 02         STA $0206
000792r 2  AD rr rr         LDA heroXCoordinate
000795r 2  8D 07 02         STA $0207
000798r 2               
000798r 2  AD rr rr         LDA heroYCoordinate
00079Br 2  69 10            ADC #16
00079Dr 2  8D 08 02         STA $0208
0007A0r 2  A9 22            LDA #$22
0007A2r 2  8D 09 02         STA $0209
0007A5r 2  A9 17            LDA #%00010111
0007A7r 2  8D 0A 02         STA $020A
0007AAr 2  AD rr rr         LDA heroXCoordinate
0007ADr 2  8D 0B 02         STA $020B
0007B0r 2               
0007B0r 2  AD rr rr         LDA heroYCoordinate
0007B3r 2  8D 0C 02         STA $020C
0007B6r 2  A9 03            LDA #$03
0007B8r 2  8D 0D 02         STA $020D
0007BBr 2  A9 17            LDA #%00010111
0007BDr 2  8D 0E 02         STA $020E
0007C0r 2  AD rr rr         LDA heroXCoordinate
0007C3r 2  69 08            ADC #8
0007C5r 2  8D 0F 02         STA $020F
0007C8r 2               
0007C8r 2  AD rr rr         LDA heroYCoordinate
0007CBr 2  69 08            ADC #8
0007CDr 2  8D 10 02         STA $0210
0007D0r 2  A9 13            LDA #$13
0007D2r 2  8D 11 02         STA $0211
0007D5r 2  A9 17            LDA #%00010111
0007D7r 2  8D 12 02         STA $0212
0007DAr 2  AD rr rr         LDA heroXCoordinate
0007DDr 2  69 08            ADC #8
0007DFr 2  8D 13 02         STA $0213
0007E2r 2               
0007E2r 2  AD rr rr         LDA heroYCoordinate
0007E5r 2  69 10            ADC #16
0007E7r 2  8D 14 02         STA $0214
0007EAr 2  A9 23            LDA #$23
0007ECr 2  8D 15 02         STA $0215
0007EFr 2  A9 17            LDA #%00010111
0007F1r 2  8D 16 02         STA $0216
0007F4r 2  AD rr rr         LDA heroXCoordinate
0007F7r 2  69 08            ADC #8
0007F9r 2  8D 17 02         STA $0217
0007FCr 2               
0007FCr 2  AD rr rr         LDA heroYCoordinate
0007FFr 2  8D 18 02         STA $0218
000802r 2  A9 04            LDA #$04
000804r 2  8D 19 02         STA $0219
000807r 2  A9 16            LDA #%00010110
000809r 2  8D 1A 02         STA $021A
00080Cr 2  AD rr rr         LDA heroXCoordinate
00080Fr 2  69 06            ADC #6
000811r 2  8D 1B 02         STA $021B
000814r 2               
000814r 2  60               RTS
000815r 2               .endproc
000815r 2               
000815r 2               .proc drawFrameAndFire2
000815r 2  AD rr rr         LDA heroYCoordinate
000818r 2  8D 00 02         STA $0200
00081Br 2  A9 02            LDA #$02
00081Dr 2  8D 01 02         STA $0201
000820r 2  A9 17            LDA #%00010111
000822r 2  8D 02 02         STA $0202
000825r 2  AD rr rr         LDA heroXCoordinate
000828r 2  8D 03 02         STA $0203
00082Br 2               
00082Br 2  AD rr rr         LDA heroYCoordinate
00082Er 2  69 07            ADC #7
000830r 2  8D 04 02         STA $0204
000833r 2  A9 14            LDA #$14
000835r 2  8D 05 02         STA $0205
000838r 2  A9 17            LDA #%00010111
00083Ar 2  8D 06 02         STA $0206
00083Dr 2  AD rr rr         LDA heroXCoordinate
000840r 2  8D 07 02         STA $0207
000843r 2               
000843r 2  AD rr rr         LDA heroYCoordinate
000846r 2  69 10            ADC #16
000848r 2  8D 08 02         STA $0208
00084Br 2  A9 24            LDA #$24
00084Dr 2  8D 09 02         STA $0209
000850r 2  A9 17            LDA #%00010111
000852r 2  8D 0A 02         STA $020A
000855r 2  AD rr rr         LDA heroXCoordinate
000858r 2  8D 0B 02         STA $020B
00085Br 2               
00085Br 2  AD rr rr         LDA heroYCoordinate
00085Er 2  8D 0C 02         STA $020C
000861r 2  A9 03            LDA #$03
000863r 2  8D 0D 02         STA $020D
000866r 2  A9 17            LDA #%00010111
000868r 2  8D 0E 02         STA $020E
00086Br 2  AD rr rr         LDA heroXCoordinate
00086Er 2  69 08            ADC #8
000870r 2  8D 0F 02         STA $020F
000873r 2               
000873r 2  AD rr rr         LDA heroYCoordinate
000876r 2  69 08            ADC #8
000878r 2  8D 10 02         STA $0210
00087Br 2  A9 13            LDA #$13
00087Dr 2  8D 11 02         STA $0211
000880r 2  A9 17            LDA #%00010111
000882r 2  8D 12 02         STA $0212
000885r 2  AD rr rr         LDA heroXCoordinate
000888r 2  69 08            ADC #8
00088Ar 2  8D 13 02         STA $0213
00088Dr 2               
00088Dr 2  AD rr rr         LDA heroYCoordinate
000890r 2  69 10            ADC #16
000892r 2  8D 14 02         STA $0214
000895r 2  A9 25            LDA #$25
000897r 2  8D 15 02         STA $0215
00089Ar 2  A9 17            LDA #%00010111
00089Cr 2  8D 16 02         STA $0216
00089Fr 2  AD rr rr         LDA heroXCoordinate
0008A2r 2  69 08            ADC #8
0008A4r 2  8D 17 02         STA $0217
0008A7r 2               
0008A7r 2  AD rr rr         LDA heroYCoordinate
0008AAr 2  8D 18 02         STA $0218
0008ADr 2  A9 04            LDA #$04
0008AFr 2  8D 19 02         STA $0219
0008B2r 2  A9 16            LDA #%00010110
0008B4r 2  8D 1A 02         STA $021A
0008B7r 2  AD rr rr         LDA heroXCoordinate
0008BAr 2  69 06            ADC #6
0008BCr 2  8D 1B 02         STA $021B
0008BFr 2  60               RTS
0008C0r 2               .endproc
0008C0r 2               
0008C0r 2               .proc drawFrameAndFire3
0008C0r 2  AD rr rr         LDA heroYCoordinate
0008C3r 2  8D 00 02         STA $0200
0008C6r 2  A9 02            LDA #$02
0008C8r 2  8D 01 02         STA $0201
0008CBr 2  A9 17            LDA #%00010111
0008CDr 2  8D 02 02         STA $0202
0008D0r 2  AD rr rr         LDA heroXCoordinate
0008D3r 2  8D 03 02         STA $0203
0008D6r 2               
0008D6r 2  AD rr rr         LDA heroYCoordinate
0008D9r 2  69 07            ADC #7
0008DBr 2  8D 04 02         STA $0204
0008DEr 2  A9 16            LDA #$16
0008E0r 2  8D 05 02         STA $0205
0008E3r 2  A9 17            LDA #%00010111
0008E5r 2  8D 06 02         STA $0206
0008E8r 2  AD rr rr         LDA heroXCoordinate
0008EBr 2  8D 07 02         STA $0207
0008EEr 2               
0008EEr 2  AD rr rr         LDA heroYCoordinate
0008F1r 2  69 10            ADC #16
0008F3r 2  8D 08 02         STA $0208
0008F6r 2  A9 26            LDA #$26
0008F8r 2  8D 09 02         STA $0209
0008FBr 2  A9 17            LDA #%00010111
0008FDr 2  8D 0A 02         STA $020A
000900r 2  AD rr rr         LDA heroXCoordinate
000903r 2  8D 0B 02         STA $020B
000906r 2               
000906r 2  AD rr rr         LDA heroYCoordinate
000909r 2  8D 0C 02         STA $020C
00090Cr 2  A9 03            LDA #$03
00090Er 2  8D 0D 02         STA $020D
000911r 2  A9 17            LDA #%00010111
000913r 2  8D 0E 02         STA $020E
000916r 2  AD rr rr         LDA heroXCoordinate
000919r 2  69 08            ADC #8
00091Br 2  8D 0F 02         STA $020F
00091Er 2               
00091Er 2  AD rr rr         LDA heroYCoordinate
000921r 2  69 08            ADC #8
000923r 2  8D 10 02         STA $0210
000926r 2  A9 13            LDA #$13
000928r 2  8D 11 02         STA $0211
00092Br 2  A9 17            LDA #%00010111
00092Dr 2  8D 12 02         STA $0212
000930r 2  AD rr rr         LDA heroXCoordinate
000933r 2  69 08            ADC #8
000935r 2  8D 13 02         STA $0213
000938r 2               
000938r 2  AD rr rr         LDA heroYCoordinate
00093Br 2  69 10            ADC #16
00093Dr 2  8D 14 02         STA $0214
000940r 2  A9 27            LDA #$27
000942r 2  8D 15 02         STA $0215
000945r 2  A9 17            LDA #%00010111
000947r 2  8D 16 02         STA $0216
00094Ar 2  AD rr rr         LDA heroXCoordinate
00094Dr 2  69 08            ADC #8
00094Fr 2  8D 17 02         STA $0217
000952r 2               
000952r 2  AD rr rr         LDA heroYCoordinate
000955r 2  8D 18 02         STA $0218
000958r 2  A9 04            LDA #$04
00095Ar 2  8D 19 02         STA $0219
00095Dr 2  A9 16            LDA #%00010110
00095Fr 2  8D 1A 02         STA $021A
000962r 2  AD rr rr         LDA heroXCoordinate
000965r 2  69 06            ADC #6
000967r 2  8D 1B 02         STA $021B
00096Ar 2               
00096Ar 2  60               RTS
00096Br 2               .endproc
00096Br 2               
00096Br 1               .include "./lib/heroStates/heroWalkLeftAndFire.asm"
00096Br 2               .segment "CODE"
00096Br 2               
00096Br 2               .proc firstProcHeroWalkLeftAndFire
00096Br 2  60             RTS
00096Cr 2               .endproc
00096Cr 2               
00096Cr 2               .proc heroLeftWalkFire
00096Cr 2               ; todo dorabotat' esli geroy v levo idet do ekrana
00096Cr 2               ;  LDA scrollPosition
00096Cr 2               ;  CMP heroXCoordinate
00096Cr 2               ;  BCS stopDecrement
00096Cr 2               ;  BNE decrementX
00096Cr 2               ;  stopDecrement:
00096Cr 2               ;    RTS
00096Cr 2               ;  decrementX:
00096Cr 2  CE rr rr         DEC heroXCoordinate
00096Fr 2  60               RTS
000970r 2                 ; todo check left screen border
000970r 2               .endproc
000970r 2               
000970r 2               .proc drawHeroLeftAndFire
000970r 2  A5 rr            LDA scrollCounter
000972r 2  29 08            AND #8
000974r 2  C9 01            CMP #1
000976r 2  F0 08            BEQ drawLeftAndFireFrame1Label
000978r 2  29 08            AND #8
00097Ar 2  F0 0A            BEQ drawLeftAndFireFrame2Label
00097Cr 2  29 0A            AND #10
00097Er 2  F0 0C            BEQ drawLeftAndFireFrame3Label
000980r 2               
000980r 2                 drawLeftAndFireFrame1Label:
000980r 2  20 rr rr         JSR drawLeftAndFireFrame1
000983r 2  E6 rr            INC frameCountPlayerRightWalk
000985r 2  60               RTS
000986r 2                 drawLeftAndFireFrame2Label:
000986r 2  20 rr rr         JSR drawLeftAndFireFrame2
000989r 2  E6 rr            INC frameCountPlayerRightWalk
00098Br 2  60               RTS
00098Cr 2                 drawLeftAndFireFrame3Label:
00098Cr 2  20 rr rr         JSR drawLeftAndFireFrame3
00098Fr 2  E6 rr            INC frameCountPlayerRightWalk
000991r 2  60               RTS
000992r 2               .endproc
000992r 2               
000992r 2               .proc drawLeftAndFireFrame1
000992r 2  AD rr rr         LDA heroYCoordinate
000995r 2  8D 00 02         STA $0200
000998r 2  A9 02            LDA #$02
00099Ar 2  8D 01 02         STA $0201
00099Dr 2  A9 57            LDA #%01010111
00099Fr 2  8D 02 02         STA $0202
0009A2r 2  AD rr rr         LDA heroXCoordinate
0009A5r 2  69 08            ADC #8
0009A7r 2  8D 03 02         STA $0203
0009AAr 2               
0009AAr 2  AD rr rr         LDA heroYCoordinate
0009ADr 2  69 07            ADC #7
0009AFr 2  8D 04 02         STA $0204
0009B2r 2  A9 12            LDA #$12
0009B4r 2  8D 05 02         STA $0205
0009B7r 2  A9 57            LDA #%01010111
0009B9r 2  8D 06 02         STA $0206
0009BCr 2  AD rr rr         LDA heroXCoordinate
0009BFr 2  69 08            ADC #8
0009C1r 2  8D 07 02         STA $0207
0009C4r 2               
0009C4r 2  AD rr rr         LDA heroYCoordinate
0009C7r 2  69 10            ADC #16
0009C9r 2  8D 08 02         STA $0208
0009CCr 2  A9 22            LDA #$22
0009CEr 2  8D 09 02         STA $0209
0009D1r 2  A9 57            LDA #%01010111
0009D3r 2  8D 0A 02         STA $020A
0009D6r 2  AD rr rr         LDA heroXCoordinate
0009D9r 2  69 08            ADC #8
0009DBr 2  8D 0B 02         STA $020B
0009DEr 2               
0009DEr 2  AD rr rr         LDA heroYCoordinate
0009E1r 2  8D 0C 02         STA $020C
0009E4r 2  A9 03            LDA #$03
0009E6r 2  8D 0D 02         STA $020D
0009E9r 2  A9 57            LDA #%01010111
0009EBr 2  8D 0E 02         STA $020E
0009EEr 2  AD rr rr         LDA heroXCoordinate
0009F1r 2  8D 0F 02         STA $020F
0009F4r 2               
0009F4r 2  AD rr rr         LDA heroYCoordinate
0009F7r 2  69 08            ADC #8
0009F9r 2  8D 10 02         STA $0210
0009FCr 2  A9 13            LDA #$13
0009FEr 2  8D 11 02         STA $0211
000A01r 2  A9 57            LDA #%01010111
000A03r 2  8D 12 02         STA $0212
000A06r 2  AD rr rr         LDA heroXCoordinate
000A09r 2  8D 13 02         STA $0213
000A0Cr 2               
000A0Cr 2  AD rr rr         LDA heroYCoordinate
000A0Fr 2  69 10            ADC #16
000A11r 2  8D 14 02         STA $0214
000A14r 2  A9 23            LDA #$23
000A16r 2  8D 15 02         STA $0215
000A19r 2  A9 57            LDA #%01010111
000A1Br 2  8D 16 02         STA $0216
000A1Er 2  AD rr rr         LDA heroXCoordinate
000A21r 2  8D 17 02         STA $0217
000A24r 2               
000A24r 2  AD rr rr         LDA heroYCoordinate
000A27r 2  8D 18 02         STA $0218
000A2Ar 2  A9 04            LDA #$04
000A2Cr 2  8D 19 02         STA $0219
000A2Fr 2  A9 16            LDA #%00010110
000A31r 2  8D 1A 02         STA $021A
000A34r 2  AD rr rr         LDA heroXCoordinate
000A37r 2  8D 1B 02         STA $021B
000A3Ar 2  60               RTS
000A3Br 2               .endproc
000A3Br 2               
000A3Br 2               .proc drawLeftAndFireFrame2
000A3Br 2  AD rr rr         LDA heroYCoordinate
000A3Er 2  8D 00 02         STA $0200
000A41r 2  A9 02            LDA #$02
000A43r 2  8D 01 02         STA $0201
000A46r 2  A9 57            LDA #%01010111
000A48r 2  8D 02 02         STA $0202
000A4Br 2  AD rr rr         LDA heroXCoordinate
000A4Er 2  69 07            ADC #7
000A50r 2  8D 03 02         STA $0203
000A53r 2               
000A53r 2  AD rr rr         LDA heroYCoordinate
000A56r 2  69 08            ADC #8
000A58r 2  8D 04 02         STA $0204
000A5Br 2  A9 14            LDA #$14
000A5Dr 2  8D 05 02         STA $0205
000A60r 2  A9 57            LDA #%01010111
000A62r 2  8D 06 02         STA $0206
000A65r 2  AD rr rr         LDA heroXCoordinate
000A68r 2  69 08            ADC #8
000A6Ar 2  8D 07 02         STA $0207
000A6Dr 2               
000A6Dr 2  AD rr rr         LDA heroYCoordinate
000A70r 2  69 10            ADC #16
000A72r 2  8D 08 02         STA $0208
000A75r 2  A9 24            LDA #$24
000A77r 2  8D 09 02         STA $0209
000A7Ar 2  A9 57            LDA #%01010111
000A7Cr 2  8D 0A 02         STA $020A
000A7Fr 2  AD rr rr         LDA heroXCoordinate
000A82r 2  69 08            ADC #8
000A84r 2  8D 0B 02         STA $020B
000A87r 2               
000A87r 2  AD rr rr         LDA heroYCoordinate
000A8Ar 2  8D 0C 02         STA $020C
000A8Dr 2  A9 03            LDA #$03
000A8Fr 2  8D 0D 02         STA $020D
000A92r 2  A9 57            LDA #%01010111
000A94r 2  8D 0E 02         STA $020E
000A97r 2  AD rr rr         LDA heroXCoordinate
000A9Ar 2  8D 0F 02         STA $020F
000A9Dr 2               
000A9Dr 2  AD rr rr         LDA heroYCoordinate
000AA0r 2  69 08            ADC #8
000AA2r 2  8D 10 02         STA $0210
000AA5r 2  A9 13            LDA #$13
000AA7r 2  8D 11 02         STA $0211
000AAAr 2  A9 57            LDA #%01010111
000AACr 2  8D 12 02         STA $0212
000AAFr 2  AD rr rr         LDA heroXCoordinate
000AB2r 2  8D 13 02         STA $0213
000AB5r 2               
000AB5r 2  AD rr rr         LDA heroYCoordinate
000AB8r 2  69 10            ADC #16
000ABAr 2  8D 14 02         STA $0214
000ABDr 2  A9 25            LDA #$25
000ABFr 2  8D 15 02         STA $0215
000AC2r 2  A9 57            LDA #%01010111
000AC4r 2  8D 16 02         STA $0216
000AC7r 2  AD rr rr         LDA heroXCoordinate
000ACAr 2  8D 17 02         STA $0217
000ACDr 2               
000ACDr 2  AD rr rr         LDA heroYCoordinate
000AD0r 2  8D 18 02         STA $0218
000AD3r 2  A9 04            LDA #$04
000AD5r 2  8D 19 02         STA $0219
000AD8r 2  A9 16            LDA #%00010110
000ADAr 2  8D 1A 02         STA $021A
000ADDr 2  AD rr rr         LDA heroXCoordinate
000AE0r 2  8D 1B 02         STA $021B
000AE3r 2               
000AE3r 2  60               RTS
000AE4r 2               .endproc
000AE4r 2               
000AE4r 2               .proc drawLeftAndFireFrame3
000AE4r 2  AD rr rr         LDA heroYCoordinate
000AE7r 2  8D 00 02         STA $0200
000AEAr 2  A9 02            LDA #$02
000AECr 2  8D 01 02         STA $0201
000AEFr 2  A9 57            LDA #%01010111
000AF1r 2  8D 02 02         STA $0202
000AF4r 2  AD rr rr         LDA heroXCoordinate
000AF7r 2  69 08            ADC #8
000AF9r 2  8D 03 02         STA $0203
000AFCr 2               
000AFCr 2  AD rr rr         LDA heroYCoordinate
000AFFr 2  69 07            ADC #7
000B01r 2  8D 04 02         STA $0204
000B04r 2  A9 16            LDA #$16
000B06r 2  8D 05 02         STA $0205
000B09r 2  A9 57            LDA #%01010111
000B0Br 2  8D 06 02         STA $0206
000B0Er 2  AD rr rr         LDA heroXCoordinate
000B11r 2  69 08            ADC #8
000B13r 2  8D 07 02         STA $0207
000B16r 2               
000B16r 2  AD rr rr         LDA heroYCoordinate
000B19r 2  69 10            ADC #16
000B1Br 2  8D 08 02         STA $0208
000B1Er 2  A9 26            LDA #$26
000B20r 2  8D 09 02         STA $0209
000B23r 2  A9 57            LDA #%01010111
000B25r 2  8D 0A 02         STA $020A
000B28r 2  AD rr rr         LDA heroXCoordinate
000B2Br 2  69 08            ADC #8
000B2Dr 2  8D 0B 02         STA $020B
000B30r 2               
000B30r 2  AD rr rr         LDA heroYCoordinate
000B33r 2  8D 0C 02         STA $020C
000B36r 2  A9 03            LDA #$03
000B38r 2  8D 0D 02         STA $020D
000B3Br 2  A9 57            LDA #%01010111
000B3Dr 2  8D 0E 02         STA $020E
000B40r 2  AD rr rr         LDA heroXCoordinate
000B43r 2  8D 0F 02         STA $020F
000B46r 2               
000B46r 2  AD rr rr         LDA heroYCoordinate
000B49r 2  69 08            ADC #8
000B4Br 2  8D 10 02         STA $0210
000B4Er 2  A9 13            LDA #$13
000B50r 2  8D 11 02         STA $0211
000B53r 2  A9 57            LDA #%01010111
000B55r 2  8D 12 02         STA $0212
000B58r 2  AD rr rr         LDA heroXCoordinate
000B5Br 2  8D 13 02         STA $0213
000B5Er 2               
000B5Er 2  AD rr rr         LDA heroYCoordinate
000B61r 2  69 10            ADC #16
000B63r 2  8D 14 02         STA $0214
000B66r 2  A9 27            LDA #$27
000B68r 2  8D 15 02         STA $0215
000B6Br 2  A9 57            LDA #%01010111
000B6Dr 2  8D 16 02         STA $0216
000B70r 2  AD rr rr         LDA heroXCoordinate
000B73r 2  8D 17 02         STA $0217
000B76r 2               
000B76r 2  AD rr rr         LDA heroYCoordinate
000B79r 2  8D 18 02         STA $0218
000B7Cr 2  A9 04            LDA #$04
000B7Er 2  8D 19 02         STA $0219
000B81r 2  A9 16            LDA #%00010110
000B83r 2  8D 1A 02         STA $021A
000B86r 2  AD rr rr         LDA heroXCoordinate
000B89r 2  8D 1B 02         STA $021B
000B8Cr 2  60               RTS
000B8Dr 2               .endproc
000B8Dr 2               
000B8Dr 1               .include "./lib/collisionOnMap.asm"
000B8Dr 2               .segment "ZEROPAGE"
00000Dr 2  xx              isGravity: .res 1
00000Er 2  xx              xOffset: .res 1
00000Fr 2  xx              nameTableLowByte: .res 1
000010r 2  xx              nameTableHighByte: .res 1
000011r 2  xx              collisionTmp: .res 1
000012r 2  xx              currentAdc: .res 1
000013r 2  xx              currentNameTable: .res 1
000014r 2  xx              fakeXCoordinate: .res 1
000015r 2  xx              collideDetection: .res 1 ; remove in to be
000016r 2               
000016r 2  xx              collideX: .res 1
000017r 2  xx              collideY: .res 1
000018r 2  xx              collideFlag: .res 1
000019r 2               
000019r 2  xx              collisionFirstLB: .res 1
00001Ar 2  xx              collisionFirstHB: .res 1
00001Br 2               
00001Br 2  xx              collisionSecondLB: .res 1
00001Cr 2               
00001Cr 2  xx              collisionPart: .res 1
00001Dr 2  xx              isStageEnd: .res 1
00001Er 2               
00001Er 2               .segment "RODATA"
000058r 2               
000058r 2               bit_mask:
000058r 2  80             .byt %10000000
000059r 2  40             .byt %01000000
00005Ar 2  20             .byt %00100000
00005Br 2  10             .byt %00010000
00005Cr 2  08             .byt %00001000
00005Dr 2  04             .byt %00000100
00005Er 2  02             .byt %00000010
00005Fr 2  01             .byt %00000001
000060r 2               
000060r 2               level2map1part:
000060r 2  00 00 00 00    .byt %00000000, %00000000, %00000000, %00000000 ; 4
000064r 2  00 00 00 00    .byt %00000000, %00000000, %00000000, %00000000 ; 8
000068r 2  00 00 00 00    .byt %00000000, %00000000, %00000000, %00000000 ; 02
00006Cr 2  00 00 00 00    .byt %00000000, %00000000, %00000000, %00000000 ; 06
000070r 2  00 00 00 00    .byt %00000000, %00000000, %00000000, %00000000 ; 08
000074r 2  00 00 00 00    .byt %00000000, %00000000, %00000000, %00000000
000078r 2  00 00 00 00    .byt %00000000, %00000000, %00000000, %00000000
00007Cr 2  00 00 00 00    .byt %00000000, %00000000, %00000000, %00000000
000080r 2  00 00 00 00    .byt %00000000, %00000000, %00000000, %00000000
000084r 2  00 00 00 00    .byt %00000000, %00000000, %00000000, %00000000 ; 00
000088r 2               
000088r 2  00 00 00 00    .byt %00000000, %00000000, %00000000, %00000000
00008Cr 2  00 00 00 00    .byt %00000000, %00000000, %00000000, %00000000
000090r 2  00 00 00 00    .byt %00000000, %00000000, %00000000, %00000000
000094r 2  FF 00 3F FF    .byt %11111111, %00000000, %00111111, %11111111
000098r 2  FF 80 7F FF    .byt %11111111, %10000000, %01111111, %11111111
00009Cr 2  FF C0 FF FF    .byt %11111111, %11000000, %11111111, %11111111
0000A0r 2  FF E1 FF FF    .byt %11111111, %11100001, %11111111, %11111111
0000A4r 2  FF FF FF FF    .byt %11111111, %11111111, %11111111, %11111111
0000A8r 2  FF FF FF FF    .byt %11111111, %11111111, %11111111, %11111111
0000ACr 2  FF FF FF FF    .byt %11111111, %11111111, %11111111, %11111111 ; 21
0000B0r 2               
0000B0r 2  FF FF FF FF    .byt %11111111, %11111111, %11111111, %11111111
0000B4r 2  FF FF FF FF    .byt %11111111, %11111111, %11111111, %11111111
0000B8r 2  FF FF FF FF    .byt %11111111, %11111111, %11111111, %11111111
0000BCr 2  FF FF FF FF    .byt %11111111, %11111111, %11111111, %11111111
0000C0r 2  FF FF FF FF    .byt %11111111, %11111111, %11111111, %11111111
0000C4r 2  FF FF FF FF    .byt %11111111, %11111111, %11111111, %11111111
0000C8r 2  FF FF FF FF    .byt %11111111, %11111111, %11111111, %11111111 ; 27
0000CCr 2  FF FF C7 FF    .byt %11111111, %11111111, %11000111, %11111111
0000D0r 2  FF FF 8F FF    .byt %11111111, %11111111, %10001111, %11111111
0000D4r 2  00 00 00 00    .byt %00000000, %00000000, %00000000, %00000000
0000D8r 2               
0000D8r 2               level2map2part:
0000D8r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 4
0000DCr 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 8
0000E0r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 02
0000E4r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 06
0000E8r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 08
0000ECr 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
0000F0r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
0000F4r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
0000F8r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
0000FCr 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 00
000100r 2               
000100r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
000104r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
000108r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
00010Cr 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000110r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000114r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000118r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
00011Cr 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000120r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000124r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111 ; 21
000128r 2               
000128r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
00012Cr 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000130r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000134r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000138r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
00013Cr 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000140r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111 ; 27
000144r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000148r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
00014Cr 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
000150r 2               
000150r 2               level2map3part:
000150r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 4
000154r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 8
000158r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 02
00015Cr 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 06
000160r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 08
000164r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
000168r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
00016Cr 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
000170r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
000174r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 00
000178r 2               
000178r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
00017Cr 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
000180r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
000184r 2  80 00 00 00      .byt %10000000, %00000000, %00000000, %00000000
000188r 2  C0 03 C0 00      .byt %11000000, %00000011, %11000000, %00000000
00018Cr 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000190r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000194r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000198r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
00019Cr 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111 ; 21
0001A0r 2               
0001A0r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
0001A4r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
0001A8r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
0001ACr 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
0001B0r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
0001B4r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
0001B8r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111 ; 27
0001BCr 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
0001C0r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
0001C4r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
0001C8r 2               
0001C8r 2               level2map4part:
0001C8r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 4
0001CCr 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 8
0001D0r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 02
0001D4r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 06
0001D8r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 08
0001DCr 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
0001E0r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
0001E4r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
0001E8r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
0001ECr 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 00
0001F0r 2               
0001F0r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
0001F4r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
0001F8r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
0001FCr 2  80 00 00 00      .byt %10000000, %00000000, %00000000, %00000000
000200r 2  C0 03 C0 00      .byt %11000000, %00000011, %11000000, %00000000
000204r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000208r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
00020Cr 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000210r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000214r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111 ; 21
000218r 2               
000218r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
00021Cr 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000220r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000224r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000228r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
00022Cr 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000230r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111 ; 27
000234r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000238r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
00023Cr 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
000240r 2               
000240r 2               collisionMap1Low:
000240r 2  rr rr rr rr    .byt <level2map1part, <level2map2part, <level2map3part, <level2map4part
000244r 2               collisionMap1High:
000244r 2  rr rr rr rr    .byt >level2map1part, >level2map2part, >level2map3part, >level2map4part
000248r 2               
000248r 2               .segment "CODE"
000B8Dr 2                   COLLIDE_WATER =     %00000001
000B8Dr 2                   COLLIDE_PLACE =     %00000011
000B8Dr 2                   COLLIDE_BORDER =    %00000010
000B8Dr 2               
000B8Dr 2               .proc initVar
000B8Dr 2  60               rts
000B8Er 2               .endproc
000B8Er 2               
000B8Er 2               .proc calculateCollisionMap
000B8Er 2  AD rr rr         LDA scrollPosition
000B91r 2  29 07            AND #%00000111
000B93r 2  F0 03            BEQ skipCalculate
000B95r 2               
000B95r 2  EE rr rr         INC offsetColumn
000B98r 2               
000B98r 2                 skipCalculate:
000B98r 2  60               RTS
000B99r 2               .endproc
000B99r 2               
000B99r 2               .proc calcHeroPosition
000B99r 2  AD rr rr         LDA scrollPosition
000B9Cr 2  18               CLC
000B9Dr 2  6D rr rr         ADC heroXCoordinate
000BA0r 2  C9 FF            CMP #$FF
000BA2r 2  F0 01            BEQ collisionPartIncrement
000BA4r 2  60               RTS
000BA5r 2               collisionPartIncrement:
000BA5r 2  A5 rr            LDA isStageEnd
000BA7r 2  C9 01            CMP #01
000BA9r 2  F0 02            BEQ return
000BABr 2  E6 rr            INC collisionPart
000BADr 2               return:
000BADr 2  60               RTS
000BAEr 2               .endproc
000BAEr 2               
000BAEr 2               .proc getCurrentCollisionMap
000BAEr 2  A4 rr            LDY collisionPart
000BB0r 2  B9 rr rr         LDA collisionMap1Low, y
000BB3r 2  85 rr            STA collisionFirstLB
000BB5r 2  B9 rr rr         LDA collisionMap1High, y
000BB8r 2  85 rr            STA collisionFirstHB
000BBAr 2               
000BBAr 2  60               RTS
000BBBr 2               .endproc
000BBBr 2               
000BBBr 2               .proc collideNo
000BBBr 2  A9 01            LDA #01
000BBDr 2  85 rr            STA isGravity
000BBFr 2               ;    inc heroYCoordinate
000BBFr 2               ;    INC heroYCoordinate
000BBFr 2  60               RTS
000BC0r 2               .endproc
000BC0r 2               
000BC0r 2               .proc collideYes
000BC0r 2  A9 00            LDA #00
000BC2r 2  85 rr            STA isGravity
000BC4r 2  85 rr            STA jumpHeight
000BC6r 2  85 rr            STA isJump
000BC8r 2  60               RTS
000BC9r 2               .endproc
000BC9r 2               
000BC9r 2               .proc collisionOnMap
000BC9r 2  20 rr rr         JSR calcHeroPosition
000BCCr 2  20 rr rr         JSR getCurrentCollisionMap
000BCFr 2               
000BCFr 2  A5 rr            LDA collideX
000BD1r 2  4A               LSR
000BD2r 2  4A               LSR
000BD3r 2  4A               LSR
000BD4r 2  4A               LSR
000BD5r 2  4A               LSR
000BD6r 2  4A               LSR
000BD7r 2  8D rr rr         STA zacumulator
000BDAr 2               
000BDAr 2  A5 rr            LDA collideY
000BDCr 2  4A               LSR
000BDDr 2  4A               LSR
000BDEr 2  4A               LSR
000BDFr 2  0A               ASL
000BE0r 2  0A               ASL
000BE1r 2  18               CLC
000BE2r 2  6D rr rr         ADC zacumulator
000BE5r 2  A8               TAY
000BE6r 2               
000BE6r 2  A5 rr            LDA collideX
000BE8r 2  4A               LSR
000BE9r 2  4A               LSR
000BEAr 2  4A               LSR
000BEBr 2  29 07            AND #7
000BEDr 2  AA               TAX
000BEEr 2               
000BEEr 2  B1 rr            LDA (collisionFirstLB), y
000BF0r 2  3D rr rr         AND bit_mask, x
000BF3r 2  D0 07            BNE collisionNo
000BF5r 2  F0 00            BEQ collisionYes ; if Z flag is set after and 0
000BF7r 2               collisionYes:
000BF7r 2  A9 00            LDA #%00000000
000BF9r 2  85 rr            STA collideFlag
000BFBr 2               
000BFBr 2  60               RTS
000BFCr 2               collisionNo:
000BFCr 2  A9 03            LDA #%00000011
000BFEr 2  85 rr            STA collideFlag
000C00r 2               
000C00r 2  60               RTS
000C01r 2               .endproc
000C01r 2               
000C01r 2               .proc collisionOnMapLeft
000C01r 2  AD rr rr         LDA heroYCoordinate
000C04r 2  18               CLC
000C05r 2  69 11            ADC #17
000C07r 2  85 rr            STA collideY
000C09r 2               
000C09r 2  AD rr rr         LDA heroXCoordinate
000C0Cr 2  48               PHA
000C0Dr 2  69 01            ADC #1
000C0Fr 2  CD rr rr         CMP scrollPosition
000C12r 2  F0 0B            BEQ leftCollision
000C14r 2  68               PLA
000C15r 2  6D rr rr         ADC scrollPosition
000C18r 2  E9 01            SBC #1
000C1Ar 2  85 rr            STA collideX
000C1Cr 2  4C rr rr         JMP collisionOnMapLabel
000C1Fr 2               leftCollision:
000C1Fr 2  A9 00            LDA #$00
000C21r 2  85 rr            STA collideFlag
000C23r 2               collisionOnMapLabel:
000C23r 2  20 rr rr         JSR collisionOnMap
000C26r 2  60               RTS
000C27r 2               .endproc
000C27r 2               
000C27r 2               .proc collisionOnMapRight
000C27r 2  AD rr rr         LDA heroYCoordinate
000C2Ar 2  18               CLC
000C2Br 2  69 11            ADC #17
000C2Dr 2  85 rr            STA collideY
000C2Fr 2               
000C2Fr 2  AD rr rr         LDA heroXCoordinate
000C32r 2  18               CLC
000C33r 2  6D rr rr         ADC scrollPosition
000C36r 2  69 01            ADC #1
000C38r 2  85 rr            STA collideX
000C3Ar 2               
000C3Ar 2  20 rr rr         JSR collisionOnMap
000C3Dr 2  60               RTS
000C3Er 2               .endproc
000C3Er 2               
000C3Er 2               .proc collisionOnMapUp
000C3Er 2  AD rr rr         LDA heroYCoordinate
000C41r 2  18               CLC
000C42r 2  69 10            ADC #16
000C44r 2  85 rr            STA collideY
000C46r 2               
000C46r 2  AD rr rr         LDA heroXCoordinate
000C49r 2  18               CLC
000C4Ar 2  6D rr rr         ADC scrollPosition
000C4Dr 2  85 rr            STA collideX
000C4Fr 2               
000C4Fr 2  20 rr rr         JSR collisionOnMap
000C52r 2  60               RTS
000C53r 2               .endproc
000C53r 2               
000C53r 2               .proc collisionOnMapDown
000C53r 2  AD rr rr         LDA heroYCoordinate
000C56r 2  18               CLC
000C57r 2  69 11            ADC #17
000C59r 2  85 rr            STA collideY
000C5Br 2               
000C5Br 2  AD rr rr         LDA heroXCoordinate
000C5Er 2  18               CLC
000C5Fr 2  6D rr rr         ADC scrollPosition
000C62r 2  85 rr            STA collideX
000C64r 2               
000C64r 2  20 rr rr         JSR collisionOnMap
000C67r 2  60               RTS
000C68r 2               .endproc
000C68r 2               
000C68r 1               .include "./lib/joypad.asm"
000C68r 2               
000C68r 2               .segment "RODATA"
000248r 2               
000248r 2               
000248r 2               .segment "CODE"
000C68r 2               
000C68r 2               	BUTTON_A      = 1 << 7
000C68r 2               	BUTTON_B      = 1 << 6
000C68r 2               	BUTTON_SELECT = 1 << 5
000C68r 2               	BUTTON_START  = 1 << 4
000C68r 2               	BUTTON_UP     = 1 << 3
000C68r 2               	BUTTON_DOWN   = 1 << 2
000C68r 2               	BUTTON_LEFT   = 1 << 1
000C68r 2               	BUTTON_RIGHT  = 1 << 0
000C68r 2               
000C68r 2               .proc readJoyPad
000C68r 2                 readJoyPad:
000C68r 2  A2 00            LDX  #$00
000C6Ar 2  A9 01            LDA  #$01
000C6Cr 2  8D 16 40         STA  $4016
000C6Fr 2  A9 00            LDA  #$00
000C71r 2  8D 16 40         STA  $4016
000C74r 2               
000C74r 2  A0 08            LDY #$08 ; счетчик для цикла
000C76r 2                 readJoyCycle:
000C76r 2  BD 16 40         LDA $4016,x
000C79r 2  4A               LSR
000C7Ar 2  7E rr rr         ROR joyState,x
000C7Dr 2  88               DEY
000C7Er 2  D0 F6            BNE readJoyCycle
000C80r 2               
000C80r 2  60               RTS
000C81r 2               .endproc
000C81r 2               
000C81r 2               
000C81r 1               .include "./lib/apu.asm"
000C81r 2               
000C81r 2               .segment "RODATA"
000248r 2               regs:
000248r 2  30 08 00 00          .byt $30,$08,$00,$00
00024Cr 2  30 08 00 00          .byt $30,$08,$00,$00
000250r 2  80 00 00 00          .byt $80,$00,$00,$00
000254r 2  30 00 00 00          .byt $30,$00,$00,$00
000258r 2  00 00 00 00          .byt $00,$00,$00,$00
00025Cr 2               
00025Cr 2               periodTableLo:
00025Cr 2  F1 7F 13 AD    .byt $f1,$7f,$13,$ad,$4d,$f3,$9d,$4c,$00,$b8,$74,$34
000260r 2  4D F3 9D 4C  
000264r 2  00 B8 74 34  
000268r 2  F8 BF 89 56    .byt $f8,$bf,$89,$56,$26,$f9,$ce,$a6,$80,$5c,$3a,$1a
00026Cr 2  26 F9 CE A6  
000270r 2  80 5C 3A 1A  
000274r 2  FB DF C4 AB    .byt $fb,$df,$c4,$ab,$93,$7c,$67,$52,$3f,$2d,$1c,$0c
000278r 2  93 7C 67 52  
00027Cr 2  3F 2D 1C 0C  
000280r 2  FD EF E1 D5    .byt $fd,$ef,$e1,$d5,$c9,$bd,$b3,$a9,$9f,$96,$8e,$86
000284r 2  C9 BD B3 A9  
000288r 2  9F 96 8E 86  
00028Cr 2  7E 77 70 6A    .byt $7e,$77,$70,$6a,$64,$5e,$59,$54,$4f,$4b,$46,$42
000290r 2  64 5E 59 54  
000294r 2  4F 4B 46 42  
000298r 2  3F 3B 38 34    .byt $3f,$3b,$38,$34,$31,$2f,$2c,$29,$27,$25,$23,$21
00029Cr 2  31 2F 2C 29  
0002A0r 2  27 25 23 21  
0002A4r 2  1F 1D 1B 1A    .byt $1f,$1d,$1b,$1a,$18,$17,$15,$14
0002A8r 2  18 17 15 14  
0002ACr 2               
0002ACr 2               periodTableHi:
0002ACr 2  07 07 07 06    .byt $07,$07,$07,$06,$06,$05,$05,$05,$05,$04,$04,$04
0002B0r 2  06 05 05 05  
0002B4r 2  05 04 04 04  
0002B8r 2  03 03 03 03    .byt $03,$03,$03,$03,$03,$02,$02,$02,$02,$02,$02,$02
0002BCr 2  03 02 02 02  
0002C0r 2  02 02 02 02  
0002C4r 2  01 01 01 01    .byt $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01
0002C8r 2  01 01 01 01  
0002CCr 2  01 01 01 01  
0002D0r 2  00 00 00 00    .byt $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
0002D4r 2  00 00 00 00  
0002D8r 2  00 00 00 00  
0002DCr 2  00 00 00 00    .byt $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
0002E0r 2  00 00 00 00  
0002E4r 2  00 00 00 00  
0002E8r 2  00 00 00 00    .byt $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
0002ECr 2  00 00 00 00  
0002F0r 2  00 00 00 00  
0002F4r 2  00 00 00 00    .byt $00,$00,$00,$00,$00,$00,$00,$00
0002F8r 2  00 00 00 00  
0002FCr 2               
0002FCr 2               .segment "CODE"
000C81r 2               
000C81r 2               .proc init_apu
000C81r 2                       ; Init $4000-4013
000C81r 2  A0 13                ldy #$13
000C83r 2                 loop:
000C83r 2  B9 rr rr             lda regs,y
000C86r 2  99 00 40             sta $4000,y
000C89r 2  88                   dey
000C8Ar 2  10 F7                bpl loop
000C8Cr 2               
000C8Cr 2                       ; We have to skip over $4014 (OAMDMA)
000C8Cr 2  A9 0F                lda #$0f
000C8Er 2  8D 15 40             sta $4015
000C91r 2  A9 40                lda #$40
000C93r 2  8D 17 40             sta $4017
000C96r 2               
000C96r 2  60                   rts
000C97r 2                 .endproc
000C97r 2               
000C97r 2               .proc playMusic
000C97r 2  68              pla
000C98r 2  AA              tax
000C99r 2  BD rr rr        lda periodTableHi,x
000C9Cr 2  4A              lsr a
000C9Dr 2  8D 0B 40        sta $400B
000CA0r 2               
000CA0r 2  BD rr rr        lda periodTableLo,x
000CA3r 2  6A              ror a
000CA4r 2  8D 0A 40        sta $400A
000CA7r 2  E8              inx
000CA8r 2  8A              txa
000CA9r 2  C9 14           cmp #20
000CABr 2  F0 02           beq resetX
000CADr 2  D0 03           bne resetDone
000CAFr 2                  resetX:
000CAFr 2  A2 00           ldx #00
000CB1r 2  8A              txa
000CB2r 2                  resetDone:
000CB2r 2  48              pha
000CB3r 2               
000CB3r 2  60              rts
000CB4r 2               .endproc
000CB4r 2               
000CB4r 1               .include "./lib/stages/stageOne.asm"
000CB4r 2               .segment "RODATA"
0002FCr 2                   map_level_1:
0002FCr 2  11 11 11 11          .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 1
000300r 2  11 11 11 11  
000304r 2  11 11 11 11  
00031Cr 2  11 11 11 11          .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 1
000320r 2  11 11 11 11  
000324r 2  11 11 11 11  
00033Cr 2  11 11 11 11          .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $03, $04, $05, $06, $11, $11, $11, $11 ; 2
000340r 2  11 11 11 11  
000344r 2  11 11 11 11  
00035Cr 2  11 11 11 11          .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $13, $14, $15, $16, $11, $11, $11, $11 ; 3
000360r 2  11 11 11 11  
000364r 2  11 11 11 11  
00037Cr 2  11 11 11 11          .byt $11, $11, $11, $11, $03, $04, $05, $06, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 4
000380r 2  03 04 05 06  
000384r 2  11 11 11 11  
00039Cr 2  11 11 11 11          .byt $11, $11, $11, $11, $13, $14, $15, $16, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 5
0003A0r 2  13 14 15 16  
0003A4r 2  11 11 11 11  
0003BCr 2  11 11 11 11          .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 6
0003C0r 2  11 11 11 11  
0003C4r 2  11 11 11 11  
0003DCr 2  11 11 11 11          .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 7
0003E0r 2  11 11 11 11  
0003E4r 2  11 11 11 11  
0003FCr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 8
000400r 2  11 11 11 11  
000404r 2  11 11 11 11  
00041Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 9
000420r 2  11 11 11 11  
000424r 2  11 11 11 11  
00043Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $03, $04, $05, $06, $11, $11,  $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 10
000440r 2  11 11 11 11  
000444r 2  11 11 11 11  
00045Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $13, $14, $15, $16, $11, $11,  $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 11
000460r 2  11 11 11 11  
000464r 2  11 11 11 11  
00047Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $20, $21, $11, $11, $11, $11, $11, $11, $11 ; 12
000480r 2  11 11 11 11  
000484r 2  11 11 11 11  
00049Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $30, $41, $11, $11, $11, $11, $11, $11, $11 ; 13
0004A0r 2  11 11 11 11  
0004A4r 2  11 11 11 11  
0004BCr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $30, $41, $11, $11, $11, $11, $11, $11, $11 ; 14
0004C0r 2  11 11 11 11  
0004C4r 2  11 11 11 11  
0004DCr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $30, $41, $11, $11, $11, $11, $11, $11, $11 ; 15
0004E0r 2  11 11 11 11  
0004E4r 2  11 11 11 11  
0004FCr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $30, $41, $11, $11, $11, $11, $11, $11, $11 ; 16
000500r 2  11 11 11 11  
000504r 2  11 11 11 11  
00051Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $30, $41, $11, $11, $11, $11, $11, $11, $11 ; 17
000520r 2  11 11 11 11  
000524r 2  11 11 11 11  
00053Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $40, $41, $11, $11, $11, $11, $11, $11, $11 ; 18
000540r 2  11 11 11 11  
000544r 2  11 11 11 11  
00055Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $20, $21, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $40, $41, $11, $11, $11, $11, $11, $11, $11 ; 19
000560r 2  20 21 11 11  
000564r 2  11 11 11 11  
00057Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $40, $41, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $20, $21, $11, $11, $11, $11, $40, $41, $11, $11, $11, $11, $11, $11, $11 ; 20
000580r 2  40 41 11 11  
000584r 2  11 11 11 11  
00059Cr 2  11 20 21 11    .byt $11, $20, $21, $11, $40, $41, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $40, $41, $11, $11, $11, $11, $40, $41, $11, $11, $11, $11, $11, $11, $11 ; 21
0005A0r 2  40 41 11 11  
0005A4r 2  11 11 11 11  
0005BCr 2  11 30 31 11    .byt $11, $30, $31, $11, $40, $41, $11, $11, $11, $11, $11, $11, $11, $11, $11, $20, $21, $30, $31, $11, $11, $11, $11, $40, $41, $11, $11, $11, $11, $11, $11, $11 ; 22
0005C0r 2  40 41 11 11  
0005C4r 2  11 11 11 11  
0005DCr 2  11 40 41 11    .byt $11, $40, $41, $11, $40, $41, $20, $21, $11, $11, $11, $11, $11, $11, $11, $30, $31, $30, $31, $11, $11, $20, $21, $40, $41, $11, $11, $11, $11, $11, $11, $11 ; 23
0005E0r 2  40 41 20 21  
0005E4r 2  11 11 11 11  
0005FCr 2  11 40 41 11    .byt $11, $40, $41, $11, $40, $41, $40, $41, $20, $21, $11, $11, $11, $11, $11, $40, $41, $30, $31, $20, $21, $30, $31, $40, $41, $11, $11, $11, $11, $11, $11, $11 ; 24
000600r 2  40 41 40 41  
000604r 2  20 21 11 11  
00061Cr 2  11 40 41 11    .byt $11, $40, $41, $11, $40, $41, $40, $41, $30, $31, $11, $11, $11, $11, $11, $40, $41, $30, $31, $30, $31, $30, $31, $40, $41, $11, $11, $11, $11, $11, $11, $11 ; 25
000620r 2  40 41 40 41  
000624r 2  30 31 11 11  
00063Cr 2  02 02 02 02    .byt $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $11, $11, $11, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $11, $02, $02, $02, $02 ; 26
000640r 2  02 02 02 02  
000644r 2  02 02 02 11  
00065Cr 2  01 01 01 01    .byt $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $11, $11, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $01, $01, $01, $01 ; 27
000660r 2  01 01 01 01  
000664r 2  01 01 01 11  
00067Cr 2  01 01 01 01    .byt $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $11, $11, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $01, $01, $01, $01 ; 28
000680r 2  01 01 01 01  
000684r 2  01 01 01 11  
00069Cr 2  01 01 01 01    .byt $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $11, $11, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $01, $01, $01, $01 ; 29
0006A0r 2  01 01 01 01  
0006A4r 2  01 01 01 11  
0006BCr 2  01 01 01 01    .byt $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $01, $01, $01, $01 ; 30
0006C0r 2  01 01 01 01  
0006C4r 2  01 01 01 01  
0006DCr 2  01 01 01 01    .byt $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $01, $01, $01, $01 ; 31
0006E0r 2  01 01 01 01  
0006E4r 2  01 01 01 01  
0006FCr 2  01 01 01 01    .byt $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $01, $01, $01 ; 32
000700r 2  01 01 01 01  
000704r 2  01 01 01 01  
00071Br 2               
00071Br 2               
00071Br 2               map_level_1_2:
00071Br 2               
00071Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00071Fr 2  11 11 11 11  
000723r 2  11 11 11 11  
00073Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00073Fr 2  11 11 11 11  
000743r 2  11 11 11 11  
00075Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
00075Fr 2  11 11 11 11  
000763r 2  11 11 11 11  
00077Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
00077Fr 2  11 11 11 11  
000783r 2  11 11 11 11  
00079Br 2  11 11 11 11    .byt $11, $11, $11, $11, $03, $13, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00079Fr 2  03 13 11 11  
0007A3r 2  11 11 11 11  
0007BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $04, $14, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0007BFr 2  04 14 11 11  
0007C3r 2  11 11 11 11  
0007DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $05, $15, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0007DFr 2  05 15 11 11  
0007E3r 2  11 11 11 11  
0007FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $06, $16, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0007FFr 2  06 16 11 11  
000803r 2  11 11 11 11  
00081Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $01, $01, $01, $01, $01, $01
00081Fr 2  11 11 11 11  
000823r 2  11 11 11 11  
00083Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $01, $01, $01, $01, $01, $01
00083Fr 2  11 11 11 11  
000843r 2  11 11 11 11  
00085Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $01, $01, $01, $01, $01, $01
00085Fr 2  11 11 11 11  
000863r 2  11 11 11 11  
00087Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00087Fr 2  11 11 11 11  
000883r 2  11 11 11 11  
00089Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00089Fr 2  11 11 11 11  
0008A3r 2  11 11 11 11  
0008BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0008BFr 2  11 11 11 11  
0008C3r 2  11 11 11 11  
0008DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0008DFr 2  11 11 11 11  
0008E3r 2  11 11 11 11  
0008FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0008FFr 2  11 11 11 11  
000903r 2  11 11 11 11  
00091Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00091Fr 2  11 11 11 11  
000923r 2  11 11 11 11  
00093Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
00093Fr 2  11 11 11 11  
000943r 2  11 11 11 11  
00095Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $02, $01, $01, $01, $01, $01, $01
00095Fr 2  11 11 11 11  
000963r 2  11 11 11 11  
00097Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $02, $01, $01, $01, $01, $01, $01
00097Fr 2  11 11 11 11  
000983r 2  11 11 11 11  
00099Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
00099Fr 2  11 11 11 11  
0009A3r 2  11 11 11 11  
0009BBr 2  11 11 03 13    .byt $11, $11, $03, $13, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0009BFr 2  11 11 11 11  
0009C3r 2  11 11 11 11  
0009DBr 2  11 11 04 14    .byt $11, $11, $04, $14, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0009DFr 2  11 11 11 11  
0009E3r 2  11 11 11 11  
0009FBr 2  11 11 05 15    .byt $11, $11, $05, $15, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0009FFr 2  11 11 11 11  
000A03r 2  11 11 11 11  
000A1Br 2  11 11 06 16    .byt $11, $11, $06, $16, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
000A1Fr 2  11 11 11 11  
000A23r 2  11 11 11 11  
000A3Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000A3Fr 2  11 11 11 11  
000A43r 2  11 11 11 11  
000A5Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
000A5Fr 2  11 11 11 11  
000A63r 2  11 11 11 11  
000A7Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000A7Fr 2  11 11 11 11  
000A83r 2  11 11 11 11  
000A9Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
000A9Fr 2  11 11 11 11  
000AA3r 2  11 11 11 11  
000ABBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000ABFr 2  11 11 11 11  
000AC3r 2  11 11 11 11  
000ADBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000ADFr 2  11 11 11 11  
000AE3r 2  11 11 11 11  
000AFBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000AFFr 2  11 11 11 11  
000B03r 2  11 11 11 11  
000B1Br 2               
000B1Br 2               map_level_1_page_1:
000B1Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000B1Fr 2  11 11 11 11  
000B23r 2  11 11 11 11  
000B3Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000B3Fr 2  11 11 11 11  
000B43r 2  11 11 11 11  
000B5Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
000B5Fr 2  11 11 11 11  
000B63r 2  11 11 11 11  
000B7Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
000B7Fr 2  11 11 11 11  
000B83r 2  11 11 11 11  
000B9Br 2  11 11 11 11    .byt $11, $11, $11, $11, $03, $13, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000B9Fr 2  03 13 11 11  
000BA3r 2  11 11 11 11  
000BBBr 2  11 11 11 11    .byt $11, $11, $11, $11, $04, $14, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000BBFr 2  04 14 11 11  
000BC3r 2  11 11 11 11  
000BDBr 2  11 11 11 11    .byt $11, $11, $11, $11, $05, $15, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000BDFr 2  05 15 11 11  
000BE3r 2  11 11 11 11  
000BFBr 2  11 11 11 11    .byt $11, $11, $11, $11, $06, $16, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000BFFr 2  06 16 11 11  
000C03r 2  11 11 11 11  
000C1Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000C1Fr 2  11 11 11 11  
000C23r 2  11 11 11 11  
000C3Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000C3Fr 2  11 11 11 11  
000C43r 2  11 11 11 11  
000C5Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000C5Fr 2  11 11 11 11  
000C63r 2  11 11 11 11  
000C7Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000C7Fr 2  11 11 11 11  
000C83r 2  11 11 11 11  
000C9Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000C9Fr 2  11 11 11 11  
000CA3r 2  11 11 11 11  
000CBBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000CBFr 2  11 11 11 11  
000CC3r 2  11 11 11 11  
000CDBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000CDFr 2  11 11 11 11  
000CE3r 2  11 11 11 11  
000CFBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000CFFr 2  11 11 11 11  
000D03r 2  11 11 11 11  
000D1Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000D1Fr 2  11 11 11 11  
000D23r 2  11 11 11 11  
000D3Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
000D3Fr 2  11 11 11 11  
000D43r 2  11 11 11 11  
000D5Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
000D5Fr 2  11 11 11 11  
000D63r 2  11 11 11 11  
000D7Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
000D7Fr 2  11 11 11 11  
000D83r 2  11 11 11 11  
000D9Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
000D9Fr 2  11 11 11 11  
000DA3r 2  11 11 11 11  
000DBBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000DBFr 2  11 11 11 11  
000DC3r 2  11 11 11 11  
000DDBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000DDFr 2  11 11 11 11  
000DE3r 2  11 11 11 11  
000DFBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000DFFr 2  11 11 11 11  
000E03r 2  11 11 11 11  
000E1Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000E1Fr 2  11 11 11 11  
000E23r 2  11 11 11 11  
000E3Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000E3Fr 2  11 11 11 11  
000E43r 2  11 11 11 11  
000E5Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000E5Fr 2  11 11 11 11  
000E63r 2  11 11 11 11  
000E7Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
000E7Fr 2  11 11 11 11  
000E83r 2  11 11 11 11  
000E9Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000E9Fr 2  11 11 11 11  
000EA3r 2  11 11 11 11  
000EBBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000EBFr 2  11 11 11 11  
000EC3r 2  11 11 11 11  
000EDBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000EDFr 2  11 11 11 11  
000EE3r 2  11 11 11 11  
000EFBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000EFFr 2  11 11 11 11  
000F03r 2  11 11 11 11  
000F1Br 2               
000F1Br 2               map_level_1_page_2:
000F1Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000F1Fr 2  11 11 11 11  
000F23r 2  11 11 11 11  
000F3Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000F3Fr 2  11 11 11 11  
000F43r 2  11 11 11 11  
000F5Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
000F5Fr 2  11 11 11 11  
000F63r 2  11 11 11 11  
000F7Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $11, $11, $11
000F7Fr 2  11 11 11 11  
000F83r 2  11 11 11 11  
000F9Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000F9Fr 2  11 11 11 11  
000FA3r 2  11 11 11 11  
000FBBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000FBFr 2  11 11 11 11  
000FC3r 2  11 11 11 11  
000FDBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000FDFr 2  11 11 11 11  
000FE3r 2  11 11 11 11  
000FFBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000FFFr 2  11 11 11 11  
001003r 2  11 11 11 11  
00101Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00101Fr 2  11 11 11 11  
001023r 2  11 11 11 11  
00103Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00103Fr 2  11 11 11 11  
001043r 2  11 11 11 11  
00105Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00105Fr 2  11 11 11 11  
001063r 2  11 11 11 11  
00107Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00107Fr 2  11 11 11 11  
001083r 2  11 11 11 11  
00109Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00109Fr 2  11 11 11 11  
0010A3r 2  11 11 11 11  
0010BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0010BFr 2  11 11 11 11  
0010C3r 2  11 11 11 11  
0010DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0010DFr 2  11 11 11 11  
0010E3r 2  11 11 11 11  
0010FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0010FFr 2  11 11 11 11  
001103r 2  11 11 11 11  
00111Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00111Fr 2  11 11 11 11  
001123r 2  11 11 11 11  
00113Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
00113Fr 2  11 11 11 11  
001143r 2  11 11 11 11  
00115Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $02, $01, $01, $01, $01, $01, $01
00115Fr 2  11 11 11 11  
001163r 2  11 11 11 11  
00117Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $02, $02, $02, $02, $01, $01, $01, $01, $01, $01
00117Fr 2  11 11 11 11  
001183r 2  11 11 11 11  
00119Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $02, $01, $01, $01, $01, $01, $01
00119Fr 2  11 11 11 11  
0011A3r 2  11 11 11 11  
0011BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0011BFr 2  11 11 11 11  
0011C3r 2  11 11 11 11  
0011DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0011DFr 2  11 11 11 11  
0011E3r 2  11 11 11 11  
0011FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0011FFr 2  11 11 11 11  
001203r 2  11 11 11 11  
00121Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00121Fr 2  11 11 11 11  
001223r 2  11 11 11 11  
00123Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00123Fr 2  11 11 11 11  
001243r 2  11 11 11 11  
00125Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $01, $01, $01, $01, $01, $01
00125Fr 2  11 11 11 11  
001263r 2  11 11 11 11  
00127Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00127Fr 2  11 11 11 11  
001283r 2  11 11 11 11  
00129Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00129Fr 2  11 11 11 11  
0012A3r 2  11 11 11 11  
0012BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0012BFr 2  11 11 11 11  
0012C3r 2  11 11 11 11  
0012DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0012DFr 2  11 11 11 11  
0012E3r 2  11 11 11 11  
0012FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0012FFr 2  11 11 11 11  
001303r 2  11 11 11 11  
00131Br 2               
00131Br 2               map_level_1_page_3:
00131Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00131Fr 2  11 11 11 11  
001323r 2  11 11 11 11  
00133Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00133Fr 2  11 11 11 11  
001343r 2  11 11 11 11  
00135Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
00135Fr 2  11 11 11 11  
001363r 2  11 11 11 11  
00137Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
00137Fr 2  11 11 11 11  
001383r 2  11 11 11 11  
00139Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00139Fr 2  11 11 11 11  
0013A3r 2  11 11 11 11  
0013BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0013BFr 2  11 11 11 11  
0013C3r 2  11 11 11 11  
0013DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0013DFr 2  11 11 11 11  
0013E3r 2  11 11 11 11  
0013FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0013FFr 2  11 11 11 11  
001403r 2  11 11 11 11  
00141Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00141Fr 2  11 11 11 11  
001423r 2  11 11 11 11  
00143Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00143Fr 2  11 11 11 11  
001443r 2  11 11 11 11  
00145Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00145Fr 2  11 11 11 11  
001463r 2  11 11 11 11  
00147Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $11, $11, $11
00147Fr 2  11 11 11 11  
001483r 2  11 11 11 11  
00149Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00149Fr 2  11 11 11 11  
0014A3r 2  11 11 11 11  
0014BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0014BFr 2  11 11 11 11  
0014C3r 2  11 11 11 11  
0014DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0014DFr 2  11 11 11 11  
0014E3r 2  11 11 11 11  
0014FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0014FFr 2  11 11 11 11  
001503r 2  11 11 11 11  
00151Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00151Fr 2  11 11 11 11  
001523r 2  11 11 11 11  
00153Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $11, $11, $01, $01, $01, $01
00153Fr 2  11 11 11 11  
001543r 2  11 11 11 11  
00155Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $11, $11, $01, $01, $01, $01
00155Fr 2  11 11 11 11  
001563r 2  11 11 11 11  
00157Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
00157Fr 2  11 11 11 11  
001583r 2  11 11 11 11  
00159Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
00159Fr 2  11 11 11 11  
0015A3r 2  11 11 11 11  
0015BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0015BFr 2  11 11 11 11  
0015C3r 2  11 11 11 11  
0015DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0015DFr 2  11 11 11 11  
0015E3r 2  11 11 11 11  
0015FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0015FFr 2  11 11 11 11  
001603r 2  11 11 11 11  
00161Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00161Fr 2  11 11 11 11  
001623r 2  11 11 11 11  
00163Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00163Fr 2  11 11 11 11  
001643r 2  11 11 11 11  
00165Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
00165Fr 2  11 11 11 11  
001663r 2  11 11 11 11  
00167Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00167Fr 2  11 11 11 11  
001683r 2  11 11 11 11  
00169Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00169Fr 2  11 11 11 11  
0016A3r 2  11 11 11 11  
0016BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0016BFr 2  11 11 11 11  
0016C3r 2  11 11 11 11  
0016DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0016DFr 2  11 11 11 11  
0016E3r 2  11 11 11 11  
0016FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0016FFr 2  11 11 11 11  
001703r 2  11 11 11 11  
00171Br 2               
00171Br 2               
00171Br 2               attributeTableLevel1Page1:
00171Br 2                   ;   1    2    3    4    5    6    7    8
00171Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $FF, $00 ; !
00171Fr 2  00 00 FF 00  
001723r 2  00 FF 00 00    .byt $00, $FF, $00, $00, $00, $00, $00, $00 ; 2
001727r 2  00 00 00 00  
00172Br 2  00 00 00 FF    .byt $00, $00, $00, $FF, $00, $00, $00, $00 ; 3
00172Fr 2  00 00 00 00  
001733r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $55, $55, $00 ; 4
001737r 2  00 55 55 00  
00173Br 2  00 55 55 00    .byt $00, $55, $55, $00, $00, $55, $55, $00 ; 5
00173Fr 2  00 55 55 00  
001743r 2  55 55 55 55    .byt $55, $55, $55, $55, $55, $55, $55, $00 ; 6
001747r 2  55 55 55 00  
00174Br 2  A5 A5 A5 A5    .byt $A5, $A5, $A5, $A5, $A5, $A5, $A5, $AA ; 8
00174Fr 2  A5 A5 A5 AA  
001753r 2  AA AA AA AA    .byt $AA, $AA, $AA, $AA, $AA, $AA, $AA, $AA ; 8
001757r 2  AA AA AA AA  
00175Br 2               
00175Br 2               attributeTableLevel1Page2:
00175Br 2                   ;   1    2    3    4    5    6    7    8
00175Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; !
00175Fr 2  00 00 AA AA  
001763r 2  00 FF 00 00    .byt $00, $FF, $00, $00, $00, $00, $AA, $AA ; 2
001767r 2  00 00 AA AA  
00176Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; 3
00176Fr 2  00 00 AA AA  
001773r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; 4
001777r 2  00 00 AA AA  
00177Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $AA, $AA, $AA ; 5
00177Fr 2  00 AA AA AA  
001783r 2  FF 00 00 00    .byt $FF, $00, $00, $00, $00, $AA, $AA, $AA ; 6
001787r 2  00 AA AA AA  
00178Br 2  FF 00 00 00    .byt $FF, $00, $00, $00, $00, $00, $AA, $AA ; 8
00178Fr 2  00 00 AA AA  
001793r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; 8
001797r 2  00 00 AA AA  
00179Br 2               
00179Br 2               attributeTableLevel1Page3:
00179Br 2                   ;   1    2    3    4    5    6    7    8
00179Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; !
00179Fr 2  00 00 AA AA  
0017A3r 2  00 FF 00 00    .byt $00, $FF, $00, $00, $00, $00, $AA, $AA ; 2
0017A7r 2  00 00 AA AA  
0017ABr 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; 3
0017AFr 2  00 00 AA AA  
0017B3r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; 4
0017B7r 2  00 00 AA AA  
0017BBr 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $AA, $AA, $AA ; 5
0017BFr 2  00 AA AA AA  
0017C3r 2  FF 00 00 00    .byt $FF, $00, $00, $00, $00, $AA, $AA, $AA ; 6
0017C7r 2  00 AA AA AA  
0017CBr 2  FF 00 00 00    .byt $FF, $00, $00, $00, $00, $00, $AA, $AA ; 8
0017CFr 2  00 00 AA AA  
0017D3r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; 8
0017D7r 2  00 00 AA AA  
0017DBr 2               
0017DBr 2               
0017DBr 2               .segment "CODE"
000CB4r 2               
000CB4r 2               .proc screenFactory
000CB4r 2               
000CB4r 2  AD rr rr         LDA scrollPosition
000CB7r 2  C9 FD            CMP #$FD
000CB9r 2  F0 02            BEQ incrementScreenCount
000CBBr 2  D0 06            BNE incrementScreenDone
000CBDr 2               
000CBDr 2                 incrementScreenCount:
000CBDr 2  EE rr rr         INC screenCount
000CC0r 2  4C rr rr         JMP incrementScreenDone
000CC3r 2               
000CC3r 2                 incrementScreenDone:
000CC3r 2               
000CC3r 2                 resetScreens:
000CC3r 2               
000CC3r 2                 loadScreens:
000CC3r 2  AD rr rr         LDA screenCount
000CC6r 2  C9 00            CMP #00
000CC8r 2  F0 10            BEQ loadScreen1
000CCAr 2  C9 01            CMP #01
000CCCr 2  F0 23            BEQ loadScreen2
000CCEr 2  C9 02            CMP #02
000CD0r 2  F0 36            BEQ loadScreen3
000CD2r 2  C9 03            CMP #03
000CD4r 2  F0 3F            BEQ loadScreen4
000CD6r 2  C9 04            CMP #04
000CD8r 2  F0 48            BEQ resetScreen
000CDAr 2               
000CDAr 2                 loadScreen1:
000CDAr 2  A2 rr            LDX #<map_level_1_2
000CDCr 2  8E rr rr         STX lowMapByte
000CDFr 2  A2 rr            LDX #>map_level_1_2
000CE1r 2  8E rr rr         STX highMapByte
000CE4r 2               
000CE4r 2  A2 rr            LDX #<attributeTableLevel1Page2
000CE6r 2  8E rr rr         STX lAB
000CE9r 2  A2 rr            LDX #>attributeTableLevel1Page2
000CEBr 2  8E rr rr         STX hAB
000CEEr 2               
000CEEr 2  4C rr rr         JMP loadScreenDone
000CF1r 2               
000CF1r 2                 loadScreen2:
000CF1r 2  A2 rr            LDX #<map_level_1_page_1
000CF3r 2  8E rr rr         STX lowMapByte
000CF6r 2  A2 rr            LDX #>map_level_1_page_1
000CF8r 2  8E rr rr         STX highMapByte
000CFBr 2               
000CFBr 2  A2 rr            LDX #<attributeTableLevel1Page3
000CFDr 2  8E rr rr         STX lAB
000D00r 2  A2 rr            LDX #>attributeTableLevel1Page3
000D02r 2  8E rr rr         STX hAB
000D05r 2               
000D05r 2  4C rr rr         JMP loadScreenDone
000D08r 2               
000D08r 2                 loadScreen3:
000D08r 2  A2 rr            LDX #<map_level_1_page_2
000D0Ar 2  8E rr rr         STX lowMapByte
000D0Dr 2  A2 rr            LDX #>map_level_1_page_2
000D0Fr 2  8E rr rr         STX highMapByte
000D12r 2  4C rr rr         JMP loadScreenDone
000D15r 2               
000D15r 2                 loadScreen4:
000D15r 2  A2 rr            LDX #<map_level_1_page_3
000D17r 2  8E rr rr         STX lowMapByte
000D1Ar 2  A2 rr            LDX #>map_level_1_page_3
000D1Cr 2  8E rr rr         STX highMapByte
000D1Fr 2  4C rr rr         JMP loadScreenDone
000D22r 2               
000D22r 2                 resetScreen:
000D22r 2  A2 00            LDX #00
000D24r 2  8E rr rr         STX screenCount
000D27r 2  4C rr rr         JMP resetScreens
000D2Ar 2               
000D2Ar 2                 loadScreenDone:
000D2Ar 2  60               RTS
000D2Br 2               .endproc
000D2Br 2               
000D2Br 2               .proc loadStageOneBackground
000D2Br 2  A9 rr            LDA #<map_level_1
000D2Dr 2  8D rr rr         STA mapLoByte       ; put the low byte of the address of background into pointer
000D30r 2  A9 rr            LDA #>map_level_1
000D32r 2  8D rr rr         STA mapHiByte       ; put the high byte of the address into pointer
000D35r 2               .endproc
000D35r 2               
000D35r 1               .include "./lib/stages/stageTwo.asm"
000D35r 2               .segment "RODATA"
0017DBr 2               
0017DBr 2               levelPalete:
0017DBr 2                   palette_data_stage_2:
0017DBr 2                           ; 00                        01              10              11
0017DBr 2  31 00 10 2D        		.byt $31,$00,$10,$2D,  $31,$1D,$27,$37,  $10,$1D,$27,$10,  $31,$3F,$3c,$02   ;;background
0017DFr 2  31 1D 27 37  
0017E3r 2  10 1D 27 10  
0017EBr 2  32 10 1A 0F        		.byt $32,$10,$1A,$0F,  $32,$36,$17,$0F,  $10,$30,$21,$0F,  $32,$29,$05,$01   ;;sprite palette
0017EFr 2  32 36 17 0F  
0017F3r 2  10 30 21 0F  
0017FBr 2               
0017FBr 2               map_level_2:
0017FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 1
0017FFr 2  11 11 11 11  
001803r 2  11 11 11 11  
00181Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 1
00181Fr 2  11 11 11 11  
001823r 2  11 11 11 11  
00183Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $03, $04, $05, $06, $11, $11, $11, $11 ; 2
00183Fr 2  11 11 11 11  
001843r 2  11 11 11 11  
00185Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $13, $14, $15, $16, $11, $11, $11, $11 ; 3
00185Fr 2  11 11 11 11  
001863r 2  11 11 11 11  
00187Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 6
00187Fr 2  11 11 11 11  
001883r 2  11 11 11 11  
00189Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 7
00189Fr 2  11 11 11 11  
0018A3r 2  11 11 11 11  
0018BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $20, $21, $11, $11, $11, $11, $11, $11, $11 ; 12
0018BFr 2  11 11 11 11  
0018C3r 2  11 11 11 11  
0018DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $30, $41, $11, $11, $11, $11, $11, $11, $11 ; 17
0018DFr 2  11 11 11 11  
0018E3r 2  11 11 11 11  
0018FBr 2  29 2A 29 2A    .byt $29, $2A, $29, $2A, $29, $2A, $29, $2A, $29, $2F, $11, $11, $11, $11, $11, $11, $11, $11, $3d, $3d, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 20
0018FFr 2  29 2A 29 2A  
001903r 2  29 2F 11 11  
00191Br 2  2C 2B 2C 2B    .byt $2C, $2B, $2C, $2B, $2c, $2b, $2c, $2b, $2c, $2E, $2F, $11, $11, $11, $11, $11, $11, $3d, $2e, $2e, $29, $2a, $29, $2A, $29, $2A, $29, $2A, $29, $2a, $29, $2a ; 20
00191Fr 2  2C 2B 2C 2B  
001923r 2  2C 2E 2F 11  
00193Br 2  2C 2B 2C 2B    .byt $2C, $2B, $2C, $2b, $2c, $2b, $2c, $2b, $2c, $2E, $2E, $2F, $11, $11, $11, $11, $3d, $2e, $2e, $2e, $2c, $2b, $2c, $2b, $2c, $2b, $2c, $2b, $2c, $2b, $2c, $2b ; 20
00193Fr 2  2C 2B 2C 2B  
001943r 2  2C 2E 2E 2F  
00195Br 2  2C 2B 2C 2B    .byt $2C, $2B, $2C, $2b, $2c, $2b, $2c, $2b, $2c, $2E, $2E, $2E, $2f, $11, $29, $2a, $2e, $2e, $2e, $2e, $2c, $2b, $2c, $2b, $2c, $2b, $2c, $2b, $2c, $2b, $2c, $2b ; 20
00195Fr 2  2C 2B 2C 2B  
001963r 2  2C 2E 2E 2E  
00197Br 2  2C 2B 2C 2B    .byt $2C, $2B, $2C, $2B, $2C, $2b, $2C, $2b, $2C, $2E, $2E, $2E, $2e, $2a, $2c, $2B, $2e, $2e, $2e, $2e, $2c, $2b, $2c, $2b, $2c, $2b, $2c, $2b, $2c, $2b, $2c, $2b ; 21
00197Fr 2  2C 2B 2C 2B  
001983r 2  2C 2E 2E 2E  
00199Br 2  27 28 27 28    .byt $27, $28, $27, $28, $27, $28, $27, $28, $27, $2E, $2E, $2E, $2e, $2B, $2c, $2B, $2e, $2e, $2e, $2e, $27, $28, $27, $28, $27, $28, $27, $28, $27, $28, $27, $28 ; 22
00199Fr 2  27 28 27 28  
0019A3r 2  27 2E 2E 2E  
0019BBr 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $0A, $2D, $2E, $2E, $2e, $2B, $2C, $2B, $2e, $2e, $2e, $3f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 23
0019BFr 2  00 00 00 00  
0019C3r 2  0A 2D 2E 2E  
0019DBr 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $0A, $0A, $2D, $2E, $2e, $2B, $2C, $2B, $2e, $2e, $3f, $0a, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 23
0019DFr 2  00 00 00 00  
0019E3r 2  0A 0A 2D 2E  
0019FBr 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0A, $2D, $2e, $2B, $2C, $2B, $2e, $3f, $0a, $0a, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 23
0019FFr 2  00 00 00 00  
001A03r 2  00 00 0A 2D  
001A1Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0A, $0A, $2D, $28, $27, $28, $3F, $0a, $0a, $0a, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 24
001A1Fr 2  00 00 00 00  
001A23r 2  00 00 0A 0A  
001A3Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0a, $0a, $0a, $0a, $0a, $0a, $0a, $0a, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 25
001A3Fr 2  00 00 00 00  
001A43r 2  00 00 00 00  
001A5Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0a, $0a, $0a, $0a, $0a, $0a, $0a, $0a, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 25
001A5Fr 2  00 00 00 00  
001A63r 2  00 00 00 00  
001A7Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 25
001A7Fr 2  00 00 00 00  
001A83r 2  00 00 00 00  
001A9Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 25
001A9Fr 2  00 00 00 00  
001AA3r 2  00 00 00 00  
001ABBr 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 25
001ABFr 2  00 00 00 00  
001AC3r 2  00 00 00 00  
001ADBr 2  00 3B 3B 3B    .byt $00, $3b, $3b, $3b, $00, $00, $3b, $3b, $3b, $00, $00, $00, $00, $00, $00, $00, $3b, $3b, $3b, $00, $00, $3b, $3b, $3b, $3b, $00, $00, $00, $3b, $3b, $3b, $00 ; 25
001ADFr 2  00 00 3B 3B  
001AE3r 2  3B 00 00 00  
001AFBr 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $3b, $3b, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 25
001AFFr 2  00 00 00 00  
001B03r 2  00 00 00 3B  
001B1Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 26
001B1Fr 2  00 00 00 00  
001B23r 2  00 00 00 00  
001B3Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 26
001B3Fr 2  00 00 00 00  
001B43r 2  00 00 00 00  
001B5Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 29
001B5Fr 2  00 00 00 00  
001B63r 2  00 00 00 00  
001B7Br 2  4D 4D 4D 4D    .byt $4D, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d ; 32
001B7Fr 2  4D 4D 4D 4D  
001B83r 2  4D 4D 4D 4D  
001B9Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4B, $4c, $11, $11, $11, $11, $11, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 00
001B9Fr 2  00 00 00 00  
001BA3r 2  00 00 00 00  
001BBBr 2               
001BBBr 2               
001BBBr 2               map_level_2_2:
001BBBr 2  12 11 11 11      .byt $12, $11, $11, $11, $11, $11, $11, $11, $29, $2C, $2C, $2C, $2C, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4D, $00, $00, $00
001BBFr 2  11 11 11 11  
001BC3r 2  29 2C 2C 2C  
001BDBr 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2B, $2B, $2B, $2B, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
001BDFr 2  11 11 11 11  
001BE3r 2  2A 2B 2B 2B  
001BFBr 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $29, $2C, $2C, $2C, $2C, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
001BFFr 2  11 11 11 11  
001C03r 2  29 2C 2C 2C  
001C1Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2B, $2b, $2b, $2B, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
001C1Fr 2  11 11 11 11  
001C23r 2  2A 2B 2B 2B  
001C3Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $2C, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
001C3Fr 2  11 11 11 11  
001C43r 2  29 2C 2C 2C  
001C5Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
001C5Fr 2  11 11 11 11  
001C63r 2  2A 2B 2B 2B  
001C7Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $2C, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
001C7Fr 2  11 11 11 11  
001C83r 2  29 2C 2C 2C  
001C9Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
001C9Fr 2  11 11 11 11  
001CA3r 2  2A 2B 2B 2B  
001CBBr 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $2C, $27, $0A, $0A, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
001CBFr 2  11 11 11 11  
001CC3r 2  29 2C 2C 2C  
001CDBr 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
001CDFr 2  11 11 11 11  
001CE3r 2  11 2A 2B 2B  
001CFBr 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
001CFFr 2  11 11 11 11  
001D03r 2  11 29 2C 2C  
001D1Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $4d, $00, $00, $00
001D1Fr 2  11 11 11 11  
001D23r 2  11 2A 2B 2B  
001D3Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $0a, $0a, $00, $00, $00, $00, $3b, $00, $00, $00, $4d, $4B, $4B, $4B
001D3Fr 2  11 11 11 11  
001D43r 2  11 29 2C 2C  
001D5Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $0a, $0a, $00, $00, $00, $00, $3b, $00, $00, $00, $4d, $4c, $4c, $4c
001D5Fr 2  11 11 11 11  
001D63r 2  11 2A 2B 2B  
001D7Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $0a, $0a, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $11, $11, $11
001D7Fr 2  11 11 11 11  
001D83r 2  11 29 2C 2C  
001D9Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $0a, $0a, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $11, $11, $11
001D9Fr 2  11 11 11 11  
001DA3r 2  11 2A 2B 2B  
001DBBr 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $0a, $0a, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $11, $11, $11
001DBFr 2  11 11 11 11  
001DC3r 2  11 29 2C 2C  
001DDBr 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $0a, $0a, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $11, $11, $11
001DDFr 2  11 11 11 11  
001DE3r 2  11 2A 2B 2B  
001DFBr 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $0a, $0a, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $11, $11, $11
001DFFr 2  11 11 11 11  
001E03r 2  11 29 2C 2C  
001E1Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $0a, $0a, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
001E1Fr 2  11 11 11 11  
001E23r 2  11 2A 2B 2B  
001E3Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
001E3Fr 2  11 11 11 11  
001E43r 2  11 2A 2B 2B  
001E5Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
001E5Fr 2  11 11 11 11  
001E63r 2  11 29 2C 2C  
001E7Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
001E7Fr 2  11 11 11 11  
001E83r 2  11 2A 2B 2B  
001E9Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $20, $30, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
001E9Fr 2  11 11 20 30  
001EA3r 2  11 29 2C 2C  
001EBBr 2  11 11 03 13      .byt $11, $11, $03, $13, $11, $11, $21, $41, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
001EBFr 2  11 11 21 41  
001EC3r 2  11 2A 2B 2B  
001EDBr 2  11 11 04 14      .byt $11, $11, $04, $14, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
001EDFr 2  11 11 11 11  
001EE3r 2  11 29 2C 2C  
001EFBr 2  11 11 05 15      .byt $11, $11, $05, $15, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
001EFFr 2  11 11 11 11  
001F03r 2  11 2A 2B 2B  
001F1Br 2  11 11 06 16      .byt $11, $11, $06, $16, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
001F1Fr 2  11 11 11 11  
001F23r 2  11 29 2C 2C  
001F3Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
001F3Fr 2  11 11 11 11  
001F43r 2  11 2A 2B 2B  
001F5Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
001F5Fr 2  11 11 11 11  
001F63r 2  11 29 2C 2C  
001F7Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
001F7Fr 2  11 11 11 11  
001F83r 2  11 2A 2B 2B  
001F9Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
001F9Fr 2  11 11 11 11  
001FA3r 2  11 2A 2B 2B  
001FBBr 2               
001FBBr 2               map_level_2_page_1:
001FBBr 2  12 11 11 11      .byt $12, $11, $11, $11, $11, $11, $11, $11, $29, $2C, $2C, $2C, $2C, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4D, $00, $00, $00
001FBFr 2  11 11 11 11  
001FC3r 2  29 2C 2C 2C  
001FDBr 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2B, $2B, $2B, $2B, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
001FDFr 2  11 11 11 11  
001FE3r 2  2A 2B 2B 2B  
001FFBr 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $29, $2C, $2C, $2C, $2C, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
001FFFr 2  11 11 11 11  
002003r 2  29 2C 2C 2C  
00201Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2B, $2b, $2b, $2B, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
00201Fr 2  11 11 11 11  
002023r 2  2A 2B 2B 2B  
00203Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $2C, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
00203Fr 2  11 11 11 11  
002043r 2  29 2C 2C 2C  
00205Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
00205Fr 2  11 11 11 11  
002063r 2  2A 2B 2B 2B  
00207Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $2C, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
00207Fr 2  11 11 11 11  
002083r 2  29 2C 2C 2C  
00209Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
00209Fr 2  11 11 11 11  
0020A3r 2  2A 2B 2B 2B  
0020BBr 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $2C, $27, $0A, $0A, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
0020BFr 2  11 11 11 11  
0020C3r 2  29 2C 2C 2C  
0020DBr 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
0020DFr 2  11 11 11 11  
0020E3r 2  11 2A 2B 2B  
0020FBr 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
0020FFr 2  11 11 11 11  
002103r 2  11 29 2C 2C  
00211Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $4d, $00, $00, $00
00211Fr 2  11 11 11 11  
002123r 2  11 2A 2B 2B  
00213Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $4d, $4B, $4B, $4B
00213Fr 2  11 11 11 11  
002143r 2  11 29 2C 2C  
00215Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $4d, $4c, $4c, $4c
00215Fr 2  11 11 11 11  
002163r 2  11 2A 2B 2B  
00217Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $11, $11, $11
00217Fr 2  11 11 11 11  
002183r 2  11 29 2C 2C  
00219Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $11, $11, $11
00219Fr 2  11 11 11 11  
0021A3r 2  11 2A 2B 2B  
0021BBr 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $11, $11, $11
0021BFr 2  11 11 11 11  
0021C3r 2  11 29 2C 2C  
0021DBr 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $11, $11, $11
0021DFr 2  11 11 11 11  
0021E3r 2  11 2A 2B 2B  
0021FBr 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $11, $11, $11
0021FFr 2  11 11 11 11  
002203r 2  11 29 2C 2C  
00221Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
00221Fr 2  11 11 11 11  
002223r 2  11 2A 2B 2B  
00223Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
00223Fr 2  11 11 11 11  
002243r 2  11 2A 2B 2B  
00225Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
00225Fr 2  11 11 11 11  
002263r 2  11 29 2C 2C  
00227Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
00227Fr 2  11 11 11 11  
002283r 2  11 2A 2B 2B  
00229Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $20, $30, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
00229Fr 2  11 11 20 30  
0022A3r 2  11 29 2C 2C  
0022BBr 2  11 11 03 13      .byt $11, $11, $03, $13, $11, $11, $21, $41, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
0022BFr 2  11 11 21 41  
0022C3r 2  11 2A 2B 2B  
0022DBr 2  11 11 04 14      .byt $11, $11, $04, $14, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
0022DFr 2  11 11 11 11  
0022E3r 2  11 29 2C 2C  
0022FBr 2  11 11 05 15      .byt $11, $11, $05, $15, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
0022FFr 2  11 11 11 11  
002303r 2  11 2A 2B 2B  
00231Br 2  11 11 06 16      .byt $11, $11, $06, $16, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
00231Fr 2  11 11 11 11  
002323r 2  11 29 2C 2C  
00233Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
00233Fr 2  11 11 11 11  
002343r 2  11 2A 2B 2B  
00235Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
00235Fr 2  11 11 11 11  
002363r 2  11 29 2C 2C  
00237Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
00237Fr 2  11 11 11 11  
002383r 2  11 2A 2B 2B  
00239Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
00239Fr 2  11 11 11 11  
0023A3r 2  11 2A 2B 2B  
0023BBr 2               
0023BBr 2               map_level_2_page_2:
0023BBr 2  12 11 11 11      .byt $12, $11, $11, $11, $11, $11, $11, $11, $29, $2C, $2C, $2C, $2C, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4D, $00, $00, $00
0023BFr 2  11 11 11 11  
0023C3r 2  29 2C 2C 2C  
0023DBr 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2B, $2B, $2B, $2B, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
0023DFr 2  11 11 11 11  
0023E3r 2  2A 2B 2B 2B  
0023FBr 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $29, $2C, $2C, $2C, $2C, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
0023FFr 2  11 11 11 11  
002403r 2  29 2C 2C 2C  
00241Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2B, $2b, $2b, $2B, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
00241Fr 2  11 11 11 11  
002423r 2  2A 2B 2B 2B  
00243Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $2C, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
00243Fr 2  11 11 11 11  
002443r 2  29 2C 2C 2C  
00245Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
00245Fr 2  11 11 11 11  
002463r 2  2A 2B 2B 2B  
00247Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $2C, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
00247Fr 2  11 11 11 11  
002483r 2  29 2C 2C 2C  
00249Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
00249Fr 2  11 11 11 11  
0024A3r 2  2A 2B 2B 2B  
0024BBr 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $2C, $27, $0A, $0A, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
0024BFr 2  11 11 11 11  
0024C3r 2  29 2C 2C 2C  
0024DBr 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
0024DFr 2  11 11 11 11  
0024E3r 2  11 2A 2B 2B  
0024FBr 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
0024FFr 2  11 11 11 11  
002503r 2  11 29 2C 2C  
00251Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $4d, $00, $00, $00
00251Fr 2  11 11 11 11  
002523r 2  11 2A 2B 2B  
00253Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $4d, $4B, $4B, $4B
00253Fr 2  11 11 11 11  
002543r 2  11 29 2C 2C  
00255Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $4d, $4c, $4c, $4c
00255Fr 2  11 11 11 11  
002563r 2  11 2A 2B 2B  
00257Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $11, $11, $11
00257Fr 2  11 11 11 11  
002583r 2  11 29 2C 2C  
00259Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $11, $11, $11
00259Fr 2  11 11 11 11  
0025A3r 2  11 2A 2B 2B  
0025BBr 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $11, $11, $11
0025BFr 2  11 11 11 11  
0025C3r 2  11 29 2C 2C  
0025DBr 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $11, $11, $11
0025DFr 2  11 11 11 11  
0025E3r 2  11 2A 2B 2B  
0025FBr 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $11, $11, $11
0025FFr 2  11 11 11 11  
002603r 2  11 29 2C 2C  
00261Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
00261Fr 2  11 11 11 11  
002623r 2  11 2A 2B 2B  
00263Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
00263Fr 2  11 11 11 11  
002643r 2  11 2A 2B 2B  
00265Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
00265Fr 2  11 11 11 11  
002663r 2  11 29 2C 2C  
00267Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
00267Fr 2  11 11 11 11  
002683r 2  11 2A 2B 2B  
00269Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $20, $30, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
00269Fr 2  11 11 20 30  
0026A3r 2  11 29 2C 2C  
0026BBr 2  11 11 03 13      .byt $11, $11, $03, $13, $11, $11, $21, $41, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
0026BFr 2  11 11 21 41  
0026C3r 2  11 2A 2B 2B  
0026DBr 2  11 11 04 14      .byt $11, $11, $04, $14, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
0026DFr 2  11 11 11 11  
0026E3r 2  11 29 2C 2C  
0026FBr 2  11 11 05 15      .byt $11, $11, $05, $15, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
0026FFr 2  11 11 11 11  
002703r 2  11 2A 2B 2B  
00271Br 2  11 11 06 16      .byt $11, $11, $06, $16, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
00271Fr 2  11 11 11 11  
002723r 2  11 29 2C 2C  
00273Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
00273Fr 2  11 11 11 11  
002743r 2  11 2A 2B 2B  
00275Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
00275Fr 2  11 11 11 11  
002763r 2  11 29 2C 2C  
00277Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
00277Fr 2  11 11 11 11  
002783r 2  11 2A 2B 2B  
00279Br 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
00279Fr 2  11 11 11 11  
0027A3r 2  11 2A 2B 2B  
0027BBr 2               
0027BBr 2               attributeTableLevel2Page1:
0027BBr 2                   ;   1    2    3    4    5    6    7    8
0027BBr 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $FF, $00 ; !
0027BFr 2  00 00 FF 00  
0027C3r 2  00 FF 00 00    .byt $00, $FF, $00, $00, $00, $00, $00, $00 ; 2
0027C7r 2  00 00 00 00  
0027CBr 2  55 55 55 55    .byt $55, $55, $55, $55, $55, $55, $55, $55 ; 3
0027CFr 2  55 55 55 55  
0027D3r 2  05 05 A5 55    .byt $05, $05, $A5, $55, $a5, $05, $05, $05 ; 4
0027D7r 2  A5 05 05 05  
0027DBr 2  00 00 08 AA    .byt $00, $00, $08, $aa, $aa, $00, $00, $00 ; 5
0027DFr 2  AA 00 00 00  
0027E3r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00 ; 6
0027E7r 2  00 00 00 00  
0027EBr 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00 ; 8
0027EFr 2  00 00 00 00  
0027F3r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00 ; 8
0027F7r 2  00 00 00 00  
0027FBr 2               
0027FBr 2               attributeTableLevel2Page2:
0027FBr 2                       ;   1    2    3    4    5    6    7    8
0027FBr 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; !
0027FFr 2  00 00 00 00  
002803r 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; 2
002807r 2  00 00 00 00  
00280Br 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; 3
00280Fr 2  00 00 00 00  
002813r 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; 4
002817r 2  00 00 00 00  
00281Br 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; 5
00281Fr 2  00 00 00 00  
002823r 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; 6
002827r 2  00 00 00 00  
00282Br 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; 8
00282Fr 2  00 00 00 00  
002833r 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; 8
002837r 2  00 00 00 00  
00283Br 2               
00283Br 2               attributeTableLevel2Page3:
00283Br 2                           ;   1    2    3    4    5    6    7    8
00283Br 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; !
00283Fr 2  00 00 00 00  
002843r 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; 2
002847r 2  00 00 00 00  
00284Br 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; 3
00284Fr 2  00 00 00 00  
002853r 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; 4
002857r 2  00 00 00 00  
00285Br 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; 5
00285Fr 2  00 00 00 00  
002863r 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; 6
002867r 2  00 00 00 00  
00286Br 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; 8
00286Fr 2  00 00 00 00  
002873r 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; 8
002877r 2  00 00 00 00  
00287Br 2               
00287Br 2               
00287Br 2               .segment "CODE"
000D35r 2               
000D35r 2               .proc screenFactoryTwo
000D35r 2               
000D35r 2  AD rr rr         LDA scrollPosition
000D38r 2  C9 FD            CMP #$FD
000D3Ar 2  F0 02            BEQ incrementScreenCount
000D3Cr 2  D0 06            BNE incrementScreenDone
000D3Er 2               
000D3Er 2                 incrementScreenCount:
000D3Er 2  EE rr rr         INC screenCount
000D41r 2  4C rr rr         JMP incrementScreenDone
000D44r 2               
000D44r 2                 incrementScreenDone:
000D44r 2               
000D44r 2                 loadScreens:
000D44r 2  AD rr rr         LDA screenCount
000D47r 2  C9 00            CMP #00
000D49r 2  F0 0C            BEQ loadScreen1
000D4Br 2  C9 01            CMP #01
000D4Dr 2  F0 1F            BEQ loadScreen2
000D4Fr 2  C9 02            CMP #02
000D51r 2  F0 32            BEQ loadScreen3
000D53r 2  C9 03            CMP #03
000D55r 2  F0 3B            BEQ resetScreen
000D57r 2               
000D57r 2                 loadScreen1:
000D57r 2  A2 rr            LDX #<map_level_2_2
000D59r 2  8E rr rr         STX lowMapByte
000D5Cr 2  A2 rr            LDX #>map_level_2_2
000D5Er 2  8E rr rr         STX highMapByte
000D61r 2               
000D61r 2  A2 rr            LDX #<attributeTableLevel2Page2
000D63r 2  8E rr rr         STX lAB
000D66r 2  A2 rr            LDX #>attributeTableLevel2Page2
000D68r 2  8E rr rr         STX hAB
000D6Br 2               
000D6Br 2  4C rr rr         JMP loadScreenDone
000D6Er 2               
000D6Er 2                 loadScreen2:
000D6Er 2  A2 rr            LDX #<map_level_2_page_1
000D70r 2  8E rr rr         STX lowMapByte
000D73r 2  A2 rr            LDX #>map_level_2_page_1
000D75r 2  8E rr rr         STX highMapByte
000D78r 2               
000D78r 2  A2 rr            LDX #<attributeTableLevel2Page3
000D7Ar 2  8E rr rr         STX lAB
000D7Dr 2  A2 rr            LDX #>attributeTableLevel2Page3
000D7Fr 2  8E rr rr         STX hAB
000D82r 2               
000D82r 2  4C rr rr         JMP loadScreenDone
000D85r 2               
000D85r 2                 loadScreen3:
000D85r 2  A2 rr            LDX #<map_level_2_page_2
000D87r 2  8E rr rr         STX lowMapByte
000D8Ar 2  A2 rr            LDX #>map_level_2_page_2
000D8Cr 2  8E rr rr         STX highMapByte
000D8Fr 2  4C rr rr         JMP loadScreenDone
000D92r 2               
000D92r 2                 resetScreen:
000D92r 2  A2 00            LDX #00
000D94r 2  8E rr rr         STX screenCount
000D97r 2  4C rr rr         JMP resetScreens
000D9Ar 2               
000D9Ar 2                 loadScreenDone:
000D9Ar 2  60               RTS
000D9Br 2               
000D9Br 2                 resetScreens:
000D9Br 2  A9 01            LDA #01
000D9Dr 2  85 rr            STA isStageEnd
000D9Fr 2  60               RTS
000DA0r 2               .endproc
000DA0r 2               
000DA0r 2               .proc loadStageTwoBackground
000DA0r 2  A9 rr            LDA #<map_level_2
000DA2r 2  8D rr rr         STA mapLoByte       ; put the low byte of the address of background into pointer
000DA5r 2  A9 rr            LDA #>map_level_2
000DA7r 2  8D rr rr         STA mapHiByte       ; put the high byte of the address into pointer
000DAAr 2               .endproc
000DAAr 2               
000DAAr 2               
000DAAr 2               .proc loadPaleteStageTwo
000DAAr 2                 LoadPalettes:
000DAAr 2  AD 02 20         LDA $2002
000DADr 2  A9 3F            LDA #$3F
000DAFr 2  8D 06 20         STA $2006             ; говорим ppu что нам необходим адрес 3F00 здесь храниться палитра
000DB2r 2  A9 00            LDA #$00
000DB4r 2  8D 06 20         STA $2006             ; Сначала старший байт записываем 3F потом младший 00 при записи этот адрес будет автоматически увеличиваться
000DB7r 2               
000DB7r 2  A2 00            LDX #$00              ; X = 0
000DB9r 2                 LoadPalettesLoop:
000DB9r 2  BD rr rr         LDA palette_data_stage_2, x
000DBCr 2  8D 07 20         STA $2007             ; записываем в ppu по факту в адрес 3F00
000DBFr 2  E8               INX                   ; X = X + 1
000DC0r 2  E0 20            CPX #$20
000DC2r 2  D0 F5            BNE LoadPalettesLoop
000DC4r 2  60               RTS
000DC5r 2               .endproc
000DC5r 2               
000DC5r 1               .include "./lib/palete.asm"
000DC5r 2               .segment "RODATA"
00287Br 2               	palette_data:
00287Br 2  09 0A 0C 0D    		.byt $09,$0A,$0C,$0D,  $21,$0C,$08,$28,  $21,$1C,$29,$07,  $31,$3F,$3c,$02   ;;background
00287Fr 2  21 0C 08 28  
002883r 2  21 1C 29 07  
00288Br 2  32 10 1A 0F    		.byt $32,$10,$1A,$0F,  $32,$36,$17,$0F,  $32,$30,$21,$0F,  $32,$27,$17,$0F   ;;sprite palette
00288Fr 2  32 36 17 0F  
002893r 2  32 30 21 0F  
00289Br 2               
00289Br 2               .segment "CODE"
000DC5r 2               
000DC5r 2               .proc loadPalete
000DC5r 2                 LoadPalettes:
000DC5r 2  AD 02 20         LDA $2002
000DC8r 2  A9 3F            LDA #$3F
000DCAr 2  8D 06 20         STA $2006             ; говорим ppu что нам необходим адрес 3F00 здесь храниться палитра
000DCDr 2  A9 00            LDA #$00
000DCFr 2  8D 06 20         STA $2006             ; Сначала старший байт записываем 3F потом младший 00 при записи этот адрес будет автоматически увеличиваться
000DD2r 2               
000DD2r 2  A2 00            LDX #$00              ; X = 0
000DD4r 2                 LoadPalettesLoop:
000DD4r 2  BD rr rr         LDA palette_data, x
000DD7r 2  8D 07 20         STA $2007             ; записываем в ppu по факту в адрес 3F00
000DDAr 2  E8               INX                   ; X = X + 1
000DDBr 2  E0 20            CPX #$20
000DDDr 2  D0 F5            BNE LoadPalettesLoop
000DDFr 2  60               RTS
000DE0r 2               .endproc
000DE0r 2               
000DE0r 1               .include "./lib/reset.asm"
000DE0r 2               .segment "CODE"
000DE0r 2               
000DE0r 2               .proc resetProcedure
000DE0r 2               
000DE0r 2               
000DE0r 2  78           	sei
000DE1r 2  A2 00        	ldx #0
000DE3r 2  8E 00 20     	stx $2000		; обнуляем память
000DE6r 2  8E 01 20     	stx $2001		; выключаем рендер
000DE9r 2  8E 10 40     	stx $4010	; отключаем DMC
000DECr 2  CA           	dex 				; X = $FF
000DEDr 2  9A           	txs					; Стэк равен = $FF
000DEEr 2  2C 02 20     :	bit $2002
000DF1r 2  10 FB        	bpl :-
000DF3r 2               
000DF3r 2  60           	RTS
000DF4r 2               .endproc
000DF4r 2               
000DF4r 1               .include "./lib/stageFunctions.asm"
000DF4r 2               
000DF4r 2               .segment "CODE"
000DF4r 2               
000DF4r 2               .proc setStageVar
000DF4r 2  A9 00          lda #00
000DF6r 2  8D rr rr       sta currentStage
000DF9r 2               
000DF9r 2  60             rts
000DFAr 2               .endproc
000DFAr 2               
000DFAr 1               .include "./lib/backgroundFunctions.asm"
000DFAr 2               .segment "RODATA"
00289Br 2               
00289Br 2               .segment "CODE"
000DFAr 2               
000DFAr 2               .proc firstProcBackground
000DFAr 2  60              RTS
000DFBr 2               .endproc
000DFBr 2               
000DFBr 2               .proc loadBackground
000DFBr 2                   LoadBackground:
000DFBr 2  AD 02 20           LDA $2002             ; read PPU status to reset the high/low latch
000DFEr 2  A9 20              LDA #$20
000E00r 2  8D 06 20           STA $2006             ; write the high byte of $2000 address
000E03r 2  A9 00              LDA #$00
000E05r 2  8D 06 20           STA $2006             ; write the low byte of $2000 address
000E08r 2               
000E08r 2  A2 00              LDX #$00            ; start at pointer + 0
000E0Ar 2  A0 00              LDY #$00
000E0Cr 2                   OutsideLoop:
000E0Cr 2               
000E0Cr 2                   InsideLoop:
000E0Cr 2  B1 rr              LDA (mapLoByte), y  ; copy one background byte from address in pointer plus Y
000E0Er 2  8D 07 20           STA $2007           ; this runs 256 * 4 times
000E11r 2               
000E11r 2  C8                 INY                 ; inside loop counter
000E12r 2  C0 00              CPY #$00
000E14r 2  D0 F6              BNE InsideLoop      ; run the inside loop 256 times before continuing down
000E16r 2               
000E16r 2  EE rr rr           INC mapHiByte       ; low byte went 0 to 256, so high byte needs to be changed now
000E19r 2               
000E19r 2  E8                 INX
000E1Ar 2  E0 04              CPX #$04
000E1Cr 2  D0 EE              BNE OutsideLoop     ; run the outside loop 256 times before continuing down
000E1Er 2               
000E1Er 2  60                 RTS
000E1Fr 2               .endproc
000E1Fr 2               
000E1Fr 2               .proc loadAttributePages
000E1Fr 2                 LoadAttributePage1:
000E1Fr 2  AD 02 20         lda $2002
000E22r 2  A9 23            lda #$23
000E24r 2  8D 06 20         sta $2006
000E27r 2  A9 C0            lda #$C0
000E29r 2  8D 06 20         sta $2006
000E2Cr 2               
000E2Cr 2  A2 00            ldx #00
000E2Er 2                 AttributePage1Loop:
000E2Er 2  BD rr rr         lda attributeTableLevel2Page1, x
000E31r 2  8D 07 20         sta $2007
000E34r 2  E8               inx
000E35r 2  E0 42            cpx #66
000E37r 2  D0 F5            bne AttributePage1Loop
000E39r 2               
000E39r 2                 LoadAttributePage2:
000E39r 2  AD 02 20         lda $2002
000E3Cr 2  A9 27            lda #$27
000E3Er 2  8D 06 20         sta $2006
000E41r 2  A9 C0            lda #$C0
000E43r 2  8D 06 20         sta $2006
000E46r 2               
000E46r 2  A2 00            ldx #00
000E48r 2                 AttributePage2Loop:
000E48r 2  BD rr rr         lda attributeTableLevel2Page1, x
000E4Br 2  8D 07 20         sta $2007
000E4Er 2  E8               inx
000E4Fr 2  E0 42            cpx #66
000E51r 2  D0 F5            bne AttributePage2Loop
000E53r 2               
000E53r 2  60               RTS
000E54r 2               .endproc
000E54r 2               
000E54r 2               .proc drawNewAttribute
000E54r 2               
000E54r 2               NewAttributeCheck:
000E54r 2  AD rr rr         LDA scrollPosition
000E57r 2  29 0F            AND #%00001111
000E59r 2  D0 6F            BNE NewAttributeCheckDone
000E5Br 2  4C rr rr         JMP DrawNewAttribute
000E5Er 2               
000E5Er 2               DrawNewAttribute:
000E5Er 2  AD rr rr         LDA nameTable
000E61r 2  49 01            EOR #$01
000E63r 2  0A               ASL A
000E64r 2  0A               ASL A
000E65r 2  18               CLC
000E66r 2  69 23            ADC #$23
000E68r 2  8D rr rr         STA colHig
000E6Br 2               
000E6Br 2  AD rr rr         LDA scrollPosition
000E6Er 2  4A               LSR A
000E6Fr 2  4A               LSR A
000E70r 2  4A               LSR A
000E71r 2  4A               LSR A
000E72r 2  4A               LSR A
000E73r 2  18               CLC
000E74r 2  69 C0            ADC #$C0
000E76r 2  8D rr rr         STA colLow
000E79r 2               
000E79r 2  AD rr rr         LDA columnNumber
000E7Cr 2  29 FC            AND #%11111100
000E7Er 2  0A               ASL A
000E7Fr 2  8D rr rr         STA sourceLow
000E82r 2  AD rr rr         LDA columnNumber
000E85r 2  4A               LSR A
000E86r 2  4A               LSR A
000E87r 2  4A               LSR A
000E88r 2  4A               LSR A
000E89r 2  4A               LSR A
000E8Ar 2  4A               LSR A
000E8Br 2  4A               LSR A
000E8Cr 2  8D rr rr         STA sourceHig
000E8Fr 2               
000E8Fr 2  AD rr rr         LDA sourceLow
000E92r 2  18               CLC
000E93r 2  6D rr rr         ADC lAB
000E96r 2  8D rr rr         STA sourceLow
000E99r 2  AD rr rr         LDA sourceHig
000E9Cr 2  6D rr rr         ADC hAB
000E9Fr 2  8D rr rr         STA sourceHig
000EA2r 2               
000EA2r 2  A0 00            LDY #$00
000EA4r 2  AD 02 20         LDA $2002
000EA7r 2               DrawNewAttributeLoop:
000EA7r 2  AD rr rr         LDA colHig
000EAAr 2  8D 06 20         STA $2006
000EADr 2  AD rr rr         LDA colLow
000EB0r 2  8D 06 20         STA $2006
000EB3r 2  B1 rr            LDA (sourceLow), y
000EB5r 2  8D 07 20         STA $2007
000EB8r 2               
000EB8r 2  C8               INY
000EB9r 2  C0 08            CPY #$08
000EBBr 2  F0 0C            BEQ DrawAttributeLoopDone
000EBDr 2               
000EBDr 2  AD rr rr         LDA colLow
000EC0r 2  18               CLC
000EC1r 2  69 08            ADC #$08
000EC3r 2  8D rr rr         STA colLow
000EC6r 2  4C rr rr         JMP DrawNewAttributeLoop
000EC9r 2               
000EC9r 2               DrawAttributeLoopDone:
000EC9r 2  60           RTS
000ECAr 2               
000ECAr 2               NewAttributeCheckDone:
000ECAr 2  60           RTS
000ECBr 2               .endproc
000ECBr 2               
000ECBr 2               .proc drawNewCollumnNametable
000ECBr 2               
000ECBr 2               DrawNewColumn:
000ECBr 2  AD rr rr         LDA scrollPosition ; позиция скрола
000ECEr 2  4A               LSR A ; смещение право
000ECFr 2  4A               LSR A
000ED0r 2  4A               LSR A ; / 8
000ED1r 2  8D rr rr         STA colLow
000ED4r 2  8D rr rr         STA columnNumber
000ED7r 2               
000ED7r 2  AD rr rr         LDA nameTable
000EDAr 2  0A               ASL A
000EDBr 2  0A               ASL A ; * 4
000EDCr 2  18               CLC
000EDDr 2  69 24            ADC #$24
000EDFr 2  8D rr rr         STA colHig
000EE2r 2               
000EE2r 2  AD rr rr         LDA columnNumber
000EE5r 2  0A               ASL A
000EE6r 2  0A               ASL A
000EE7r 2  0A               ASL A
000EE8r 2  0A               ASL A
000EE9r 2  0A               ASL A
000EEAr 2  8D rr rr         STA sourceLow
000EEDr 2  AD rr rr         LDA columnNumber
000EF0r 2  4A               LSR A
000EF1r 2  4A               LSR A
000EF2r 2  4A               LSR A
000EF3r 2  8D rr rr         STA sourceHig
000EF6r 2               
000EF6r 2  AD rr rr         LDA sourceLow
000EF9r 2  18               CLC
000EFAr 2  6D rr rr         ADC lowMapByte
000EFDr 2  8D rr rr         STA sourceLow
000F00r 2  AD rr rr         LDA sourceHig
000F03r 2  6D rr rr         ADC highMapByte
000F06r 2  8D rr rr         STA sourceHig
000F09r 2               
000F09r 2                DrawColumn:
000F09r 2  A9 84            LDA #%10000100
000F0Br 2  4D rr rr         EOR nameTable
000F0Er 2  8D 00 20         STA $2000
000F11r 2               
000F11r 2  AD 02 20         LDA $2002             ; read PPU status to reset the high/low latch
000F14r 2  AD rr rr         LDA colHig
000F17r 2  8D 06 20         STA $2006             ; write the high byte of column address
000F1Ar 2  AD rr rr         LDA colLow
000F1Dr 2  8D 06 20         STA $2006             ; write the low byte of column address
000F20r 2  A2 1E            LDX #$1E              ; copy 30 bytes
000F22r 2  A0 00            LDY #$00
000F24r 2               DrawColumnLoop:
000F24r 2  B1 rr            LDA (sourceLow), y
000F26r 2  8D 07 20         STA $2007
000F29r 2  C8               INY
000F2Ar 2  CA               DEX
000F2Br 2  D0 F7            BNE DrawColumnLoop
000F2Dr 2               
000F2Dr 2  A9 90            LDA #%10010000
000F2Fr 2  4D rr rr         EOR nameTable ; 01 00
000F32r 2  8D 00 20         STA $2000
000F35r 2               
000F35r 2  60               RTS
000F36r 2               .endproc
000F36r 2               
000F36r 2               .proc drawNewCollumn
000F36r 2               ; column check
000F36r 2               NewColumnCheck:
000F36r 2  AD rr rr         LDA scrollPosition
000F39r 2  29 07            AND #%00000111
000F3Br 2  D0 0B            BNE NewColumnCheckDone
000F3Dr 2  20 rr rr         JSR drawNewCollumnNametable
000F40r 2  AD rr rr         LDA columnNumber
000F43r 2               
000F43r 2  29 7F            AND #%01111111
000F45r 2  8D rr rr         STA columnNumber
000F48r 2               NewColumnCheckDone:
000F48r 2  A9 90            LDA #%10010000
000F4Ar 2  0D rr rr         ORA nameTable
000F4Dr 2  8D 00 20         STA $2000
000F50r 2               
000F50r 2  A9 1E            LDA #%00011110
000F52r 2  8D 01 20         STA $2001
000F55r 2               
000F55r 2  60               RTS
000F56r 2               
000F56r 2               .endproc
000F56r 2               
000F56r 2               .proc swapNametable
000F56r 2               
000F56r 2               NameTableCheckSwap:
000F56r 2  AD rr rr         LDA scrollPosition
000F59r 2  C9 FF            CMP #$FF
000F5Br 2  D0 09            BNE NameTableCheckSwapDone
000F5Dr 2               NameTableSwap:
000F5Dr 2  AD rr rr         LDA nameTable
000F60r 2  49 01            EOR #$01
000F62r 2  8D rr rr         STA nameTable
000F65r 2               
000F65r 2  60               RTS
000F66r 2               
000F66r 2               
000F66r 2               NameTableCheckSwapDone:
000F66r 2  60               RTS
000F67r 2               
000F67r 2               .endproc
000F67r 2               
000F67r 2               .proc enableNMI
000F67r 2  A9 90          lda #%10010000 ;enable NMI, sprites from Pattern 0, background from Pattern 1
000F69r 2  8D 00 20       sta $2000
000F6Cr 2               
000F6Cr 2  60             RTS
000F6Dr 2               .endproc
000F6Dr 2               
000F6Dr 2               .proc enableRender
000F6Dr 2  A9 18          lda #%00011000
000F6Fr 2  8D 01 20       sta $2001
000F72r 2               
000F72r 2  60             RTS
000F73r 2               .endproc
000F73r 2               
000F73r 2               .proc disableRender
000F73r 2  A9 00            LDA #$00
000F75r 2  8D 01 20         STA $2001
000F78r 2               
000F78r 2  60               RTS
000F79r 2               .endproc
000F79r 2               
000F79r 1               .include "./lib/heroStates/debugSquired.asm"
000F79r 2               .segment "CODE"
000F79r 2               
000F79r 2               .proc firstDebug
000F79r 2  60               RTS
000F7Ar 2               .endproc
000F7Ar 2               
000F7Ar 2               .proc debug
000F7Ar 2  AD 02 20         LDA $2002             ; read PPU status to reset the high/low latch
000F7Dr 2  A9 20            LDA #$20
000F7Fr 2  8D 06 20         STA $2006             ; write the high byte of $2000 address
000F82r 2  A9 ED            LDA #$ED
000F84r 2  8D 06 20         STA $2006             ; write the low byte of $2000 address
000F87r 2               
000F87r 2  A9 2F            LDA #$2F
000F89r 2  8D 07 20         STA $2007
000F8Cr 2  60               RTS
000F8Dr 2               .endproc
000F8Dr 2               
000F8Dr 2               .proc unsetDebug
000F8Dr 2  AD 02 20         LDA $2002             ; read PPU status to reset the high/low latch
000F90r 2  A9 20            LDA #$20
000F92r 2  8D 06 20         STA $2006             ; write the high byte of $2000 address
000F95r 2  A9 ED            LDA #$ED
000F97r 2  8D 06 20         STA $2006             ; write the low byte of $2000 address
000F9Ar 2               
000F9Ar 2  A9 16            LDA #$16
000F9Cr 2  8D 07 20         STA $2007
000F9Fr 2  60               RTS
000FA0r 2               .endproc
000FA0r 2               
000FA0r 1               .segment "HEADER"
000000r 1  4E 45 53 1A  	.byt "NES",$1A
000004r 1  01           	.byt 1 				; 1 x 16kB PRG block.
000005r 1  01           	.byt 1 				; 1 x 8kB CHR block.
000006r 1  01           	.byt 1              ; 0 horizontal, 1 vertical mirror
000007r 1  01           	.byt 1              ; mapper
000008r 1               
000008r 1               .segment "VECTORS"
000000r 1  rr rr rr rr  	.addr nmi_isr, reset, irq_isr
000004r 1  rr rr        
000006r 1               
000006r 1               .segment "ZEROPAGE"
00001Er 1  xx               heroXCoordinate: .res 1 ; координата x
00001Fr 1  xx               heroYCoordinate: .res 1 ; координата y
000020r 1               
000020r 1  xx               buttons: .res 1 ; кнопочки
000021r 1               
000021r 1  xx               lifes: .res 1 ; жизни
000022r 1               
000022r 1  xx               mapLoByte: .res 1
000023r 1  xx               mapHiByte: .res 1
000024r 1  xx               scroolX: .res 1
000025r 1  xx               loopLoadBackOutside: .res 1;
000026r 1  xx               loopLoadBackInside: .res 1;
000027r 1  xx               ppuHB: .res 1;
000028r 1  xx               ppuLB: .res 1;
000029r 1  xx               flagStopLoad: .res 1;
00002Ar 1  xx               tmp: .res 1;
00002Br 1               
00002Br 1  xx               colLow: .res 1;
00002Cr 1  xx               colHig: .res 1;
00002Dr 1  xx               sourceLow: .res 1;
00002Er 1  xx               sourceHig: .res 1;
00002Fr 1  xx               columnNumber: .res 1;
000030r 1               
000030r 1  xx               scrollPosition: .res 1;
000031r 1  xx               nameTable: .res 1;
000032r 1  xx               screenCount: .res 1;
000033r 1               
000033r 1  xx               lowMapByte: .res 1;
000034r 1  xx               highMapByte: .res 1;
000035r 1               
000035r 1  xx               joyState: .res 1;
000036r 1  xx               collisionY: .res 1;
000037r 1  xx               collisionX: .res 1;
000038r 1               
000038r 1  xx               isRightCollision: .res 1;
000039r 1               
000039r 1  xx               tScroll: .res 1;
00003Ar 1  xx               currentStage: .res 1;
00003Br 1               
00003Br 1  xx               lAB: .res 1;
00003Cr 1  xx               hAB: .res 1;
00003Dr 1               
00003Dr 1  xx               zacumulator: .res 1;
00003Er 1  xx               dinamicalCollisionMap: .res 1;
00003Fr 1  xx               offsetColumn: .res 1;
000040r 1               
000040r 1  xx               mapTestLo: .res 1;
000041r 1  xx               mapTestHig: .res 1;
000042r 1  xx               mapByteOffset: .res 1;
000043r 1               
000043r 1  xx               scroolCounter: .res 1;
000044r 1               
000044r 1  xx               stageStates: .res 1;
000045r 1               
000045r 1  xx               heroDirection: .res 1 ; 01 left 02 right
000046r 1  xx               isHeroWalk: .res 1
000047r 1  xx               isHeroFire: .res 1
000048r 1  xx               isHeroStay: .res 1
000049r 1  xx               lastPositionY: .res 1
00004Ar 1               
00004Ar 1               .segment "BSS"
000000r 1               
000000r 1               .segment "RODATA"
00289Br 1               
00289Br 1               .segment "CODE"
000FA0r 1               
000FA0r 1               
000FA0r 1               .proc changeSpriteBuffer
000FA0r 1  A9 00             LDA #$00
000FA2r 1  8D 03 20          STA $2003     ; set the low byte (00) of the RAM address
000FA5r 1  A9 02             LDA #$02
000FA7r 1  8D 14 40          STA $4014
000FAAr 1               
000FAAr 1  60                rts
000FABr 1               .endproc
000FABr 1               
000FABr 1               .proc incScrollCounter
000FABr 1  E6 rr            INC scrollCounter
000FADr 1  60               RTS
000FAEr 1               .endproc
000FAEr 1               
000FAEr 1               .proc nmi_isr
000FAEr 1  20 rr rr          JSR incScrollCounter
000FB1r 1  20 rr rr          JSR heroStateMovement
000FB4r 1  20 rr rr          JSR screenFactoryTwo
000FB7r 1  20 rr rr          JSR swapNametable
000FBAr 1  20 rr rr          JSR drawNewAttribute
000FBDr 1  20 rr rr          JSR drawNewCollumn
000FC0r 1                    ; each time after write to ppu
000FC0r 1  20 rr rr          JSR scrolling
000FC3r 1  20 rr rr          JSR changeSpriteBuffer
000FC6r 1  20 rr rr          JSR scrolling
000FC9r 1                    ; read joy and player animation must be last run
000FC9r 1  20 rr rr          JSR readJoyPad
000FCCr 1  20 rr rr          JSR scrolling
000FCFr 1  20 rr rr          JSR readJoyState
000FD2r 1  20 rr rr          JSR scrolling
000FD5r 1  20 rr rr          JSR playerHundler
000FD8r 1                    ; always scrolling in last this interapt
000FD8r 1  20 rr rr          JSR scrolling
000FDBr 1               
000FDBr 1  40                RTI
000FDCr 1               .endproc
000FDCr 1               
000FDCr 1               .proc irq_isr
000FDCr 1  40                RTI
000FDDr 1               .endproc
000FDDr 1               
000FDDr 1               .proc reset
000FDDr 1  78               SEI
000FDEr 1  A2 00            LDX #0
000FE0r 1  8E 00 20         STX $2000   ; обнуляем память
000FE3r 1  8E 01 20         STX $2001   ; выключаем рендер
000FE6r 1  8E 10 40         STX $4010 ; отключаем DMC
000FE9r 1  CA               DEX     ; X = $FF
000FEAr 1  9A               TXS     ; Стэк равен = $FF
000FEBr 1  2C 02 20         : BIT $2002
000FEEr 1  10 FB            BPL :-
000FF0r 1  20 rr rr         JSR setHeroVar
000FF3r 1               ;    JSR loadPalete
000FF3r 1  20 rr rr         JSR setStageVar
000FF6r 1                   ; @todo create state automat
000FF6r 1  20 rr rr         JSR loadStageTwoBackground
000FF9r 1  20 rr rr         JSR loadPaleteStageTwo
000FFCr 1               
000FFCr 1  20 rr rr         JSR loadBackground
000FFFr 1  20 rr rr         JSR loadAttributePages
001002r 1  20 rr rr         JSR fixScroll
001005r 1  20 rr rr         JSR enableNMI
001008r 1  20 rr rr         JSR enableRender
00100Br 1               
00100Br 1               mainLoop:
00100Br 1  4C rr rr       JMP mainLoop
00100Er 1               
00100Er 1  40             RTI
00100Fr 1               .endproc
00100Fr 1               
00100Fr 1               
00100Fr 1               
00100Fr 1               ; =====	CHR-ROM Pattern Tables =================================================
00100Fr 1               
00100Fr 1               ; ----- Pattern Table 0 --------------------------------------------------------
00100Fr 1               
00100Fr 1               .segment "CHR"
000000r 1               
000000r 1  00 07 0F 0F  	.incbin "test.chr"
000004r 1  0F 0F 07 03  
000008r 1  07 08 10 10  
002000r 1               
002000r 1               
