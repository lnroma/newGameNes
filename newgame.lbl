ca65 V2.18 - N/A
Main file   : newGame.asm
Current file: newGame.asm

000000r 1               .include "./lib/player.asm"
000000r 2               .segment "ZEROPAGE"
000000r 2               
000000r 2               .segment "RODATA"
000000r 2                 lifesBytes:
000000r 2  00 08 10 17  	.byt $00, $08, $10, $17
000004r 2               
000004r 2               .segment "CODE"
000000r 2               
000000r 2               .proc firstProcPlayer
000000r 2  60               RTS
000001r 2               .endproc
000001r 2               
000001r 2               .proc setHeroVar
000001r 2  A9 64          lda #100
000003r 2  8D rr rr       sta heroXCoordinate
000006r 2  A9 00          lda #$00
000008r 2  8D rr rr       sta buttons
00000Br 2  8D rr rr       sta offsetColumn
00000Er 2  A9 C8          lda #200
000010r 2  8D rr rr       sta heroYCoordinate
000013r 2  8D rr rr       sta lastPositionY
000016r 2  A9 04          lda #04
000018r 2  8D rr rr       sta lifes
00001Br 2  A9 01          lda #01
00001Dr 2  8D rr rr       sta isGravity
000020r 2  A9 00          lda #00
000022r 2  8D rr rr       sta frameCountPlayerRightWalk
000025r 2  A9 00          lda #00
000027r 2  8D rr rr       sta jumpHeight
00002Ar 2  A9 00          LDA #00
00002Cr 2  8D rr rr       STA collisionPart
00002Fr 2  8D rr rr       STA isStageEnd
000032r 2  8D rr rr       STA stageStates
000035r 2  8D rr rr       STA isLoadedFlags
000038r 2               
000038r 2  60             rts
000039r 2               .endproc
000039r 2               
000039r 2               .proc playerHundler
000039r 2  20 rr rr        JSR checkCollide
00003Cr 2  60              RTS
00003Dr 2               .endproc
00003Dr 2               
00003Dr 2               .proc fixScroll
00003Dr 2  A9 00           lda #00
00003Fr 2  8D rr rr        sta screenCount
000042r 2  A9 00           lda #$00
000044r 2  8D rr rr        sta nameTable
000047r 2  A9 00           lda #00
000049r 2  8D rr rr        sta scrollPosition
00004Cr 2               
00004Cr 2  60              RTS
00004Dr 2               .endproc
00004Dr 2               
00004Dr 2               .proc scrolling
00004Dr 2  48             PHA
00004Er 2  AD rr rr       LDA scrollPosition
000051r 2  8D 05 20       STA $2005
000054r 2  A9 00          LDA #$00
000056r 2  8D 05 20       STA $2005
000059r 2  68             PLA
00005Ar 2  60             RTS
00005Br 2               .endproc
00005Br 2               
00005Br 2               .proc drawLifes
00005Br 2  AE rr rr       LDX lifes
00005Er 2                 lifeLoop:
00005Er 2  A9 0A            LDA #10
000060r 2  8D 04 20         STA $2004
000063r 2  A9 06            LDA #06
000065r 2  8D 04 20         STA $2004
000068r 2  A9 17            LDA #%00010111
00006Ar 2  8D 04 20         STA $2004
00006Dr 2  BD rr rr         LDA lifesBytes, x
000070r 2  69 0A            ADC #10
000072r 2  8D 04 20         STA $2004
000075r 2  CA               DEX
000076r 2  D0 E6            BNE lifeLoop
000078r 2               
000078r 2  60             RTS
000079r 2               .endproc
000079r 2               
000079r 2               .proc playerGravity
000079r 2  60           RTS
00007Ar 2               ;    JSR collisionOnMap
00007Ar 2               ;    LDA collideFlag
00007Ar 2               ;    CMP #%00000011
00007Ar 2  D0 02            BNE incy
00007Cr 2  F0 06            BEQ return
00007Er 2               incy:
00007Er 2  EE rr rr         INC heroYCoordinate
000081r 2  EE rr rr         INC heroYCoordinate
000084r 2               return:
000084r 2  60               RTS
000085r 2               .endproc
000085r 2               
000085r 2               .proc checkCollide
000085r 2  AD rr rr         LDA lastPositionY
000088r 2  CD rr rr         CMP heroYCoordinate
00008Br 2  D0 02            BNE incrementY
00008Dr 2  F0 01            BEQ continue
00008Fr 2                   incrementY:
00008Fr 2                     ;JSR playerGravity
00008Fr 2               ;      INC heroYCoordinate
00008Fr 2  60                 RTS
000090r 2                   continue:
000090r 2  A9 00              LDA #00
000092r 2  8D rr rr           STA isGravity
000095r 2  8D rr rr           STA jumpHeight
000098r 2  8D rr rr           STA isJump
00009Br 2  60                 RTS
00009Cr 2               .endproc
00009Cr 2               
00009Cr 2               .proc readJoyState
00009Cr 2  20 rr rr        JSR unsetHeroFire
00009Fr 2  20 rr rr        JSR unsetHeroStay
0000A2r 2  20 rr rr        JSR unsetHeroWalk
0000A5r 2               
0000A5r 2  AE rr rr        LDX joyState
0000A8r 2  20 rr rr        JSR handleDirections
0000ABr 2  60              RTS
0000ACr 2               .endproc
0000ACr 2               
0000ACr 2               .proc handleFireAndJump
0000ACr 2  E0 02           CPX #%00000010
0000AEr 2  F0 14           BEQ heroJump
0000B0r 2  E0 82           CPX #%10000010
0000B2r 2  F0 14           BEQ walkAndJumpRight
0000B4r 2  E0 81           CPX #%10000001
0000B6r 2  F0 24           BEQ walkAndFireRight
0000B8r 2  E0 41           CPX #%01000001
0000BAr 2  F0 24           BEQ walkAndFireLeft
0000BCr 2  E0 42           CPX #%01000010
0000BEr 2  F0 12           BEQ walkAndJumpLeft
0000C0r 2               
0000C0r 2  20 rr rr        JSR setHeroStay
0000C3r 2  60              RTS
0000C4r 2               
0000C4r 2                  heroJump:
0000C4r 2  20 rr rr             JSR setIsJump
0000C7r 2  60                   RTS
0000C8r 2               
0000C8r 2                  walkAndJumpRight:
0000C8r 2  20 rr rr             JSR setIsJump
0000CBr 2  20 rr rr             JSR heroRightWalk
0000CEr 2  20 rr rr             JSR setHeroRight
0000D1r 2  60                   RTS
0000D2r 2                  walkAndJumpLeft:
0000D2r 2  20 rr rr             JSR setIsJump
0000D5r 2  20 rr rr             JSR heroLeftWalk
0000D8r 2  20 rr rr             JSR setHeroLeft
0000DBr 2  60                   RTS
0000DCr 2                  walkAndFireRight:
0000DCr 2  20 rr rr             JSR walkAndFireRightProc
0000DFr 2  60                   RTS
0000E0r 2                  walkAndFireLeft:
0000E0r 2  20 rr rr             JSR setIsFire
0000E3r 2  20 rr rr             JSR heroLeftWalk
0000E6r 2  20 rr rr             JSR setHeroLeft
0000E9r 2  60                   RTS
0000EAr 2                  walkAndJumpAndFireRight:
0000EAr 2  20 rr rr             JSR jumpAndFire
0000EDr 2  60                   RTS
0000EEr 2                  walkAndJumpAndFireLeft:
0000EEr 2  20 rr rr             JSR walkAndFireProc
0000F1r 2  60                   RTS
0000F2r 2                  heroFire:
0000F2r 2  20 rr rr             JSR setIsFire
0000F5r 2  60                   RTS
0000F6r 2               .endproc
0000F6r 2               
0000F6r 2               .proc handleDirections
0000F6r 2  E0 40            CPX #%01000000
0000F8r 2  F0 34            BEQ heroWalkLeft
0000FAr 2  E0 60            CPX #%01100000
0000FCr 2  F0 20            BEQ heroWalkLeftAndDown
0000FEr 2  E0 A0            CPX #%10100000
000100r 2  F0 20            BEQ heroWalkRightAndDown
000102r 2  E0 50            CPX #%01010000
000104r 2  F0 14            BEQ heroWalkLeftAndUp
000106r 2  E0 90            CPX #%10010000
000108r 2  F0 1C            BEQ heroWalkRightAndUp
00010Ar 2  E0 80            CPX #%10000000
00010Cr 2  F0 1C            BEQ heroWalkRight
00010Er 2  E0 20            CPX #%00100000
000110r 2  F0 20            BEQ walkDown
000112r 2  E0 10            CPX #%00010000
000114r 2  F0 20            BEQ walkUp
000116r 2               
000116r 2  20 rr rr         JSR handleFireAndJump
000119r 2  60               RTS
00011Ar 2               
00011Ar 2                   heroWalkLeftAndUp:
00011Ar 2  20 rr rr             JSR heroWalkLeftAndUpProcedure
00011Dr 2  60                   RTS
00011Er 2                   heroWalkLeftAndDown:
00011Er 2  20 rr rr             JSR heroWalkLeftAndDownProcedure
000121r 2  60                   RTS
000122r 2                   heroWalkRightAndDown:
000122r 2  20 rr rr             JSR heroWalkRightAndDownProcedure
000125r 2  60                   RTS
000126r 2                   heroWalkRightAndUp:
000126r 2  20 rr rr             JSR heroWalkRightAndUpProcedure
000129r 2  60                   RTS
00012Ar 2                   heroWalkRight:
00012Ar 2  20 rr rr             JSR heroWalkRightProc
00012Dr 2  60                   RTS
00012Er 2                   heroWalkLeft:
00012Er 2  20 rr rr             JSR heroWalkLeftProc
000131r 2  60                   RTS
000132r 2                   walkDown:
000132r 2  20 rr rr             JSR walkDownProcedure
000135r 2  60                   RTS
000136r 2                   walkUp:
000136r 2  20 rr rr             JSR walkUpProcedure
000139r 2  60                   RTS
00013Ar 2               .endproc
00013Ar 2               
00013Ar 2               .proc heroWalkLeftProc
00013Ar 2  20 rr rr         JSR setHeroLeft
00013Dr 2  20 rr rr         JSR setHeroWalk
000140r 2  20 rr rr         JSR heroLeftWalk
000143r 2               
000143r 2  60               RTS
000144r 2               .endproc
000144r 2               
000144r 2               .proc walkAndFireRightProc
000144r 2  20 rr rr         JSR setIsFire
000147r 2  20 rr rr         JSR heroRightWalk
00014Ar 2  20 rr rr         JSR setHeroRight
00014Dr 2               
00014Dr 2  60               RTS
00014Er 2               .endproc
00014Er 2               
00014Er 2               .proc heroWalkRightProc
00014Er 2  20 rr rr         JSR heroRightWalk
000151r 2  20 rr rr         JSR setHeroRight
000154r 2  20 rr rr         JSR setHeroWalk
000157r 2               
000157r 2  60               RTS
000158r 2               .endproc
000158r 2               
000158r 2               .proc jumpAndFire
000158r 2  20 rr rr         JSR setIsFire
00015Br 2  20 rr rr         JSR heroRightWalk
00015Er 2  20 rr rr         JSR setHeroRight
000161r 2  20 rr rr         JSR setIsJump
000164r 2               
000164r 2  60               RTS
000165r 2               .endproc
000165r 2               
000165r 2               .proc walkAndFireProc
000165r 2  20 rr rr         JSR setIsFire
000168r 2  20 rr rr         JSR heroLeftWalk
00016Br 2  20 rr rr         JSR setHeroLeft
00016Er 2  20 rr rr         JSR setIsJump
000171r 2               
000171r 2  60               RTS
000172r 2               .endproc
000172r 2               
000172r 2               .proc heroWalkRightAndDownProcedure
000172r 2  20 rr rr         JSR setHeroRight
000175r 2  20 rr rr         JSR heroRightWalk
000178r 2  20 rr rr         JSR setHeroWalk
00017Br 2  20 rr rr         JSR walkDownProcedure
00017Er 2               
00017Er 2  60               RTS
00017Fr 2               .endproc
00017Fr 2               
00017Fr 2               .proc heroWalkLeftAndDownProcedure
00017Fr 2  20 rr rr         JSR setHeroLeft
000182r 2  20 rr rr         JSR heroLeftWalk
000185r 2  20 rr rr         JSR setHeroWalk
000188r 2  20 rr rr         JSR walkDownProcedure
00018Br 2               
00018Br 2  60               RTS
00018Cr 2               .endproc
00018Cr 2               
00018Cr 2               .proc heroWalkLeftAndUpProcedure
00018Cr 2  20 rr rr         JSR heroLeftWalk
00018Fr 2  20 rr rr         JSR walkUpProcedure
000192r 2               
000192r 2  60               RTS
000193r 2               .endproc
000193r 2               
000193r 2               .proc heroWalkRightAndUpProcedure
000193r 2  20 rr rr         JSR setHeroRight
000196r 2  20 rr rr         JSR heroRightWalk
000199r 2  20 rr rr         JSR setHeroWalk
00019Cr 2  20 rr rr         JSR walkUpProcedure
00019Fr 2               
00019Fr 2  60               RTS
0001A0r 2               .endproc
0001A0r 2               
0001A0r 2               .proc heroDownWalk
0001A0r 2  20 rr rr         JSR collisionOnMapDown
0001A3r 2  AD rr rr         LDA collideFlag
0001A6r 2  C9 03            CMP #%00000011
0001A8r 2  F0 02            BEQ incrementY
0001AAr 2  D0 09            BNE return
0001ACr 2                   incrementY:
0001ACr 2  EE rr rr             INC heroYCoordinate
0001AFr 2  AD rr rr             LDA heroYCoordinate
0001B2r 2  8D rr rr             STA lastPositionY
0001B5r 2                   return:
0001B5r 2  60                   RTS
0001B6r 2               .endproc
0001B6r 2               
0001B6r 2               .proc heroUpWalk
0001B6r 2  20 rr rr         JSR collisionOnMapUp
0001B9r 2  AD rr rr         LDA collideFlag
0001BCr 2  C9 03            CMP #%00000011
0001BEr 2  F0 02            BEQ decrementY
0001C0r 2  D0 09            BNE return
0001C2r 2               
0001C2r 2                   decrementY:
0001C2r 2  CE rr rr             DEC heroYCoordinate
0001C5r 2  AD rr rr             LDA heroYCoordinate
0001C8r 2  8D rr rr             STA lastPositionY
0001CBr 2                   return:
0001CBr 2  60                   RTS
0001CCr 2               .endproc
0001CCr 2               
0001CCr 2               .proc walkDownProcedure
0001CCr 2  AD rr rr         LDA heroDirection
0001CFr 2  C9 01            CMP #01
0001D1r 2  F0 02            BEQ heroLeft
0001D3r 2  D0 06            BNE heroRight
0001D5r 2               
0001D5r 2                   heroLeft:
0001D5r 2  20 rr rr             JSR setHeroLeft
0001D8r 2  4C rr rr             JMP setHero
0001DBr 2                   heroRight:
0001DBr 2  20 rr rr             JSR setHeroRight
0001DEr 2               
0001DEr 2                   setHero:
0001DEr 2  20 rr rr             JSR heroDownWalk
0001E1r 2  20 rr rr             JSR setHeroWalk
0001E4r 2               
0001E4r 2  60                   RTS
0001E5r 2               .endproc
0001E5r 2               
0001E5r 2               .proc walkUpProcedure
0001E5r 2  AD rr rr         LDA heroDirection
0001E8r 2  C9 01            CMP #01
0001EAr 2  F0 02            BEQ heroLeft
0001ECr 2  D0 06            BNE heroRight
0001EEr 2               
0001EEr 2                   heroLeft:
0001EEr 2  20 rr rr             JSR setHeroLeft
0001F1r 2  4C rr rr             JMP setHero
0001F4r 2                   heroRight:
0001F4r 2  20 rr rr             JSR setHeroRight
0001F7r 2               
0001F7r 2                   setHero:
0001F7r 2  20 rr rr             JSR heroUpWalk
0001FAr 2  20 rr rr             JSR setHeroWalk
0001FDr 2               
0001FDr 2  60                   RTS
0001FEr 2               .endproc
0001FEr 2               
0001FEr 2               .proc heroStateMovement
0001FEr 2  20 rr rr         JSR caclulateJump
000201r 2  20 rr rr         JSR heroStateAnimations
000204r 2  60               RTS
000205r 2               .endproc
000205r 2               
000205r 2               .proc heroStateAnimations
000205r 2  20 rr rr         JSR heroJumpAnimation
000208r 2  20 rr rr         JSR heroWalkAnimation
00020Br 2  20 rr rr         JSR heroStayAnimation
00020Er 2               
00020Er 2  60               RTS
00020Fr 2               .endproc
00020Fr 2               
00020Fr 2               .proc heroWalkAnimation
00020Fr 2  AD rr rr         LDA isHeroWalk
000212r 2  C9 01            CMP #01
000214r 2  F0 02            BEQ checkFlagJump
000216r 2               ;    BEQ walkWithOutFire
000216r 2  D0 34            BNE return
000218r 2               
000218r 2                   checkFlagJump:
000218r 2  AD rr rr             LDA isJump
00021Br 2  C9 01                CMP #01
00021Dr 2  F0 2D                BEQ return
00021Fr 2  D0 00                BNE checkIsFire
000221r 2               
000221r 2                   checkIsFire:
000221r 2  AD rr rr             LDA isHeroFire
000224r 2  C9 01                CMP #01
000226r 2  F0 02                BEQ walkAndFire
000228r 2  D0 11                BNE walkWithOutFire
00022Ar 2               
00022Ar 2                   walkAndFire:
00022Ar 2  AD rr rr             LDA heroDirection
00022Dr 2  C9 01                CMP #01
00022Fr 2  F0 06                BEQ drawHeroWalkAndFireLeft
000231r 2  D0 00                BNE drawHeroWalkAndFireRight
000233r 2                   drawHeroWalkAndFireRight:
000233r 2  20 rr rr             JSR drawHeroRightWalkFire
000236r 2  60                   RTS
000237r 2                   drawHeroWalkAndFireLeft:
000237r 2  20 rr rr             JSR drawHeroLeftAndFire
00023Ar 2  60                   RTS
00023Br 2               
00023Br 2                   walkWithOutFire:
00023Br 2  AD rr rr             LDA heroDirection
00023Er 2  C9 01                CMP #01
000240r 2  F0 06                BEQ drawHeroWalkLeft
000242r 2  D0 00                BNE drawHeroWalkRight
000244r 2                   drawHeroWalkRight:
000244r 2  20 rr rr             JSR drawHeroRightWalk
000247r 2  60                   RTS
000248r 2                   drawHeroWalkLeft:
000248r 2  20 rr rr             JSR drawHeroLeft
00024Br 2  60                   RTS
00024Cr 2                   return:
00024Cr 2  60                   RTS
00024Dr 2               .endproc
00024Dr 2               
00024Dr 2               .proc heroStayAnimation
00024Dr 2  AD rr rr         LDA isHeroStay
000250r 2  C9 01            CMP #01
000252r 2  D0 13            BNE return
000254r 2  F0 00            BEQ checkDirection
000256r 2                   checkDirection:
000256r 2  AD rr rr             LDA heroDirection
000259r 2  C9 01                CMP #01
00025Br 2  F0 06                BEQ drawStayLeftLabel
00025Dr 2  D0 00                BNE drawStayRightLabel
00025Fr 2                       drawStayRightLabel:
00025Fr 2  20 rr rr                 JSR drawStayRight
000262r 2  60                       RTS
000263r 2                       drawStayLeftLabel:
000263r 2  20 rr rr                 JSR drawStayRight
000266r 2  60                       RTS
000267r 2                   return:
000267r 2  60                   RTS
000268r 2               .endproc
000268r 2               
000268r 2               .proc heroJumpAnimation
000268r 2  AD rr rr         LDA isJump
00026Br 2  C9 01            CMP #01
00026Dr 2  F0 02            BEQ drawJumpAnimation
00026Fr 2  D0 11            BNE return
000271r 2                   drawJumpAnimation:
000271r 2  AD rr rr             LDA heroDirection
000274r 2  C9 01                CMP #01
000276r 2  F0 02                BEQ drawJumpAnimationLeft
000278r 2  D0 04                BNE drawJumpAnimationRight
00027Ar 2                   drawJumpAnimationLeft:
00027Ar 2  20 rr rr             JSR drawJumpLeft
00027Dr 2  60                   RTS
00027Er 2                   drawJumpAnimationRight:
00027Er 2  20 rr rr             JSR drawJumpRight
000281r 2  60                   RTS
000282r 2                   return:
000282r 2  60                   RTS
000283r 2               .endproc
000283r 2               
000283r 2               .proc clearMemory
000283r 2  20 rr rr         JSR clearStayRight
000286r 2               
000286r 2  60               RTS
000287r 2               .endproc
000287r 2               
000287r 2               .proc setHeroLeft
000287r 2  A9 01            LDA #01
000289r 2  8D rr rr         STA heroDirection
00028Cr 2  60               RTS
00028Dr 2               .endproc
00028Dr 2               
00028Dr 2               .proc setHeroRight
00028Dr 2  A9 02            LDA #02
00028Fr 2  8D rr rr         STA heroDirection
000292r 2  60               RTS
000293r 2               .endproc
000293r 2               
000293r 2               .proc setHeroWalk
000293r 2  A9 01            LDA #01
000295r 2  8D rr rr         STA isHeroWalk
000298r 2  60               RTS
000299r 2               .endproc
000299r 2               
000299r 2               .proc unsetHeroWalk
000299r 2  A9 00            LDA #00
00029Br 2  8D rr rr         STA isHeroWalk
00029Er 2  60               RTS
00029Fr 2               .endproc
00029Fr 2               
00029Fr 2               .proc setIsFire
00029Fr 2  A9 01            LDA #01
0002A1r 2  8D rr rr         STA isHeroFire
0002A4r 2  60               RTS
0002A5r 2               .endproc
0002A5r 2               
0002A5r 2               .proc unsetHeroFire
0002A5r 2  A9 00            LDA #00
0002A7r 2  8D rr rr         STA isHeroFire
0002AAr 2  60               RTS
0002ABr 2               .endproc
0002ABr 2               
0002ABr 2               .proc setHeroStay
0002ABr 2  A9 01            LDA #01
0002ADr 2  8D rr rr         STA isHeroStay
0002B0r 2  60               RTS
0002B1r 2               .endproc
0002B1r 2               
0002B1r 2               .proc unsetHeroStay
0002B1r 2  A9 00            LDA #00
0002B3r 2  8D rr rr         STA isHeroStay
0002B6r 2  60               RTS
0002B7r 2               .endproc
0002B7r 2               
0002B7r 1               .include "./lib/heroStates/heroWalkRight.asm"
0002B7r 2               .segment "ZEROPAGE"
000000r 2  xx             frameCountPlayerRightWalk: .res 1
000001r 2  xx             scrollCounter: .res 1
000002r 2               
000002r 2  xx             frameSpritesLB: .res 1
000003r 2  xx             frameSpritesHB: .res 1
000004r 2               
000004r 2  xx             frameAttributesLB: .res 1
000005r 2  xx             frameAttributesHB: .res 1
000006r 2               
000006r 2  xx             frameOffsetsXLB: .res 1
000007r 2  xx             frameOffsetsXHB: .res 1
000008r 2               
000008r 2  xx             frameOffsetsYLB: .res 1
000009r 2  xx             frameOffsetsYHB: .res 1
00000Ar 2               
00000Ar 2               .segment "RODATA"
000004r 2                  frame1_sprites:
000004r 2  33                 .byt $33
000005r 2  02 03              .byt $02, $03
000007r 2  12 13              .byt $12, $13
000009r 2  22 23              .byt $22, $23
00000Br 2               
00000Br 2                  frame2_sprites:
00000Br 2  33                 .byt $33
00000Cr 2  02 03              .byt $02, $03
00000Er 2  14 15              .byt $14, $15
000010r 2  24 25              .byt $24, $25
000012r 2               
000012r 2                  frame3_sprites:
000012r 2  33                 .byt $33
000013r 2  02 03              .byt $02, $03
000015r 2  16 17              .byt $16, $17
000017r 2  26 27              .byt $26, $27
000019r 2               
000019r 2                  frame_attributes:
000019r 2  16                 .byt %00010110
00001Ar 2  17 17              .byt %00010111, %00010111
00001Cr 2  17 17              .byt %00010111, %00010111
00001Er 2  17 17              .byt %00010111, %00010111
000020r 2               
000020r 2                  frame_offset_x:
000020r 2  06                 .byt $06
000021r 2  00 08              .byt $00, $08
000023r 2  00 08              .byt $00, $08
000025r 2  00 08              .byt $00, $08
000027r 2               
000027r 2                  frame_offset_y:
000027r 2  00                 .byt $00
000028r 2  00 00              .byt $00, $00
00002Ar 2  08 08              .byt $08, $08
00002Cr 2  10 10              .byt $10, $10
00002Er 2               
00002Er 2               .segment "CODE"
0002B7r 2               
0002B7r 2               .proc firstProcRightWalk
0002B7r 2  60               RTS
0002B8r 2               .endproc
0002B8r 2               
0002B8r 2               .proc heroRightWalk
0002B8r 2  AD rr rr         LDA isStageEnd
0002BBr 2  C9 01            CMP #01
0002BDr 2  F0 02            BEQ heroRightWalkIncrementX
0002BFr 2  D0 04            BNE heroRightWalk
0002C1r 2                 heroRightWalkIncrementX:
0002C1r 2  20 rr rr         JSR heroRightWalkIncrementXCoordinate
0002C4r 2  60               RTS
0002C5r 2                 heroRightWalk:
0002C5r 2  20 rr rr         JSR heroRightWalkStandard
0002C8r 2  60               RTS
0002C9r 2               .endproc
0002C9r 2               
0002C9r 2               .proc heroRightWalkIncrementXCoordinate
0002C9r 2  EE rr rr         INC heroXCoordinate
0002CCr 2  60               RTS
0002CDr 2               .endproc
0002CDr 2               
0002CDr 2               .proc heroRightWalkStandard
0002CDr 2  AD rr rr         LDA heroYCoordinate
0002D0r 2  8D rr rr         STA collideY
0002D3r 2               
0002D3r 2  AD rr rr         LDA heroXCoordinate
0002D6r 2  18               CLC
0002D7r 2  69 01            ADC #1
0002D9r 2  8D rr rr         STA collideX
0002DCr 2               
0002DCr 2  20 rr rr         JSR collisionOnMapRight
0002DFr 2  AD rr rr         LDA collideFlag
0002E2r 2  C9 03            CMP #%00000011
0002E4r 2  F0 01            BEQ incXCoord
0002E6r 2               
0002E6r 2  60               RTS
0002E7r 2               
0002E7r 2                 incXCoord:
0002E7r 2  AD rr rr         LDA heroXCoordinate
0002EAr 2  C9 7A            CMP #122
0002ECr 2  B0 02            BCS incrementScreen
0002EEr 2  D0 04            BNE incrementX
0002F0r 2               
0002F0r 2                 incrementScreen:
0002F0r 2  20 rr rr         JSR incrementScrollPosition
0002F3r 2               ;    INC scrollPosition
0002F3r 2  60               RTS
0002F4r 2                 incrementX:
0002F4r 2  EE rr rr         INC heroXCoordinate
0002F7r 2  60               RTS
0002F8r 2               .endproc
0002F8r 2               
0002F8r 2               .proc incrementScrollPosition
0002F8r 2  EE rr rr         INC scrollPosition
0002FBr 2  60               RTS
0002FCr 2               .endproc
0002FCr 2               
0002FCr 2               .proc drawHeroRightWalk
0002FCr 2  20 rr rr         JSR commonInitFrame
0002FFr 2  A5 rr            LDA scrollCounter
000301r 2  29 08            AND #8
000303r 2  C9 01            CMP #1
000305r 2  F0 08            BEQ drawFrame1Label
000307r 2  C9 08            CMP #8
000309r 2  F0 0A            BEQ drawFrame2Label
00030Br 2  C9 0A            CMP #10
00030Dr 2  F0 0C            BEQ drawFrame3Label
00030Fr 2               
00030Fr 2                 drawFrame1Label:
00030Fr 2  20 rr rr         JSR drawFrame1
000312r 2  E6 rr            INC frameCountPlayerRightWalk
000314r 2  60               RTS
000315r 2                 drawFrame2Label:
000315r 2  20 rr rr         JSR drawFrame2
000318r 2  E6 rr            INC frameCountPlayerRightWalk
00031Ar 2  60               RTS
00031Br 2                 drawFrame3Label:
00031Br 2  20 rr rr         JSR drawFrame3
00031Er 2  E6 rr            INC frameCountPlayerRightWalk
000320r 2  60               RTS
000321r 2               .endproc
000321r 2               
000321r 2               .proc drawFrame
000321r 2  A2 00            LDX #00
000323r 2  A0 00            LDY #00
000325r 2                   frameDrawLoop:
000325r 2  AD rr rr             LDA heroYCoordinate
000328r 2  18                   CLC
000329r 2  71 rr                ADC (frameOffsetsYLB), y
00032Br 2  9D 00 02             STA $0200, x
00032Er 2  B1 rr                LDA (frameSpritesLB), y
000330r 2  E8                   INX
000331r 2  9D 00 02             STA $0200, x
000334r 2  B1 rr                LDA (frameAttributesLB), y
000336r 2  E8                   INX
000337r 2  9D 00 02             STA $0200, x
00033Ar 2  AD rr rr             LDA heroXCoordinate
00033Dr 2  18                   CLC
00033Er 2  71 rr                ADC (frameOffsetsXLB), y
000340r 2  E8                   INX
000341r 2  9D 00 02             STA $0200, x
000344r 2  E8                   INX
000345r 2  C8                   INY
000346r 2  C0 07                CPY #07
000348r 2  D0 DB                BNE frameDrawLoop
00034Ar 2               
00034Ar 2  60               RTS
00034Br 2               .endproc
00034Br 2               
00034Br 2               .proc commonInitFrame
00034Br 2  A9 rr            LDA #<frame_attributes
00034Dr 2  85 rr            STA frameAttributesLB
00034Fr 2  A9 rr            LDA #>frame_attributes
000351r 2  85 rr            STA frameAttributesHB
000353r 2               
000353r 2  A9 rr            LDA #<frame_offset_x
000355r 2  85 rr            STA frameOffsetsXLB
000357r 2  A9 rr            LDA #>frame_offset_x
000359r 2  85 rr            STA frameOffsetsXHB
00035Br 2               
00035Br 2  A9 rr            LDA #<frame_offset_y
00035Dr 2  85 rr            STA frameOffsetsYLB
00035Fr 2  A9 rr            LDA #>frame_offset_y
000361r 2  85 rr            STA frameOffsetsYHB
000363r 2               
000363r 2  60               RTS
000364r 2               .endproc
000364r 2               
000364r 2               .proc drawFrame1
000364r 2  A9 rr            LDA #<frame1_sprites
000366r 2  85 rr            STA frameSpritesLB
000368r 2  A9 rr            LDA #>frame1_sprites
00036Ar 2  85 rr            STA frameSpritesHB
00036Cr 2               
00036Cr 2  20 rr rr         JSR drawFrame
00036Fr 2  60               RTS
000370r 2               .endproc
000370r 2               
000370r 2               .proc drawFrame2
000370r 2  A9 rr            LDA #<frame2_sprites
000372r 2  85 rr            STA frameSpritesLB
000374r 2  A9 rr            LDA #>frame2_sprites
000376r 2  85 rr            STA frameSpritesHB
000378r 2               
000378r 2  20 rr rr         JSR drawFrame
00037Br 2  60               RTS
00037Cr 2               .endproc
00037Cr 2               
00037Cr 2               .proc drawFrame3
00037Cr 2  A9 rr            LDA #<frame3_sprites
00037Er 2  85 rr            STA frameSpritesLB
000380r 2  A9 rr            LDA #>frame3_sprites
000382r 2  85 rr            STA frameSpritesHB
000384r 2               
000384r 2  20 rr rr         JSR drawFrame
000387r 2  60               RTS
000388r 2               .endproc
000388r 2               
000388r 1               .include "./lib/heroStates/heroStayRight.asm"
000388r 2               .segment "CODE"
000388r 2               
000388r 2               .proc heroStayFirstProc
000388r 2  60             RTS
000389r 2               .endproc
000389r 2               
000389r 2               .proc drawStayRight
000389r 2  AD rr rr       LDA heroYCoordinate
00038Cr 2  69 00          ADC #0
00038Er 2  8D 00 02       STA $0200
000391r 2  A9 34          LDA #$34
000393r 2  8D 01 02       STA $0201
000396r 2  A9 16          LDA #%00010110
000398r 2  8D 02 02       STA $0202
00039Br 2  AD rr rr       LDA heroXCoordinate
00039Er 2  69 04          ADC #4
0003A0r 2  8D 03 02       STA $0203
0003A3r 2               
0003A3r 2  AD rr rr       LDA heroYCoordinate
0003A6r 2  8D 04 02       STA $0204
0003A9r 2  A9 00          LDA #00
0003ABr 2  8D 05 02       STA $0205
0003AEr 2  A9 17          LDA #%00010111
0003B0r 2  8D 06 02       STA $0206
0003B3r 2  AD rr rr       LDA heroXCoordinate
0003B6r 2  8D 07 02       STA $0207
0003B9r 2               
0003B9r 2  AD rr rr       LDA heroYCoordinate
0003BCr 2  69 08          ADC #8
0003BEr 2  8D 08 02       STA $0208
0003C1r 2  A9 10          LDA #$10
0003C3r 2  8D 09 02       STA $0209
0003C6r 2  A9 17          LDA #%00010111
0003C8r 2  8D 0A 02       STA $020A
0003CBr 2  AD rr rr       LDA heroXCoordinate
0003CEr 2  8D 0B 02       STA $020B
0003D1r 2               
0003D1r 2  AD rr rr       LDA heroYCoordinate
0003D4r 2  69 10          ADC #16
0003D6r 2  8D 0C 02       STA $020C
0003D9r 2  A9 20          LDA #$20
0003DBr 2  8D 0D 02       STA $020D
0003DEr 2  A9 17          LDA #%00010111
0003E0r 2  8D 0E 02       STA $020E
0003E3r 2  AD rr rr       LDA heroXCoordinate
0003E6r 2  8D 0F 02       STA $020F
0003E9r 2               
0003E9r 2  AD rr rr       LDA heroYCoordinate
0003ECr 2  8D 10 02       STA $0210
0003EFr 2  A9 00          LDA #$00
0003F1r 2  8D 11 02       STA $0211
0003F4r 2  A9 57          LDA #%01010111
0003F6r 2  8D 12 02       STA $0212
0003F9r 2  AD rr rr       LDA heroXCoordinate
0003FCr 2  69 08          ADC #8
0003FEr 2  8D 13 02       STA $0213
000401r 2               
000401r 2  AD rr rr       LDA heroYCoordinate
000404r 2  69 08          ADC #8
000406r 2  8D 14 02       STA $0214
000409r 2  A9 10          LDA #$10
00040Br 2  8D 15 02       STA $0215
00040Er 2  A9 57          LDA #%01010111
000410r 2  8D 16 02       STA $0216
000413r 2  AD rr rr       LDA heroXCoordinate
000416r 2  69 08          ADC #8
000418r 2  8D 17 02       STA $0217
00041Br 2               
00041Br 2  AD rr rr       LDA heroYCoordinate
00041Er 2  69 10          ADC #16
000420r 2  8D 18 02       STA $0218
000423r 2  A9 20          LDA #$20
000425r 2  8D 19 02       STA $0219
000428r 2  A9 57          LDA #%01010111
00042Ar 2  8D 1A 02       STA $021A
00042Dr 2  AD rr rr       LDA heroXCoordinate
000430r 2  69 08          ADC #8
000432r 2  8D 1B 02       STA $021B
000435r 2               
000435r 2  60             RTS
000436r 2               .endproc
000436r 2               
000436r 2               .proc clearStayRight
000436r 2  A9 00            LDA #$00
000438r 2  A2 00            LDX #$00
00043Ar 2               clearLoop:
00043Ar 2  9D 00 02         STA $0200, x
00043Dr 2  E8               INX
00043Er 2  C9 23            CMP #$23
000440r 2  D0 F8            BNE clearLoop
000442r 2               
000442r 2  60               RTS
000443r 2               .endproc
000443r 2               
000443r 1               .include "./lib/heroStates/heroStayLeft.asm"
000443r 2               .segment "CODE"
000443r 2               
000443r 2               .proc heroStayLeftFirstProc
000443r 2  60               RTS
000444r 2               .endproc
000444r 2               
000444r 2               .proc drawStayLeft
000444r 2  AD rr rr       LDA heroYCoordinate
000447r 2  8D 00 02       STA $0200
00044Ar 2  A9 04          LDA #$04
00044Cr 2  8D 01 02       STA $0201
00044Fr 2  A9 56          LDA #%01010110
000451r 2  8D 02 02       STA $0202
000454r 2  AD rr rr       LDA heroXCoordinate
000457r 2  8D 03 02       STA $0203
00045Ar 2               
00045Ar 2  AD rr rr       LDA heroYCoordinate
00045Dr 2  8D 04 02       STA $0204
000460r 2  A9 00          LDA #00
000462r 2  8D 05 02       STA $0205
000465r 2  A9 57          LDA #%01010111
000467r 2  8D 06 02       STA $0206
00046Ar 2  AD rr rr       LDA heroXCoordinate
00046Dr 2  69 07          ADC #7
00046Fr 2  8D 07 02       STA $0207
000472r 2               
000472r 2  AD rr rr       LDA heroYCoordinate
000475r 2  69 08          ADC #8
000477r 2  8D 08 02       STA $0208
00047Ar 2  A9 10          LDA #$10
00047Cr 2  8D 09 02       STA $0209
00047Fr 2  A9 17          LDA #%00010111
000481r 2  8D 0A 02       STA $020A
000484r 2  AD rr rr       LDA heroXCoordinate
000487r 2  8D 0B 02       STA $020B
00048Ar 2               
00048Ar 2  AD rr rr       LDA heroYCoordinate
00048Dr 2  69 10          ADC #16
00048Fr 2  8D 0C 02       STA $020C
000492r 2  A9 20          LDA #$20
000494r 2  8D 0D 02       STA $020D
000497r 2  A9 17          LDA #%00010111
000499r 2  8D 0E 02       STA $020E
00049Cr 2  AD rr rr       LDA heroXCoordinate
00049Fr 2  8D 0F 02       STA $020F
0004A2r 2               
0004A2r 2  AD rr rr       LDA heroYCoordinate
0004A5r 2  8D 10 02       STA $0210
0004A8r 2  A9 01          LDA #$01
0004AAr 2  8D 11 02       STA $0211
0004ADr 2  A9 57          LDA #%01010111
0004AFr 2  8D 12 02       STA $0212
0004B2r 2  AD rr rr       LDA heroXCoordinate
0004B5r 2  8D 13 02       STA $0213
0004B8r 2               
0004B8r 2  AD rr rr       LDA heroYCoordinate
0004BBr 2  69 08          ADC #8
0004BDr 2  8D 14 02       STA $0214
0004C0r 2  A9 10          LDA #$10
0004C2r 2  8D 15 02       STA $0215
0004C5r 2  A9 57          LDA #%01010111
0004C7r 2  8D 16 02       STA $0216
0004CAr 2  AD rr rr       LDA heroXCoordinate
0004CDr 2  69 08          ADC #8
0004CFr 2  8D 17 02       STA $0217
0004D2r 2               
0004D2r 2  AD rr rr       LDA heroYCoordinate
0004D5r 2  69 10          ADC #16
0004D7r 2  8D 18 02       STA $0218
0004DAr 2  A9 20          LDA #$20
0004DCr 2  8D 19 02       STA $0219
0004DFr 2  A9 57          LDA #%01010111
0004E1r 2  8D 1A 02       STA $021A
0004E4r 2  AD rr rr       LDA heroXCoordinate
0004E7r 2  69 08          ADC #8
0004E9r 2  8D 1B 02       STA $021B
0004ECr 2               
0004ECr 2  60             RTS
0004EDr 2               .endproc
0004EDr 2               
0004EDr 2               .proc clearStayLeft
0004EDr 2  A9 00            LDA #$00
0004EFr 2  8D 00 02         STA $0200
0004F2r 2  8D 01 02         STA $0201
0004F5r 2  8D 02 02         STA $0202
0004F8r 2  8D 03 02         STA $0203
0004FBr 2  8D 04 02         STA $0204
0004FEr 2  8D 05 02         STA $0205
000501r 2  8D 06 02         STA $0206
000504r 2  8D 07 02         STA $0207
000507r 2  8D 08 02         STA $0208
00050Ar 2  8D 09 02         STA $0209
00050Dr 2  8D 0A 02         STA $020A
000510r 2  8D 0B 02         STA $020B
000513r 2  8D 0C 02         STA $020C
000516r 2  8D 0D 02         STA $020D
000519r 2  8D 0E 02         STA $020E
00051Cr 2  8D 0F 02         STA $020F
00051Fr 2  8D 10 02         STA $0210
000522r 2  8D 11 02         STA $0211
000525r 2  8D 12 02         STA $0212
000528r 2  8D 13 02         STA $0213
00052Br 2  8D 14 02         STA $0214
00052Er 2  8D 15 02         STA $0215
000531r 2  8D 16 02         STA $0216
000534r 2  8D 17 02         STA $0217
000537r 2  8D 18 02         STA $0218
00053Ar 2  8D 19 02         STA $0219
00053Dr 2  8D 1A 02         STA $021A
000540r 2  8D 1B 02         STA $021B
000543r 2               
000543r 2  60               RTS
000544r 2               .endproc
000544r 2               
000544r 1               .include "./lib/heroStates/heroWalkLeft.asm"
000544r 2               .segment "ZEROPAGE"
00000Ar 2  xx             LeftFrameCountPlayerRightWalk: .res 1;
00000Br 2               
00000Br 2               .segment "RODATA"
00002Er 2                  leftFrameSprites:
00002Er 2  33                 .byt $33
00002Fr 2  02 03              .byt $02, $03
000031r 2  12 13              .byt $12, $13
000033r 2  22 23              .byt $22, $23
000035r 2               
000035r 2                  leftFrame2Sprites:
000035r 2  33                 .byt $33
000036r 2  02 03              .byt $02, $03
000038r 2  14 15              .byt $14, $15
00003Ar 2  24 25              .byt $24, $25
00003Cr 2               
00003Cr 2                  leftFrame3Sprites:
00003Cr 2  33                 .byt $33
00003Dr 2  02 03              .byt $02, $03
00003Fr 2  16 17              .byt $16, $17
000041r 2  26 27              .byt $26, $27
000043r 2               
000043r 2                  leftFrameAttributes:
000043r 2  46                 .byt %01000110
000044r 2  47 47              .byt %01000111, %01000111
000046r 2  47 47              .byt %01000111, %01000111
000048r 2  47 47              .byt %01000111, %01000111
00004Ar 2               
00004Ar 2                  leftFrameOffsetX:
00004Ar 2  02                 .byt $02
00004Br 2  08 00              .byt $08, $00
00004Dr 2  08 00              .byt $08, $00
00004Fr 2  08 00              .byt $08, $00
000051r 2               
000051r 2                  leftFrameOffsetY:
000051r 2  00                 .byt $00
000052r 2  00 00              .byt $00, $00
000054r 2  08 08              .byt $08, $08
000056r 2  10 10              .byt $10, $10
000058r 2               
000058r 2               .segment "CODE"
000544r 2               
000544r 2               .proc firstProcHeroWalkLeft
000544r 2  60             RTS
000545r 2               .endproc
000545r 2               
000545r 2               .proc heroLeftWalk
000545r 2  20 rr rr         JSR collisionOnMapLeft
000548r 2  AD rr rr         LDA collideFlag
00054Br 2  C9 03            CMP #%00000011
00054Dr 2  F0 02            BEQ decrementXCoordinate
00054Fr 2  D0 03            BNE return
000551r 2               ; todo dorabotat' esli geroy v levo idet do ekrana
000551r 2               ;  LDA scrollPosition
000551r 2               ;  CMP heroXCoordinate
000551r 2               ;  BCS stopDecrement
000551r 2               ;  BNE decrementX
000551r 2               ;  stopDecrement:
000551r 2               ;    RTS
000551r 2               ;  decrementX:
000551r 2                   decrementXCoordinate:
000551r 2  CE rr rr             DEC heroXCoordinate
000554r 2                   return:
000554r 2  60                   RTS
000555r 2                 ; todo check left screen border
000555r 2               .endproc
000555r 2               
000555r 2               .proc drawHeroLeft
000555r 2  A5 rr            LDA scrollCounter
000557r 2  29 08            AND #8
000559r 2  C9 01            CMP #1
00055Br 2  F0 08            BEQ drawLeftFrame1Label
00055Dr 2  29 08            AND #8
00055Fr 2  F0 0A            BEQ drawLeftFrame2Label
000561r 2  29 0A            AND #10
000563r 2  F0 0C            BEQ drawLeftFrame3Label
000565r 2               
000565r 2                 drawLeftFrame1Label:
000565r 2  20 rr rr         JSR drawLeftFrame1
000568r 2  E6 rr            INC LeftFrameCountPlayerRightWalk
00056Ar 2  60               RTS
00056Br 2                 drawLeftFrame2Label:
00056Br 2  20 rr rr         JSR drawLeftFrame2
00056Er 2  E6 rr            INC LeftFrameCountPlayerRightWalk
000570r 2  60               RTS
000571r 2                 drawLeftFrame3Label:
000571r 2  20 rr rr         JSR drawLeftFrame3
000574r 2  E6 rr            INC LeftFrameCountPlayerRightWalk
000576r 2  60               RTS
000577r 2               .endproc
000577r 2               
000577r 2               .proc commonInitFrameLeft
000577r 2  A9 rr            LDA #<leftFrameAttributes
000579r 2  85 rr            STA frameAttributesLB
00057Br 2  A9 rr            LDA #>leftFrameAttributes
00057Dr 2  85 rr            STA frameAttributesHB
00057Fr 2               
00057Fr 2  A9 rr            LDA #<leftFrameOffsetX
000581r 2  85 rr            STA frameOffsetsXLB
000583r 2  A9 rr            LDA #>leftFrameOffsetX
000585r 2  85 rr            STA frameOffsetsXHB
000587r 2               
000587r 2  A9 rr            LDA #<leftFrameOffsetY
000589r 2  85 rr            STA frameOffsetsYLB
00058Br 2  A9 rr            LDA #>leftFrameOffsetY
00058Dr 2  85 rr            STA frameOffsetsYHB
00058Fr 2               
00058Fr 2  60               RTS
000590r 2               .endproc
000590r 2               
000590r 2               .proc drawLeftFrame1
000590r 2  20 rr rr         JSR commonInitFrameLeft
000593r 2               
000593r 2  A9 rr            LDA #<leftFrameSprites
000595r 2  85 rr            STA frameSpritesLB
000597r 2  A9 rr            LDA #>leftFrameSprites
000599r 2  85 rr            STA frameSpritesHB
00059Br 2               
00059Br 2  20 rr rr         JSR drawFrame
00059Er 2               
00059Er 2  60               RTS
00059Fr 2               .endproc
00059Fr 2               
00059Fr 2               .proc drawLeftFrame2
00059Fr 2  20 rr rr         JSR commonInitFrameLeft
0005A2r 2               
0005A2r 2  A9 rr            LDA #<leftFrame2Sprites
0005A4r 2  85 rr            STA frameSpritesLB
0005A6r 2  A9 rr            LDA #>leftFrame2Sprites
0005A8r 2  85 rr            STA frameSpritesHB
0005AAr 2               
0005AAr 2  20 rr rr         JSR drawFrame
0005ADr 2               
0005ADr 2  60               RTS
0005AEr 2               .endproc
0005AEr 2               
0005AEr 2               .proc drawLeftFrame3
0005AEr 2  20 rr rr         JSR commonInitFrameLeft
0005B1r 2               
0005B1r 2  A9 rr            LDA #<leftFrame2Sprites
0005B3r 2  85 rr            STA frameSpritesLB
0005B5r 2  A9 rr            LDA #>leftFrame2Sprites
0005B7r 2  85 rr            STA frameSpritesHB
0005B9r 2               
0005B9r 2  20 rr rr         JSR drawFrame
0005BCr 2               
0005BCr 2  60               RTS
0005BDr 2               .endproc
0005BDr 2               
0005BDr 1               .include "./lib/heroStates/heroJump.asm"
0005BDr 2               .segment "ZEROPAGE"
00000Br 2  xx               isJump: .res 1;
00000Cr 2  xx               jumpHeight: .res 1;
00000Dr 2               
00000Dr 2               .segment "CODE"
0005BDr 2               
0005BDr 2               .proc firstJumpProcedure
0005BDr 2  60               RTS
0005BEr 2               .endproc
0005BEr 2               
0005BEr 2               .proc setIsJump
0005BEr 2  A9 01            LDA #01
0005C0r 2  85 rr            STA isJump
0005C2r 2  60               RTS
0005C3r 2               .endproc
0005C3r 2               
0005C3r 2               .proc unsetIsJump
0005C3r 2  A9 00            LDA #00
0005C5r 2  85 rr            STA isJump
0005C7r 2  60               RTS
0005C8r 2               .endproc
0005C8r 2               
0005C8r 2               .proc caclulateJump
0005C8r 2  A5 rr            LDA isJump
0005CAr 2  C9 01            CMP #01
0005CCr 2  D0 19            BNE return
0005CEr 2  F0 00            BEQ continue
0005D0r 2               
0005D0r 2                   continue:
0005D0r 2  A5 rr            LDA jumpHeight
0005D2r 2  C9 20            CMP #$20
0005D4r 2  F0 11            BEQ return
0005D6r 2  D0 00            BNE decrementY
0005D8r 2               
0005D8r 2                   decrementY:
0005D8r 2  CE rr rr             DEC heroYCoordinate
0005DBr 2  CE rr rr             DEC heroYCoordinate
0005DEr 2  CE rr rr             DEC heroYCoordinate
0005E1r 2  CE rr rr             DEC heroYCoordinate
0005E4r 2  E6 rr                INC jumpHeight
0005E6r 2  60                   RTS
0005E7r 2               
0005E7r 2                   return:
0005E7r 2  60                   RTS
0005E8r 2               .endproc
0005E8r 2               
0005E8r 2               .proc drawJumpRight
0005E8r 2  AD rr rr         lda heroYCoordinate
0005EBr 2  8D 00 02           sta $0200
0005EEr 2  A9 04              lda #$04
0005F0r 2  8D 01 02           sta $0201
0005F3r 2  A9 16              lda #%00010110
0005F5r 2  8D 02 02           sta $0202
0005F8r 2  AD rr rr           lda heroXCoordinate
0005FBr 2  69 06              adc #6
0005FDr 2  8D 03 02           sta $0203
000600r 2               
000600r 2  AD rr rr           lda heroYCoordinate
000603r 2  8D 04 02           sta $0204
000606r 2  A9 00              lda #00
000608r 2  8D 05 02           sta $0205
00060Br 2  A9 17              lda #%00010111
00060Dr 2  8D 06 02           sta $0206
000610r 2  AD rr rr           lda heroXCoordinate
000613r 2  8D 07 02           sta $0207
000616r 2               
000616r 2  AD rr rr           lda heroYCoordinate
000619r 2  69 08              adc #8
00061Br 2  8D 08 02           sta $0208
00061Er 2  A9 18              lda #$18
000620r 2  8D 09 02           sta $0209
000623r 2  A9 17              lda #%00010111
000625r 2  8D 0A 02           sta $020A
000628r 2  AD rr rr           lda heroXCoordinate
00062Br 2  8D 0B 02           sta $020B
00062Er 2               
00062Er 2  AD rr rr           lda heroYCoordinate
000631r 2  69 10              adc #16
000633r 2  8D 0C 02           sta $020C
000636r 2  A9 28              lda #$28
000638r 2  8D 0D 02           sta $020D
00063Br 2  A9 17              lda #%00010111
00063Dr 2  8D 0E 02           sta $020E
000640r 2  AD rr rr           lda heroXCoordinate
000643r 2  8D 0F 02           sta $020F
000646r 2               
000646r 2  AD rr rr           lda heroYCoordinate
000649r 2  8D 10 02           sta $0210
00064Cr 2  A9 01              lda #$01
00064Er 2  8D 11 02           sta $0211
000651r 2  A9 17              lda #%00010111
000653r 2  8D 12 02           sta $0212
000656r 2  AD rr rr           lda heroXCoordinate
000659r 2  69 08              adc #8
00065Br 2  8D 13 02           sta $0213
00065Er 2               
00065Er 2  AD rr rr           lda heroYCoordinate
000661r 2  69 08              adc #8
000663r 2  8D 14 02           sta $0214
000666r 2  A9 19              lda #$19
000668r 2  8D 15 02           sta $0215
00066Br 2  A9 17              lda #%00010111
00066Dr 2  8D 16 02           sta $0216
000670r 2  AD rr rr           lda heroXCoordinate
000673r 2  69 08              adc #8
000675r 2  8D 17 02           sta $0217
000678r 2               
000678r 2  AD rr rr           lda heroYCoordinate
00067Br 2  69 10              adc #16
00067Dr 2  8D 18 02           sta $0218
000680r 2  A9 29              lda #$29
000682r 2  8D 19 02           sta $0219
000685r 2  A9 17              lda #%00010111
000687r 2  8D 1A 02           sta $021A
00068Ar 2  AD rr rr           lda heroXCoordinate
00068Dr 2  69 08              adc #8
00068Fr 2  8D 1B 02           sta $021B
000692r 2               
000692r 2  60                 RTS
000693r 2               .endproc
000693r 2               
000693r 2               .proc drawJumpLeft
000693r 2  AD rr rr         lda heroYCoordinate
000696r 2  8D 00 02           sta $0200
000699r 2  A9 04              lda #$04
00069Br 2  8D 01 02           sta $0201
00069Er 2  A9 56              lda #%01010110
0006A0r 2  8D 02 02           sta $0202
0006A3r 2  AD rr rr           lda heroXCoordinate
0006A6r 2  8D 03 02           sta $0203
0006A9r 2               
0006A9r 2  AD rr rr           lda heroYCoordinate
0006ACr 2  8D 04 02           sta $0204
0006AFr 2  A9 00              lda #00
0006B1r 2  8D 05 02           sta $0205
0006B4r 2  A9 57              lda #%01010111
0006B6r 2  8D 06 02           sta $0206
0006B9r 2  AD rr rr           lda heroXCoordinate
0006BCr 2  69 07              adc #7
0006BEr 2  8D 07 02           sta $0207
0006C1r 2               
0006C1r 2  AD rr rr           lda heroYCoordinate
0006C4r 2  69 08              adc #8
0006C6r 2  8D 08 02           sta $0208
0006C9r 2  A9 18              lda #$18
0006CBr 2  8D 09 02           sta $0209
0006CEr 2  A9 57              lda #%01010111
0006D0r 2  8D 0A 02           sta $020A
0006D3r 2  AD rr rr           lda heroXCoordinate
0006D6r 2  69 08              adc #8
0006D8r 2  8D 0B 02           sta $020B
0006DBr 2               
0006DBr 2  AD rr rr           lda heroYCoordinate
0006DEr 2  69 10              adc #16
0006E0r 2  8D 0C 02           sta $020C
0006E3r 2  A9 28              lda #$28
0006E5r 2  8D 0D 02           sta $020D
0006E8r 2  A9 57              lda #%01010111
0006EAr 2  8D 0E 02           sta $020E
0006EDr 2  AD rr rr           lda heroXCoordinate
0006F0r 2  69 08              adc #8
0006F2r 2  8D 0F 02           sta $020F
0006F5r 2               
0006F5r 2  AD rr rr           lda heroYCoordinate
0006F8r 2  8D 10 02           sta $0210
0006FBr 2  A9 01              lda #$01
0006FDr 2  8D 11 02           sta $0211
000700r 2  A9 57              lda #%01010111
000702r 2  8D 12 02           sta $0212
000705r 2  AD rr rr           lda heroXCoordinate
000708r 2  8D 13 02           sta $0213
00070Br 2               
00070Br 2  AD rr rr           lda heroYCoordinate
00070Er 2  69 08              adc #8
000710r 2  8D 14 02           sta $0214
000713r 2  A9 19              lda #$19
000715r 2  8D 15 02           sta $0215
000718r 2  A9 57              lda #%01010111
00071Ar 2  8D 16 02           sta $0216
00071Dr 2  AD rr rr           lda heroXCoordinate
000720r 2  8D 17 02           sta $0217
000723r 2               
000723r 2  AD rr rr           lda heroYCoordinate
000726r 2  69 10              adc #16
000728r 2  8D 18 02           sta $0218
00072Br 2  A9 29              lda #$29
00072Dr 2  8D 19 02           sta $0219
000730r 2  A9 57              lda #%01010111
000732r 2  8D 1A 02           sta $021A
000735r 2  AD rr rr           lda heroXCoordinate
000738r 2  8D 1B 02           sta $021B
00073Br 2               
00073Br 2  60                 RTS
00073Cr 2               .endproc
00073Cr 2               
00073Cr 1               .include "./lib/heroStates/heroWalkRightAndFire.asm"
00073Cr 2               .segment "CODE"
00073Cr 2               
00073Cr 2               .proc firstProcRightWalkFire
00073Cr 2  60               RTS
00073Dr 2               .endproc
00073Dr 2               
00073Dr 2               .proc heroRightWalkFire
00073Dr 2  AD rr rr       LDA heroXCoordinate
000740r 2  C9 7A          CMP #122
000742r 2  B0 02          BCS incrementScreen
000744r 2  D0 04          BNE incrementX
000746r 2                 incrementScreen:
000746r 2  20 rr rr         JSR incrementScrollPosition
000749r 2               ;    INC scrollPosition
000749r 2  60               RTS
00074Ar 2                 incrementX:
00074Ar 2  EE rr rr         INC heroXCoordinate
00074Dr 2  60               RTS
00074Er 2               .endproc
00074Er 2               
00074Er 2               .proc drawHeroRightWalkFire
00074Er 2  A5 rr            LDA scrollCounter
000750r 2  29 08            AND #8
000752r 2  C9 01            CMP #1
000754r 2  F0 08            BEQ drawFrameAndFire1Label
000756r 2  29 08            AND #8
000758r 2  F0 0A            BEQ drawFrameAndFire2Label
00075Ar 2  29 0A            AND #10
00075Cr 2  F0 0C            BEQ drawFrameAndFire3Label
00075Er 2               
00075Er 2                 drawFrameAndFire1Label:
00075Er 2  20 rr rr         JSR drawFrameAndFire1
000761r 2  E6 rr            INC frameCountPlayerRightWalk
000763r 2               
000763r 2  60               RTS
000764r 2                 drawFrameAndFire2Label:
000764r 2  20 rr rr         JSR drawFrameAndFire2
000767r 2  E6 rr            INC frameCountPlayerRightWalk
000769r 2               
000769r 2  60               RTS
00076Ar 2                 drawFrameAndFire3Label:
00076Ar 2  20 rr rr         JSR drawFrameAndFire3
00076Dr 2  E6 rr            INC frameCountPlayerRightWalk
00076Fr 2               
00076Fr 2  60               RTS
000770r 2               .endproc
000770r 2               
000770r 2               .proc drawFrameAndFire1
000770r 2  AD rr rr         LDA heroYCoordinate
000773r 2  8D 00 02         STA $0200
000776r 2  A9 02            LDA #$02
000778r 2  8D 01 02         STA $0201
00077Br 2  A9 17            LDA #%00010111
00077Dr 2  8D 02 02         STA $0202
000780r 2  AD rr rr         LDA heroXCoordinate
000783r 2  8D 03 02         STA $0203
000786r 2               
000786r 2  AD rr rr         LDA heroYCoordinate
000789r 2  69 07            ADC #7
00078Br 2  8D 04 02         STA $0204
00078Er 2  A9 12            LDA #$12
000790r 2  8D 05 02         STA $0205
000793r 2  A9 17            LDA #%00010111
000795r 2  8D 06 02         STA $0206
000798r 2  AD rr rr         LDA heroXCoordinate
00079Br 2  8D 07 02         STA $0207
00079Er 2               
00079Er 2  AD rr rr         LDA heroYCoordinate
0007A1r 2  69 10            ADC #16
0007A3r 2  8D 08 02         STA $0208
0007A6r 2  A9 22            LDA #$22
0007A8r 2  8D 09 02         STA $0209
0007ABr 2  A9 17            LDA #%00010111
0007ADr 2  8D 0A 02         STA $020A
0007B0r 2  AD rr rr         LDA heroXCoordinate
0007B3r 2  8D 0B 02         STA $020B
0007B6r 2               
0007B6r 2  AD rr rr         LDA heroYCoordinate
0007B9r 2  8D 0C 02         STA $020C
0007BCr 2  A9 03            LDA #$03
0007BEr 2  8D 0D 02         STA $020D
0007C1r 2  A9 17            LDA #%00010111
0007C3r 2  8D 0E 02         STA $020E
0007C6r 2  AD rr rr         LDA heroXCoordinate
0007C9r 2  69 08            ADC #8
0007CBr 2  8D 0F 02         STA $020F
0007CEr 2               
0007CEr 2  AD rr rr         LDA heroYCoordinate
0007D1r 2  69 08            ADC #8
0007D3r 2  8D 10 02         STA $0210
0007D6r 2  A9 13            LDA #$13
0007D8r 2  8D 11 02         STA $0211
0007DBr 2  A9 17            LDA #%00010111
0007DDr 2  8D 12 02         STA $0212
0007E0r 2  AD rr rr         LDA heroXCoordinate
0007E3r 2  69 08            ADC #8
0007E5r 2  8D 13 02         STA $0213
0007E8r 2               
0007E8r 2  AD rr rr         LDA heroYCoordinate
0007EBr 2  69 10            ADC #16
0007EDr 2  8D 14 02         STA $0214
0007F0r 2  A9 23            LDA #$23
0007F2r 2  8D 15 02         STA $0215
0007F5r 2  A9 17            LDA #%00010111
0007F7r 2  8D 16 02         STA $0216
0007FAr 2  AD rr rr         LDA heroXCoordinate
0007FDr 2  69 08            ADC #8
0007FFr 2  8D 17 02         STA $0217
000802r 2               
000802r 2  AD rr rr         LDA heroYCoordinate
000805r 2  8D 18 02         STA $0218
000808r 2  A9 04            LDA #$04
00080Ar 2  8D 19 02         STA $0219
00080Dr 2  A9 16            LDA #%00010110
00080Fr 2  8D 1A 02         STA $021A
000812r 2  AD rr rr         LDA heroXCoordinate
000815r 2  69 06            ADC #6
000817r 2  8D 1B 02         STA $021B
00081Ar 2               
00081Ar 2  60               RTS
00081Br 2               .endproc
00081Br 2               
00081Br 2               .proc drawFrameAndFire2
00081Br 2  AD rr rr         LDA heroYCoordinate
00081Er 2  8D 00 02         STA $0200
000821r 2  A9 02            LDA #$02
000823r 2  8D 01 02         STA $0201
000826r 2  A9 17            LDA #%00010111
000828r 2  8D 02 02         STA $0202
00082Br 2  AD rr rr         LDA heroXCoordinate
00082Er 2  8D 03 02         STA $0203
000831r 2               
000831r 2  AD rr rr         LDA heroYCoordinate
000834r 2  69 07            ADC #7
000836r 2  8D 04 02         STA $0204
000839r 2  A9 14            LDA #$14
00083Br 2  8D 05 02         STA $0205
00083Er 2  A9 17            LDA #%00010111
000840r 2  8D 06 02         STA $0206
000843r 2  AD rr rr         LDA heroXCoordinate
000846r 2  8D 07 02         STA $0207
000849r 2               
000849r 2  AD rr rr         LDA heroYCoordinate
00084Cr 2  69 10            ADC #16
00084Er 2  8D 08 02         STA $0208
000851r 2  A9 24            LDA #$24
000853r 2  8D 09 02         STA $0209
000856r 2  A9 17            LDA #%00010111
000858r 2  8D 0A 02         STA $020A
00085Br 2  AD rr rr         LDA heroXCoordinate
00085Er 2  8D 0B 02         STA $020B
000861r 2               
000861r 2  AD rr rr         LDA heroYCoordinate
000864r 2  8D 0C 02         STA $020C
000867r 2  A9 03            LDA #$03
000869r 2  8D 0D 02         STA $020D
00086Cr 2  A9 17            LDA #%00010111
00086Er 2  8D 0E 02         STA $020E
000871r 2  AD rr rr         LDA heroXCoordinate
000874r 2  69 08            ADC #8
000876r 2  8D 0F 02         STA $020F
000879r 2               
000879r 2  AD rr rr         LDA heroYCoordinate
00087Cr 2  69 08            ADC #8
00087Er 2  8D 10 02         STA $0210
000881r 2  A9 13            LDA #$13
000883r 2  8D 11 02         STA $0211
000886r 2  A9 17            LDA #%00010111
000888r 2  8D 12 02         STA $0212
00088Br 2  AD rr rr         LDA heroXCoordinate
00088Er 2  69 08            ADC #8
000890r 2  8D 13 02         STA $0213
000893r 2               
000893r 2  AD rr rr         LDA heroYCoordinate
000896r 2  69 10            ADC #16
000898r 2  8D 14 02         STA $0214
00089Br 2  A9 25            LDA #$25
00089Dr 2  8D 15 02         STA $0215
0008A0r 2  A9 17            LDA #%00010111
0008A2r 2  8D 16 02         STA $0216
0008A5r 2  AD rr rr         LDA heroXCoordinate
0008A8r 2  69 08            ADC #8
0008AAr 2  8D 17 02         STA $0217
0008ADr 2               
0008ADr 2  AD rr rr         LDA heroYCoordinate
0008B0r 2  8D 18 02         STA $0218
0008B3r 2  A9 04            LDA #$04
0008B5r 2  8D 19 02         STA $0219
0008B8r 2  A9 16            LDA #%00010110
0008BAr 2  8D 1A 02         STA $021A
0008BDr 2  AD rr rr         LDA heroXCoordinate
0008C0r 2  69 06            ADC #6
0008C2r 2  8D 1B 02         STA $021B
0008C5r 2  60               RTS
0008C6r 2               .endproc
0008C6r 2               
0008C6r 2               .proc drawFrameAndFire3
0008C6r 2  AD rr rr         LDA heroYCoordinate
0008C9r 2  8D 00 02         STA $0200
0008CCr 2  A9 02            LDA #$02
0008CEr 2  8D 01 02         STA $0201
0008D1r 2  A9 17            LDA #%00010111
0008D3r 2  8D 02 02         STA $0202
0008D6r 2  AD rr rr         LDA heroXCoordinate
0008D9r 2  8D 03 02         STA $0203
0008DCr 2               
0008DCr 2  AD rr rr         LDA heroYCoordinate
0008DFr 2  69 07            ADC #7
0008E1r 2  8D 04 02         STA $0204
0008E4r 2  A9 16            LDA #$16
0008E6r 2  8D 05 02         STA $0205
0008E9r 2  A9 17            LDA #%00010111
0008EBr 2  8D 06 02         STA $0206
0008EEr 2  AD rr rr         LDA heroXCoordinate
0008F1r 2  8D 07 02         STA $0207
0008F4r 2               
0008F4r 2  AD rr rr         LDA heroYCoordinate
0008F7r 2  69 10            ADC #16
0008F9r 2  8D 08 02         STA $0208
0008FCr 2  A9 26            LDA #$26
0008FEr 2  8D 09 02         STA $0209
000901r 2  A9 17            LDA #%00010111
000903r 2  8D 0A 02         STA $020A
000906r 2  AD rr rr         LDA heroXCoordinate
000909r 2  8D 0B 02         STA $020B
00090Cr 2               
00090Cr 2  AD rr rr         LDA heroYCoordinate
00090Fr 2  8D 0C 02         STA $020C
000912r 2  A9 03            LDA #$03
000914r 2  8D 0D 02         STA $020D
000917r 2  A9 17            LDA #%00010111
000919r 2  8D 0E 02         STA $020E
00091Cr 2  AD rr rr         LDA heroXCoordinate
00091Fr 2  69 08            ADC #8
000921r 2  8D 0F 02         STA $020F
000924r 2               
000924r 2  AD rr rr         LDA heroYCoordinate
000927r 2  69 08            ADC #8
000929r 2  8D 10 02         STA $0210
00092Cr 2  A9 13            LDA #$13
00092Er 2  8D 11 02         STA $0211
000931r 2  A9 17            LDA #%00010111
000933r 2  8D 12 02         STA $0212
000936r 2  AD rr rr         LDA heroXCoordinate
000939r 2  69 08            ADC #8
00093Br 2  8D 13 02         STA $0213
00093Er 2               
00093Er 2  AD rr rr         LDA heroYCoordinate
000941r 2  69 10            ADC #16
000943r 2  8D 14 02         STA $0214
000946r 2  A9 27            LDA #$27
000948r 2  8D 15 02         STA $0215
00094Br 2  A9 17            LDA #%00010111
00094Dr 2  8D 16 02         STA $0216
000950r 2  AD rr rr         LDA heroXCoordinate
000953r 2  69 08            ADC #8
000955r 2  8D 17 02         STA $0217
000958r 2               
000958r 2  AD rr rr         LDA heroYCoordinate
00095Br 2  8D 18 02         STA $0218
00095Er 2  A9 04            LDA #$04
000960r 2  8D 19 02         STA $0219
000963r 2  A9 16            LDA #%00010110
000965r 2  8D 1A 02         STA $021A
000968r 2  AD rr rr         LDA heroXCoordinate
00096Br 2  69 06            ADC #6
00096Dr 2  8D 1B 02         STA $021B
000970r 2               
000970r 2  60               RTS
000971r 2               .endproc
000971r 2               
000971r 1               .include "./lib/heroStates/heroWalkLeftAndFire.asm"
000971r 2               .segment "CODE"
000971r 2               
000971r 2               .proc firstProcHeroWalkLeftAndFire
000971r 2  60             RTS
000972r 2               .endproc
000972r 2               
000972r 2               .proc heroLeftWalkFire
000972r 2               ; todo dorabotat' esli geroy v levo idet do ekrana
000972r 2               ;  LDA scrollPosition
000972r 2               ;  CMP heroXCoordinate
000972r 2               ;  BCS stopDecrement
000972r 2               ;  BNE decrementX
000972r 2               ;  stopDecrement:
000972r 2               ;    RTS
000972r 2               ;  decrementX:
000972r 2  CE rr rr         DEC heroXCoordinate
000975r 2  60               RTS
000976r 2                 ; todo check left screen border
000976r 2               .endproc
000976r 2               
000976r 2               .proc drawHeroLeftAndFire
000976r 2  A5 rr            LDA scrollCounter
000978r 2  29 08            AND #8
00097Ar 2  C9 01            CMP #1
00097Cr 2  F0 08            BEQ drawLeftAndFireFrame1Label
00097Er 2  29 08            AND #8
000980r 2  F0 0A            BEQ drawLeftAndFireFrame2Label
000982r 2  29 0A            AND #10
000984r 2  F0 0C            BEQ drawLeftAndFireFrame3Label
000986r 2               
000986r 2                 drawLeftAndFireFrame1Label:
000986r 2  20 rr rr         JSR drawLeftAndFireFrame1
000989r 2  E6 rr            INC frameCountPlayerRightWalk
00098Br 2  60               RTS
00098Cr 2                 drawLeftAndFireFrame2Label:
00098Cr 2  20 rr rr         JSR drawLeftAndFireFrame2
00098Fr 2  E6 rr            INC frameCountPlayerRightWalk
000991r 2  60               RTS
000992r 2                 drawLeftAndFireFrame3Label:
000992r 2  20 rr rr         JSR drawLeftAndFireFrame3
000995r 2  E6 rr            INC frameCountPlayerRightWalk
000997r 2  60               RTS
000998r 2               .endproc
000998r 2               
000998r 2               .proc drawLeftAndFireFrame1
000998r 2  AD rr rr         LDA heroYCoordinate
00099Br 2  8D 00 02         STA $0200
00099Er 2  A9 02            LDA #$02
0009A0r 2  8D 01 02         STA $0201
0009A3r 2  A9 57            LDA #%01010111
0009A5r 2  8D 02 02         STA $0202
0009A8r 2  AD rr rr         LDA heroXCoordinate
0009ABr 2  69 08            ADC #8
0009ADr 2  8D 03 02         STA $0203
0009B0r 2               
0009B0r 2  AD rr rr         LDA heroYCoordinate
0009B3r 2  69 07            ADC #7
0009B5r 2  8D 04 02         STA $0204
0009B8r 2  A9 12            LDA #$12
0009BAr 2  8D 05 02         STA $0205
0009BDr 2  A9 57            LDA #%01010111
0009BFr 2  8D 06 02         STA $0206
0009C2r 2  AD rr rr         LDA heroXCoordinate
0009C5r 2  69 08            ADC #8
0009C7r 2  8D 07 02         STA $0207
0009CAr 2               
0009CAr 2  AD rr rr         LDA heroYCoordinate
0009CDr 2  69 10            ADC #16
0009CFr 2  8D 08 02         STA $0208
0009D2r 2  A9 22            LDA #$22
0009D4r 2  8D 09 02         STA $0209
0009D7r 2  A9 57            LDA #%01010111
0009D9r 2  8D 0A 02         STA $020A
0009DCr 2  AD rr rr         LDA heroXCoordinate
0009DFr 2  69 08            ADC #8
0009E1r 2  8D 0B 02         STA $020B
0009E4r 2               
0009E4r 2  AD rr rr         LDA heroYCoordinate
0009E7r 2  8D 0C 02         STA $020C
0009EAr 2  A9 03            LDA #$03
0009ECr 2  8D 0D 02         STA $020D
0009EFr 2  A9 57            LDA #%01010111
0009F1r 2  8D 0E 02         STA $020E
0009F4r 2  AD rr rr         LDA heroXCoordinate
0009F7r 2  8D 0F 02         STA $020F
0009FAr 2               
0009FAr 2  AD rr rr         LDA heroYCoordinate
0009FDr 2  69 08            ADC #8
0009FFr 2  8D 10 02         STA $0210
000A02r 2  A9 13            LDA #$13
000A04r 2  8D 11 02         STA $0211
000A07r 2  A9 57            LDA #%01010111
000A09r 2  8D 12 02         STA $0212
000A0Cr 2  AD rr rr         LDA heroXCoordinate
000A0Fr 2  8D 13 02         STA $0213
000A12r 2               
000A12r 2  AD rr rr         LDA heroYCoordinate
000A15r 2  69 10            ADC #16
000A17r 2  8D 14 02         STA $0214
000A1Ar 2  A9 23            LDA #$23
000A1Cr 2  8D 15 02         STA $0215
000A1Fr 2  A9 57            LDA #%01010111
000A21r 2  8D 16 02         STA $0216
000A24r 2  AD rr rr         LDA heroXCoordinate
000A27r 2  8D 17 02         STA $0217
000A2Ar 2               
000A2Ar 2  AD rr rr         LDA heroYCoordinate
000A2Dr 2  8D 18 02         STA $0218
000A30r 2  A9 04            LDA #$04
000A32r 2  8D 19 02         STA $0219
000A35r 2  A9 16            LDA #%00010110
000A37r 2  8D 1A 02         STA $021A
000A3Ar 2  AD rr rr         LDA heroXCoordinate
000A3Dr 2  8D 1B 02         STA $021B
000A40r 2  60               RTS
000A41r 2               .endproc
000A41r 2               
000A41r 2               .proc drawLeftAndFireFrame2
000A41r 2  AD rr rr         LDA heroYCoordinate
000A44r 2  8D 00 02         STA $0200
000A47r 2  A9 02            LDA #$02
000A49r 2  8D 01 02         STA $0201
000A4Cr 2  A9 57            LDA #%01010111
000A4Er 2  8D 02 02         STA $0202
000A51r 2  AD rr rr         LDA heroXCoordinate
000A54r 2  69 07            ADC #7
000A56r 2  8D 03 02         STA $0203
000A59r 2               
000A59r 2  AD rr rr         LDA heroYCoordinate
000A5Cr 2  69 08            ADC #8
000A5Er 2  8D 04 02         STA $0204
000A61r 2  A9 14            LDA #$14
000A63r 2  8D 05 02         STA $0205
000A66r 2  A9 57            LDA #%01010111
000A68r 2  8D 06 02         STA $0206
000A6Br 2  AD rr rr         LDA heroXCoordinate
000A6Er 2  69 08            ADC #8
000A70r 2  8D 07 02         STA $0207
000A73r 2               
000A73r 2  AD rr rr         LDA heroYCoordinate
000A76r 2  69 10            ADC #16
000A78r 2  8D 08 02         STA $0208
000A7Br 2  A9 24            LDA #$24
000A7Dr 2  8D 09 02         STA $0209
000A80r 2  A9 57            LDA #%01010111
000A82r 2  8D 0A 02         STA $020A
000A85r 2  AD rr rr         LDA heroXCoordinate
000A88r 2  69 08            ADC #8
000A8Ar 2  8D 0B 02         STA $020B
000A8Dr 2               
000A8Dr 2  AD rr rr         LDA heroYCoordinate
000A90r 2  8D 0C 02         STA $020C
000A93r 2  A9 03            LDA #$03
000A95r 2  8D 0D 02         STA $020D
000A98r 2  A9 57            LDA #%01010111
000A9Ar 2  8D 0E 02         STA $020E
000A9Dr 2  AD rr rr         LDA heroXCoordinate
000AA0r 2  8D 0F 02         STA $020F
000AA3r 2               
000AA3r 2  AD rr rr         LDA heroYCoordinate
000AA6r 2  69 08            ADC #8
000AA8r 2  8D 10 02         STA $0210
000AABr 2  A9 13            LDA #$13
000AADr 2  8D 11 02         STA $0211
000AB0r 2  A9 57            LDA #%01010111
000AB2r 2  8D 12 02         STA $0212
000AB5r 2  AD rr rr         LDA heroXCoordinate
000AB8r 2  8D 13 02         STA $0213
000ABBr 2               
000ABBr 2  AD rr rr         LDA heroYCoordinate
000ABEr 2  69 10            ADC #16
000AC0r 2  8D 14 02         STA $0214
000AC3r 2  A9 25            LDA #$25
000AC5r 2  8D 15 02         STA $0215
000AC8r 2  A9 57            LDA #%01010111
000ACAr 2  8D 16 02         STA $0216
000ACDr 2  AD rr rr         LDA heroXCoordinate
000AD0r 2  8D 17 02         STA $0217
000AD3r 2               
000AD3r 2  AD rr rr         LDA heroYCoordinate
000AD6r 2  8D 18 02         STA $0218
000AD9r 2  A9 04            LDA #$04
000ADBr 2  8D 19 02         STA $0219
000ADEr 2  A9 16            LDA #%00010110
000AE0r 2  8D 1A 02         STA $021A
000AE3r 2  AD rr rr         LDA heroXCoordinate
000AE6r 2  8D 1B 02         STA $021B
000AE9r 2               
000AE9r 2  60               RTS
000AEAr 2               .endproc
000AEAr 2               
000AEAr 2               .proc drawLeftAndFireFrame3
000AEAr 2  AD rr rr         LDA heroYCoordinate
000AEDr 2  8D 00 02         STA $0200
000AF0r 2  A9 02            LDA #$02
000AF2r 2  8D 01 02         STA $0201
000AF5r 2  A9 57            LDA #%01010111
000AF7r 2  8D 02 02         STA $0202
000AFAr 2  AD rr rr         LDA heroXCoordinate
000AFDr 2  69 08            ADC #8
000AFFr 2  8D 03 02         STA $0203
000B02r 2               
000B02r 2  AD rr rr         LDA heroYCoordinate
000B05r 2  69 07            ADC #7
000B07r 2  8D 04 02         STA $0204
000B0Ar 2  A9 16            LDA #$16
000B0Cr 2  8D 05 02         STA $0205
000B0Fr 2  A9 57            LDA #%01010111
000B11r 2  8D 06 02         STA $0206
000B14r 2  AD rr rr         LDA heroXCoordinate
000B17r 2  69 08            ADC #8
000B19r 2  8D 07 02         STA $0207
000B1Cr 2               
000B1Cr 2  AD rr rr         LDA heroYCoordinate
000B1Fr 2  69 10            ADC #16
000B21r 2  8D 08 02         STA $0208
000B24r 2  A9 26            LDA #$26
000B26r 2  8D 09 02         STA $0209
000B29r 2  A9 57            LDA #%01010111
000B2Br 2  8D 0A 02         STA $020A
000B2Er 2  AD rr rr         LDA heroXCoordinate
000B31r 2  69 08            ADC #8
000B33r 2  8D 0B 02         STA $020B
000B36r 2               
000B36r 2  AD rr rr         LDA heroYCoordinate
000B39r 2  8D 0C 02         STA $020C
000B3Cr 2  A9 03            LDA #$03
000B3Er 2  8D 0D 02         STA $020D
000B41r 2  A9 57            LDA #%01010111
000B43r 2  8D 0E 02         STA $020E
000B46r 2  AD rr rr         LDA heroXCoordinate
000B49r 2  8D 0F 02         STA $020F
000B4Cr 2               
000B4Cr 2  AD rr rr         LDA heroYCoordinate
000B4Fr 2  69 08            ADC #8
000B51r 2  8D 10 02         STA $0210
000B54r 2  A9 13            LDA #$13
000B56r 2  8D 11 02         STA $0211
000B59r 2  A9 57            LDA #%01010111
000B5Br 2  8D 12 02         STA $0212
000B5Er 2  AD rr rr         LDA heroXCoordinate
000B61r 2  8D 13 02         STA $0213
000B64r 2               
000B64r 2  AD rr rr         LDA heroYCoordinate
000B67r 2  69 10            ADC #16
000B69r 2  8D 14 02         STA $0214
000B6Cr 2  A9 27            LDA #$27
000B6Er 2  8D 15 02         STA $0215
000B71r 2  A9 57            LDA #%01010111
000B73r 2  8D 16 02         STA $0216
000B76r 2  AD rr rr         LDA heroXCoordinate
000B79r 2  8D 17 02         STA $0217
000B7Cr 2               
000B7Cr 2  AD rr rr         LDA heroYCoordinate
000B7Fr 2  8D 18 02         STA $0218
000B82r 2  A9 04            LDA #$04
000B84r 2  8D 19 02         STA $0219
000B87r 2  A9 16            LDA #%00010110
000B89r 2  8D 1A 02         STA $021A
000B8Cr 2  AD rr rr         LDA heroXCoordinate
000B8Fr 2  8D 1B 02         STA $021B
000B92r 2  60               RTS
000B93r 2               .endproc
000B93r 2               
000B93r 1               .include "./lib/collisionOnMap.asm"
000B93r 2               .segment "ZEROPAGE"
00000Dr 2  xx              isGravity: .res 1
00000Er 2  xx              xOffset: .res 1
00000Fr 2  xx              nameTableLowByte: .res 1
000010r 2  xx              nameTableHighByte: .res 1
000011r 2  xx              collisionTmp: .res 1
000012r 2  xx              currentAdc: .res 1
000013r 2  xx              currentNameTable: .res 1
000014r 2  xx              fakeXCoordinate: .res 1
000015r 2  xx              collideDetection: .res 1 ; remove in to be
000016r 2               
000016r 2  xx              collideX: .res 1
000017r 2  xx              collideY: .res 1
000018r 2  xx              collideFlag: .res 1
000019r 2               
000019r 2  xx              collisionFirstLB: .res 1
00001Ar 2  xx              collisionFirstHB: .res 1
00001Br 2               
00001Br 2  xx              collisionSecondLB: .res 1
00001Cr 2               
00001Cr 2  xx              collisionPart: .res 1
00001Dr 2  xx              isStageEnd: .res 1
00001Er 2               
00001Er 2               .segment "RODATA"
000058r 2               
000058r 2               bit_mask:
000058r 2  80             .byt %10000000
000059r 2  40             .byt %01000000
00005Ar 2  20             .byt %00100000
00005Br 2  10             .byt %00010000
00005Cr 2  08             .byt %00001000
00005Dr 2  04             .byt %00000100
00005Er 2  02             .byt %00000010
00005Fr 2  01             .byt %00000001
000060r 2               
000060r 2               level2map1part:
000060r 2  00 00 00 00    .byt %00000000, %00000000, %00000000, %00000000 ; 4
000064r 2  00 00 00 00    .byt %00000000, %00000000, %00000000, %00000000 ; 8
000068r 2  00 00 00 00    .byt %00000000, %00000000, %00000000, %00000000 ; 02
00006Cr 2  00 00 00 00    .byt %00000000, %00000000, %00000000, %00000000 ; 06
000070r 2  00 00 00 00    .byt %00000000, %00000000, %00000000, %00000000 ; 08
000074r 2  00 00 00 00    .byt %00000000, %00000000, %00000000, %00000000
000078r 2  00 00 00 00    .byt %00000000, %00000000, %00000000, %00000000
00007Cr 2  00 00 00 00    .byt %00000000, %00000000, %00000000, %00000000
000080r 2  00 00 00 00    .byt %00000000, %00000000, %00000000, %00000000
000084r 2  00 00 00 00    .byt %00000000, %00000000, %00000000, %00000000 ; 00
000088r 2               
000088r 2  00 00 00 00    .byt %00000000, %00000000, %00000000, %00000000
00008Cr 2  00 00 00 00    .byt %00000000, %00000000, %00000000, %00000000
000090r 2  00 00 00 00    .byt %00000000, %00000000, %00000000, %00000000
000094r 2  FF 00 3F FF    .byt %11111111, %00000000, %00111111, %11111111
000098r 2  FF 80 7F FF    .byt %11111111, %10000000, %01111111, %11111111
00009Cr 2  FF C0 FF FF    .byt %11111111, %11000000, %11111111, %11111111
0000A0r 2  FF E1 FF FF    .byt %11111111, %11100001, %11111111, %11111111
0000A4r 2  FF FF FF FF    .byt %11111111, %11111111, %11111111, %11111111
0000A8r 2  FF FF FF FF    .byt %11111111, %11111111, %11111111, %11111111
0000ACr 2  FF FF FF FF    .byt %11111111, %11111111, %11111111, %11111111 ; 21
0000B0r 2               
0000B0r 2  FF FF FF FF    .byt %11111111, %11111111, %11111111, %11111111
0000B4r 2  FF FF FF FF    .byt %11111111, %11111111, %11111111, %11111111
0000B8r 2  FF FF FF FF    .byt %11111111, %11111111, %11111111, %11111111
0000BCr 2  FF FF FF FF    .byt %11111111, %11111111, %11111111, %11111111
0000C0r 2  FF FF FF FF    .byt %11111111, %11111111, %11111111, %11111111
0000C4r 2  FF FF FF FF    .byt %11111111, %11111111, %11111111, %11111111
0000C8r 2  FF FF FF FF    .byt %11111111, %11111111, %11111111, %11111111 ; 27
0000CCr 2  FF FF C7 FF    .byt %11111111, %11111111, %11000111, %11111111
0000D0r 2  FF FF 8F FF    .byt %11111111, %11111111, %10001111, %11111111
0000D4r 2  00 00 00 00    .byt %00000000, %00000000, %00000000, %00000000
0000D8r 2               
0000D8r 2               level2map2part:
0000D8r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 4
0000DCr 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 8
0000E0r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 02
0000E4r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 06
0000E8r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 08
0000ECr 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
0000F0r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
0000F4r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
0000F8r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
0000FCr 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 00
000100r 2               
000100r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
000104r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
000108r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
00010Cr 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000110r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000114r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000118r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
00011Cr 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000120r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000124r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111 ; 21
000128r 2               
000128r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
00012Cr 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000130r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000134r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000138r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
00013Cr 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000140r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111 ; 27
000144r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000148r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
00014Cr 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
000150r 2               
000150r 2               level2map3part:
000150r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 4
000154r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 8
000158r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 02
00015Cr 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 06
000160r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 08
000164r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
000168r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
00016Cr 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
000170r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
000174r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 00
000178r 2               
000178r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
00017Cr 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
000180r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
000184r 2  80 00 00 00      .byt %10000000, %00000000, %00000000, %00000000
000188r 2  C0 03 C0 00      .byt %11000000, %00000011, %11000000, %00000000
00018Cr 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000190r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000194r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000198r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
00019Cr 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111 ; 21
0001A0r 2               
0001A0r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
0001A4r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
0001A8r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
0001ACr 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
0001B0r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
0001B4r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
0001B8r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111 ; 27
0001BCr 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
0001C0r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
0001C4r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
0001C8r 2               
0001C8r 2               level2map4part:
0001C8r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 4
0001CCr 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 8
0001D0r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 02
0001D4r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 06
0001D8r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 08
0001DCr 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
0001E0r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
0001E4r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
0001E8r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
0001ECr 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000 ; 00
0001F0r 2               
0001F0r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
0001F4r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
0001F8r 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
0001FCr 2  80 00 00 00      .byt %10000000, %00000000, %00000000, %00000000
000200r 2  C0 03 C0 00      .byt %11000000, %00000011, %11000000, %00000000
000204r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000208r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
00020Cr 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000210r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000214r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111 ; 21
000218r 2               
000218r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
00021Cr 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000220r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000224r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000228r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
00022Cr 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000230r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111 ; 27
000234r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
000238r 2  FF FF FF FF      .byt %11111111, %11111111, %11111111, %11111111
00023Cr 2  00 00 00 00      .byt %00000000, %00000000, %00000000, %00000000
000240r 2               
000240r 2               collisionMap1Low:
000240r 2  rr rr rr rr    .byt <level2map1part, <level2map2part, <level2map3part, <level2map4part
000244r 2               collisionMap1High:
000244r 2  rr rr rr rr    .byt >level2map1part, >level2map2part, >level2map3part, >level2map4part
000248r 2               
000248r 2               .segment "CODE"
000B93r 2                   COLLIDE_WATER =     %00000001
000B93r 2                   COLLIDE_PLACE =     %00000011
000B93r 2                   COLLIDE_BORDER =    %00000010
000B93r 2               
000B93r 2               .proc initVar
000B93r 2  60               rts
000B94r 2               .endproc
000B94r 2               
000B94r 2               .proc calculateCollisionMap
000B94r 2  AD rr rr         LDA scrollPosition
000B97r 2  29 07            AND #%00000111
000B99r 2  F0 03            BEQ skipCalculate
000B9Br 2               
000B9Br 2  EE rr rr         INC offsetColumn
000B9Er 2               
000B9Er 2                 skipCalculate:
000B9Er 2  60               RTS
000B9Fr 2               .endproc
000B9Fr 2               
000B9Fr 2               .proc calcHeroPosition
000B9Fr 2  AD rr rr         LDA scrollPosition
000BA2r 2  18               CLC
000BA3r 2  6D rr rr         ADC heroXCoordinate
000BA6r 2  C9 FF            CMP #$FF
000BA8r 2  F0 01            BEQ collisionPartIncrement
000BAAr 2  60               RTS
000BABr 2               collisionPartIncrement:
000BABr 2  A5 rr            LDA isStageEnd
000BADr 2  C9 01            CMP #01
000BAFr 2  F0 02            BEQ return
000BB1r 2  E6 rr            INC collisionPart
000BB3r 2               return:
000BB3r 2  60               RTS
000BB4r 2               .endproc
000BB4r 2               
000BB4r 2               .proc getCurrentCollisionMap
000BB4r 2  A4 rr            LDY collisionPart
000BB6r 2  B9 rr rr         LDA collisionMap1Low, y
000BB9r 2  85 rr            STA collisionFirstLB
000BBBr 2  B9 rr rr         LDA collisionMap1High, y
000BBEr 2  85 rr            STA collisionFirstHB
000BC0r 2               
000BC0r 2  60               RTS
000BC1r 2               .endproc
000BC1r 2               
000BC1r 2               .proc collideNo
000BC1r 2  A9 01            LDA #01
000BC3r 2  85 rr            STA isGravity
000BC5r 2               ;    inc heroYCoordinate
000BC5r 2               ;    INC heroYCoordinate
000BC5r 2  60               RTS
000BC6r 2               .endproc
000BC6r 2               
000BC6r 2               .proc collideYes
000BC6r 2  A9 00            LDA #00
000BC8r 2  85 rr            STA isGravity
000BCAr 2  85 rr            STA jumpHeight
000BCCr 2  85 rr            STA isJump
000BCEr 2  60               RTS
000BCFr 2               .endproc
000BCFr 2               
000BCFr 2               .proc collisionOnMap
000BCFr 2  20 rr rr         JSR calcHeroPosition
000BD2r 2  20 rr rr         JSR getCurrentCollisionMap
000BD5r 2               
000BD5r 2  A5 rr            LDA collideX
000BD7r 2  4A               LSR
000BD8r 2  4A               LSR
000BD9r 2  4A               LSR
000BDAr 2  4A               LSR
000BDBr 2  4A               LSR
000BDCr 2  4A               LSR
000BDDr 2  8D rr rr         STA zacumulator
000BE0r 2               
000BE0r 2  A5 rr            LDA collideY
000BE2r 2  4A               LSR
000BE3r 2  4A               LSR
000BE4r 2  4A               LSR
000BE5r 2  0A               ASL
000BE6r 2  0A               ASL
000BE7r 2  18               CLC
000BE8r 2  6D rr rr         ADC zacumulator
000BEBr 2  A8               TAY
000BECr 2               
000BECr 2  A5 rr            LDA collideX
000BEEr 2  4A               LSR
000BEFr 2  4A               LSR
000BF0r 2  4A               LSR
000BF1r 2  29 07            AND #7
000BF3r 2  AA               TAX
000BF4r 2               
000BF4r 2  B1 rr            LDA (collisionFirstLB), y
000BF6r 2  3D rr rr         AND bit_mask, x
000BF9r 2  D0 07            BNE collisionNo
000BFBr 2  F0 00            BEQ collisionYes ; if Z flag is set after and 0
000BFDr 2               collisionYes:
000BFDr 2  A9 00            LDA #%00000000
000BFFr 2  85 rr            STA collideFlag
000C01r 2               
000C01r 2  60               RTS
000C02r 2               collisionNo:
000C02r 2  A9 03            LDA #%00000011
000C04r 2  85 rr            STA collideFlag
000C06r 2               
000C06r 2  60               RTS
000C07r 2               .endproc
000C07r 2               
000C07r 2               .proc collisionOnMapLeft
000C07r 2  AD rr rr         LDA heroYCoordinate
000C0Ar 2  18               CLC
000C0Br 2  69 11            ADC #17
000C0Dr 2  85 rr            STA collideY
000C0Fr 2               
000C0Fr 2  AD rr rr         LDA heroXCoordinate
000C12r 2  48               PHA
000C13r 2  69 01            ADC #1
000C15r 2  CD rr rr         CMP scrollPosition
000C18r 2  F0 0B            BEQ leftCollision
000C1Ar 2  68               PLA
000C1Br 2  6D rr rr         ADC scrollPosition
000C1Er 2  E9 01            SBC #1
000C20r 2  85 rr            STA collideX
000C22r 2  4C rr rr         JMP collisionOnMapLabel
000C25r 2               leftCollision:
000C25r 2  A9 00            LDA #$00
000C27r 2  85 rr            STA collideFlag
000C29r 2               collisionOnMapLabel:
000C29r 2  20 rr rr         JSR collisionOnMap
000C2Cr 2  60               RTS
000C2Dr 2               .endproc
000C2Dr 2               
000C2Dr 2               .proc collisionOnMapRight
000C2Dr 2  AD rr rr         LDA heroYCoordinate
000C30r 2  18               CLC
000C31r 2  69 11            ADC #17
000C33r 2  85 rr            STA collideY
000C35r 2               
000C35r 2  AD rr rr         LDA heroXCoordinate
000C38r 2  18               CLC
000C39r 2  6D rr rr         ADC scrollPosition
000C3Cr 2  69 01            ADC #1
000C3Er 2  85 rr            STA collideX
000C40r 2               
000C40r 2  20 rr rr         JSR collisionOnMap
000C43r 2  60               RTS
000C44r 2               .endproc
000C44r 2               
000C44r 2               .proc collisionOnMapUp
000C44r 2  AD rr rr         LDA heroYCoordinate
000C47r 2  18               CLC
000C48r 2  69 10            ADC #16
000C4Ar 2  85 rr            STA collideY
000C4Cr 2               
000C4Cr 2  AD rr rr         LDA heroXCoordinate
000C4Fr 2  18               CLC
000C50r 2  6D rr rr         ADC scrollPosition
000C53r 2  85 rr            STA collideX
000C55r 2               
000C55r 2  20 rr rr         JSR collisionOnMap
000C58r 2  60               RTS
000C59r 2               .endproc
000C59r 2               
000C59r 2               .proc collisionOnMapDown
000C59r 2  AD rr rr         LDA heroYCoordinate
000C5Cr 2  18               CLC
000C5Dr 2  69 11            ADC #17
000C5Fr 2  85 rr            STA collideY
000C61r 2               
000C61r 2  AD rr rr         LDA heroXCoordinate
000C64r 2  18               CLC
000C65r 2  6D rr rr         ADC scrollPosition
000C68r 2  85 rr            STA collideX
000C6Ar 2               
000C6Ar 2  20 rr rr         JSR collisionOnMap
000C6Dr 2  60               RTS
000C6Er 2               .endproc
000C6Er 2               
000C6Er 1               .include "./lib/joypad.asm"
000C6Er 2               
000C6Er 2               .segment "RODATA"
000248r 2               
000248r 2               
000248r 2               .segment "CODE"
000C6Er 2               
000C6Er 2               	BUTTON_A      = 1 << 7
000C6Er 2               	BUTTON_B      = 1 << 6
000C6Er 2               	BUTTON_SELECT = 1 << 5
000C6Er 2               	BUTTON_START  = 1 << 4
000C6Er 2               	BUTTON_UP     = 1 << 3
000C6Er 2               	BUTTON_DOWN   = 1 << 2
000C6Er 2               	BUTTON_LEFT   = 1 << 1
000C6Er 2               	BUTTON_RIGHT  = 1 << 0
000C6Er 2               
000C6Er 2               .proc readJoyPad
000C6Er 2                 readJoyPad:
000C6Er 2  A2 00            LDX  #$00
000C70r 2  A9 01            LDA  #$01
000C72r 2  8D 16 40         STA  $4016
000C75r 2  A9 00            LDA  #$00
000C77r 2  8D 16 40         STA  $4016
000C7Ar 2               
000C7Ar 2  A0 08            LDY #$08 ; счетчик для цикла
000C7Cr 2                 readJoyCycle:
000C7Cr 2  BD 16 40         LDA $4016,x
000C7Fr 2  4A               LSR
000C80r 2  7E rr rr         ROR joyState,x
000C83r 2  88               DEY
000C84r 2  D0 F6            BNE readJoyCycle
000C86r 2               
000C86r 2  60               RTS
000C87r 2               .endproc
000C87r 2               
000C87r 2               
000C87r 1               .include "./lib/apu.asm"
000C87r 2               
000C87r 2               .segment "RODATA"
000248r 2               regs:
000248r 2  30 08 00 00          .byt $30,$08,$00,$00
00024Cr 2  30 08 00 00          .byt $30,$08,$00,$00
000250r 2  80 00 00 00          .byt $80,$00,$00,$00
000254r 2  30 00 00 00          .byt $30,$00,$00,$00
000258r 2  00 00 00 00          .byt $00,$00,$00,$00
00025Cr 2               
00025Cr 2               periodTableLo:
00025Cr 2  F1 7F 13 AD    .byt $f1,$7f,$13,$ad,$4d,$f3,$9d,$4c,$00,$b8,$74,$34
000260r 2  4D F3 9D 4C  
000264r 2  00 B8 74 34  
000268r 2  F8 BF 89 56    .byt $f8,$bf,$89,$56,$26,$f9,$ce,$a6,$80,$5c,$3a,$1a
00026Cr 2  26 F9 CE A6  
000270r 2  80 5C 3A 1A  
000274r 2  FB DF C4 AB    .byt $fb,$df,$c4,$ab,$93,$7c,$67,$52,$3f,$2d,$1c,$0c
000278r 2  93 7C 67 52  
00027Cr 2  3F 2D 1C 0C  
000280r 2  FD EF E1 D5    .byt $fd,$ef,$e1,$d5,$c9,$bd,$b3,$a9,$9f,$96,$8e,$86
000284r 2  C9 BD B3 A9  
000288r 2  9F 96 8E 86  
00028Cr 2  7E 77 70 6A    .byt $7e,$77,$70,$6a,$64,$5e,$59,$54,$4f,$4b,$46,$42
000290r 2  64 5E 59 54  
000294r 2  4F 4B 46 42  
000298r 2  3F 3B 38 34    .byt $3f,$3b,$38,$34,$31,$2f,$2c,$29,$27,$25,$23,$21
00029Cr 2  31 2F 2C 29  
0002A0r 2  27 25 23 21  
0002A4r 2  1F 1D 1B 1A    .byt $1f,$1d,$1b,$1a,$18,$17,$15,$14
0002A8r 2  18 17 15 14  
0002ACr 2               
0002ACr 2               periodTableHi:
0002ACr 2  07 07 07 06    .byt $07,$07,$07,$06,$06,$05,$05,$05,$05,$04,$04,$04
0002B0r 2  06 05 05 05  
0002B4r 2  05 04 04 04  
0002B8r 2  03 03 03 03    .byt $03,$03,$03,$03,$03,$02,$02,$02,$02,$02,$02,$02
0002BCr 2  03 02 02 02  
0002C0r 2  02 02 02 02  
0002C4r 2  01 01 01 01    .byt $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01
0002C8r 2  01 01 01 01  
0002CCr 2  01 01 01 01  
0002D0r 2  00 00 00 00    .byt $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
0002D4r 2  00 00 00 00  
0002D8r 2  00 00 00 00  
0002DCr 2  00 00 00 00    .byt $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
0002E0r 2  00 00 00 00  
0002E4r 2  00 00 00 00  
0002E8r 2  00 00 00 00    .byt $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
0002ECr 2  00 00 00 00  
0002F0r 2  00 00 00 00  
0002F4r 2  00 00 00 00    .byt $00,$00,$00,$00,$00,$00,$00,$00
0002F8r 2  00 00 00 00  
0002FCr 2               
0002FCr 2               .segment "CODE"
000C87r 2               
000C87r 2               .proc init_apu
000C87r 2                       ; Init $4000-4013
000C87r 2  A0 13                ldy #$13
000C89r 2                 loop:
000C89r 2  B9 rr rr             lda regs,y
000C8Cr 2  99 00 40             sta $4000,y
000C8Fr 2  88                   dey
000C90r 2  10 F7                bpl loop
000C92r 2               
000C92r 2                       ; We have to skip over $4014 (OAMDMA)
000C92r 2  A9 0F                lda #$0f
000C94r 2  8D 15 40             sta $4015
000C97r 2  A9 40                lda #$40
000C99r 2  8D 17 40             sta $4017
000C9Cr 2               
000C9Cr 2  60                   rts
000C9Dr 2                 .endproc
000C9Dr 2               
000C9Dr 2               .proc playMusic
000C9Dr 2  68              pla
000C9Er 2  AA              tax
000C9Fr 2  BD rr rr        lda periodTableHi,x
000CA2r 2  4A              lsr a
000CA3r 2  8D 0B 40        sta $400B
000CA6r 2               
000CA6r 2  BD rr rr        lda periodTableLo,x
000CA9r 2  6A              ror a
000CAAr 2  8D 0A 40        sta $400A
000CADr 2  E8              inx
000CAEr 2  8A              txa
000CAFr 2  C9 14           cmp #20
000CB1r 2  F0 02           beq resetX
000CB3r 2  D0 03           bne resetDone
000CB5r 2                  resetX:
000CB5r 2  A2 00           ldx #00
000CB7r 2  8A              txa
000CB8r 2                  resetDone:
000CB8r 2  48              pha
000CB9r 2               
000CB9r 2  60              rts
000CBAr 2               .endproc
000CBAr 2               
000CBAr 1               .include "./lib/stages/stageOne.asm"
000CBAr 2               .segment "RODATA"
0002FCr 2               map_level_1:
0002FCr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 1
000300r 2  11 11 11 11  
000304r 2  11 11 11 11  
00031Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 1
000320r 2  11 11 11 11  
000324r 2  11 11 11 11  
00033Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $03, $04, $05, $06, $11, $11, $11, $11 ; 2
000340r 2  11 11 11 11  
000344r 2  11 11 11 11  
00035Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $13, $14, $15, $16, $11, $11, $11, $11 ; 3
000360r 2  11 11 11 11  
000364r 2  11 11 11 11  
00037Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $03, $04, $05, $06, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 4
000380r 2  03 04 05 06  
000384r 2  11 11 11 11  
00039Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $13, $14, $15, $16, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 5
0003A0r 2  13 14 15 16  
0003A4r 2  11 11 11 11  
0003BCr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 6
0003C0r 2  11 11 11 11  
0003C4r 2  11 11 11 11  
0003DCr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 7
0003E0r 2  11 11 11 11  
0003E4r 2  11 11 11 11  
0003FCr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 8
000400r 2  11 11 11 11  
000404r 2  11 11 11 11  
00041Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 9
000420r 2  11 11 11 11  
000424r 2  11 11 11 11  
00043Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $03, $04, $05, $06, $11, $11,  $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 10
000440r 2  11 11 11 11  
000444r 2  11 11 11 11  
00045Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $13, $14, $15, $16, $11, $11,  $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 11
000460r 2  11 11 11 11  
000464r 2  11 11 11 11  
00047Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $20, $21, $11, $11, $11, $11, $11, $11, $11 ; 12
000480r 2  11 11 11 11  
000484r 2  11 11 11 11  
00049Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $30, $41, $11, $11, $11, $11, $11, $11, $11 ; 13
0004A0r 2  11 11 11 11  
0004A4r 2  11 11 11 11  
0004BCr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $30, $41, $11, $11, $11, $11, $11, $11, $11 ; 14
0004C0r 2  11 11 11 11  
0004C4r 2  11 11 11 11  
0004DCr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $30, $41, $11, $11, $11, $11, $11, $11, $11 ; 15
0004E0r 2  11 11 11 11  
0004E4r 2  11 11 11 11  
0004FCr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $30, $41, $11, $11, $11, $11, $11, $11, $11 ; 16
000500r 2  11 11 11 11  
000504r 2  11 11 11 11  
00051Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $30, $41, $11, $11, $11, $11, $11, $11, $11 ; 17
000520r 2  11 11 11 11  
000524r 2  11 11 11 11  
00053Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $40, $41, $11, $11, $11, $11, $11, $11, $11 ; 18
000540r 2  11 11 11 11  
000544r 2  11 11 11 11  
00055Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $20, $21, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $40, $41, $11, $11, $11, $11, $11, $11, $11 ; 19
000560r 2  20 21 11 11  
000564r 2  11 11 11 11  
00057Cr 2  11 11 11 11    .byt $11, $11, $11, $11, $40, $41, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $20, $21, $11, $11, $11, $11, $40, $41, $11, $11, $11, $11, $11, $11, $11 ; 20
000580r 2  40 41 11 11  
000584r 2  11 11 11 11  
00059Cr 2  11 20 21 11    .byt $11, $20, $21, $11, $40, $41, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $40, $41, $11, $11, $11, $11, $40, $41, $11, $11, $11, $11, $11, $11, $11 ; 21
0005A0r 2  40 41 11 11  
0005A4r 2  11 11 11 11  
0005BCr 2  11 30 31 11    .byt $11, $30, $31, $11, $40, $41, $11, $11, $11, $11, $11, $11, $11, $11, $11, $20, $21, $30, $31, $11, $11, $11, $11, $40, $41, $11, $11, $11, $11, $11, $11, $11 ; 22
0005C0r 2  40 41 11 11  
0005C4r 2  11 11 11 11  
0005DCr 2  11 40 41 11    .byt $11, $40, $41, $11, $40, $41, $20, $21, $11, $11, $11, $11, $11, $11, $11, $30, $31, $30, $31, $11, $11, $20, $21, $40, $41, $11, $11, $11, $11, $11, $11, $11 ; 23
0005E0r 2  40 41 20 21  
0005E4r 2  11 11 11 11  
0005FCr 2  11 40 41 11    .byt $11, $40, $41, $11, $40, $41, $40, $41, $20, $21, $11, $11, $11, $11, $11, $40, $41, $30, $31, $20, $21, $30, $31, $40, $41, $11, $11, $11, $11, $11, $11, $11 ; 24
000600r 2  40 41 40 41  
000604r 2  20 21 11 11  
00061Cr 2  11 40 41 11    .byt $11, $40, $41, $11, $40, $41, $40, $41, $30, $31, $11, $11, $11, $11, $11, $40, $41, $30, $31, $30, $31, $30, $31, $40, $41, $11, $11, $11, $11, $11, $11, $11 ; 25
000620r 2  40 41 40 41  
000624r 2  30 31 11 11  
00063Cr 2  02 02 02 02    .byt $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $11, $11, $11, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $11, $02, $02, $02, $02 ; 26
000640r 2  02 02 02 02  
000644r 2  02 02 02 11  
00065Cr 2  01 01 01 01    .byt $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $11, $11, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $01, $01, $01, $01 ; 27
000660r 2  01 01 01 01  
000664r 2  01 01 01 11  
00067Cr 2  01 01 01 01    .byt $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $11, $11, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $01, $01, $01, $01 ; 28
000680r 2  01 01 01 01  
000684r 2  01 01 01 11  
00069Cr 2  01 01 01 01    .byt $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $11, $11, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $01, $01, $01, $01 ; 29
0006A0r 2  01 01 01 01  
0006A4r 2  01 01 01 11  
0006BCr 2  01 01 01 01    .byt $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $01, $01, $01, $01 ; 30
0006C0r 2  01 01 01 01  
0006C4r 2  01 01 01 01  
0006DCr 2  01 01 01 01    .byt $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $01, $01, $01, $01 ; 31
0006E0r 2  01 01 01 01  
0006E4r 2  01 01 01 01  
0006FCr 2  01 01 01 01    .byt $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $11, $01, $01, $01 ; 32
000700r 2  01 01 01 01  
000704r 2  01 01 01 01  
00071Br 2               
00071Br 2               
00071Br 2               map_level_1_2:
00071Br 2               
00071Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00071Fr 2  11 11 11 11  
000723r 2  11 11 11 11  
00073Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00073Fr 2  11 11 11 11  
000743r 2  11 11 11 11  
00075Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
00075Fr 2  11 11 11 11  
000763r 2  11 11 11 11  
00077Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
00077Fr 2  11 11 11 11  
000783r 2  11 11 11 11  
00079Br 2  11 11 11 11    .byt $11, $11, $11, $11, $03, $13, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00079Fr 2  03 13 11 11  
0007A3r 2  11 11 11 11  
0007BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $04, $14, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0007BFr 2  04 14 11 11  
0007C3r 2  11 11 11 11  
0007DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $05, $15, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0007DFr 2  05 15 11 11  
0007E3r 2  11 11 11 11  
0007FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $06, $16, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0007FFr 2  06 16 11 11  
000803r 2  11 11 11 11  
00081Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $01, $01, $01, $01, $01, $01
00081Fr 2  11 11 11 11  
000823r 2  11 11 11 11  
00083Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $01, $01, $01, $01, $01, $01
00083Fr 2  11 11 11 11  
000843r 2  11 11 11 11  
00085Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $01, $01, $01, $01, $01, $01
00085Fr 2  11 11 11 11  
000863r 2  11 11 11 11  
00087Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00087Fr 2  11 11 11 11  
000883r 2  11 11 11 11  
00089Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00089Fr 2  11 11 11 11  
0008A3r 2  11 11 11 11  
0008BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0008BFr 2  11 11 11 11  
0008C3r 2  11 11 11 11  
0008DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0008DFr 2  11 11 11 11  
0008E3r 2  11 11 11 11  
0008FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0008FFr 2  11 11 11 11  
000903r 2  11 11 11 11  
00091Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00091Fr 2  11 11 11 11  
000923r 2  11 11 11 11  
00093Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
00093Fr 2  11 11 11 11  
000943r 2  11 11 11 11  
00095Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $02, $01, $01, $01, $01, $01, $01
00095Fr 2  11 11 11 11  
000963r 2  11 11 11 11  
00097Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $02, $01, $01, $01, $01, $01, $01
00097Fr 2  11 11 11 11  
000983r 2  11 11 11 11  
00099Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
00099Fr 2  11 11 11 11  
0009A3r 2  11 11 11 11  
0009BBr 2  11 11 03 13    .byt $11, $11, $03, $13, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0009BFr 2  11 11 11 11  
0009C3r 2  11 11 11 11  
0009DBr 2  11 11 04 14    .byt $11, $11, $04, $14, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0009DFr 2  11 11 11 11  
0009E3r 2  11 11 11 11  
0009FBr 2  11 11 05 15    .byt $11, $11, $05, $15, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0009FFr 2  11 11 11 11  
000A03r 2  11 11 11 11  
000A1Br 2  11 11 06 16    .byt $11, $11, $06, $16, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
000A1Fr 2  11 11 11 11  
000A23r 2  11 11 11 11  
000A3Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000A3Fr 2  11 11 11 11  
000A43r 2  11 11 11 11  
000A5Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
000A5Fr 2  11 11 11 11  
000A63r 2  11 11 11 11  
000A7Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000A7Fr 2  11 11 11 11  
000A83r 2  11 11 11 11  
000A9Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
000A9Fr 2  11 11 11 11  
000AA3r 2  11 11 11 11  
000ABBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000ABFr 2  11 11 11 11  
000AC3r 2  11 11 11 11  
000ADBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000ADFr 2  11 11 11 11  
000AE3r 2  11 11 11 11  
000AFBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000AFFr 2  11 11 11 11  
000B03r 2  11 11 11 11  
000B1Br 2               
000B1Br 2               map_level_1_page_1:
000B1Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000B1Fr 2  11 11 11 11  
000B23r 2  11 11 11 11  
000B3Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000B3Fr 2  11 11 11 11  
000B43r 2  11 11 11 11  
000B5Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
000B5Fr 2  11 11 11 11  
000B63r 2  11 11 11 11  
000B7Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
000B7Fr 2  11 11 11 11  
000B83r 2  11 11 11 11  
000B9Br 2  11 11 11 11    .byt $11, $11, $11, $11, $03, $13, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000B9Fr 2  03 13 11 11  
000BA3r 2  11 11 11 11  
000BBBr 2  11 11 11 11    .byt $11, $11, $11, $11, $04, $14, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000BBFr 2  04 14 11 11  
000BC3r 2  11 11 11 11  
000BDBr 2  11 11 11 11    .byt $11, $11, $11, $11, $05, $15, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000BDFr 2  05 15 11 11  
000BE3r 2  11 11 11 11  
000BFBr 2  11 11 11 11    .byt $11, $11, $11, $11, $06, $16, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000BFFr 2  06 16 11 11  
000C03r 2  11 11 11 11  
000C1Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000C1Fr 2  11 11 11 11  
000C23r 2  11 11 11 11  
000C3Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000C3Fr 2  11 11 11 11  
000C43r 2  11 11 11 11  
000C5Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000C5Fr 2  11 11 11 11  
000C63r 2  11 11 11 11  
000C7Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000C7Fr 2  11 11 11 11  
000C83r 2  11 11 11 11  
000C9Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000C9Fr 2  11 11 11 11  
000CA3r 2  11 11 11 11  
000CBBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000CBFr 2  11 11 11 11  
000CC3r 2  11 11 11 11  
000CDBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000CDFr 2  11 11 11 11  
000CE3r 2  11 11 11 11  
000CFBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000CFFr 2  11 11 11 11  
000D03r 2  11 11 11 11  
000D1Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000D1Fr 2  11 11 11 11  
000D23r 2  11 11 11 11  
000D3Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
000D3Fr 2  11 11 11 11  
000D43r 2  11 11 11 11  
000D5Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
000D5Fr 2  11 11 11 11  
000D63r 2  11 11 11 11  
000D7Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
000D7Fr 2  11 11 11 11  
000D83r 2  11 11 11 11  
000D9Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
000D9Fr 2  11 11 11 11  
000DA3r 2  11 11 11 11  
000DBBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000DBFr 2  11 11 11 11  
000DC3r 2  11 11 11 11  
000DDBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000DDFr 2  11 11 11 11  
000DE3r 2  11 11 11 11  
000DFBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000DFFr 2  11 11 11 11  
000E03r 2  11 11 11 11  
000E1Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000E1Fr 2  11 11 11 11  
000E23r 2  11 11 11 11  
000E3Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000E3Fr 2  11 11 11 11  
000E43r 2  11 11 11 11  
000E5Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000E5Fr 2  11 11 11 11  
000E63r 2  11 11 11 11  
000E7Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
000E7Fr 2  11 11 11 11  
000E83r 2  11 11 11 11  
000E9Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000E9Fr 2  11 11 11 11  
000EA3r 2  11 11 11 11  
000EBBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000EBFr 2  11 11 11 11  
000EC3r 2  11 11 11 11  
000EDBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000EDFr 2  11 11 11 11  
000EE3r 2  11 11 11 11  
000EFBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000EFFr 2  11 11 11 11  
000F03r 2  11 11 11 11  
000F1Br 2               
000F1Br 2               map_level_1_page_2:
000F1Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000F1Fr 2  11 11 11 11  
000F23r 2  11 11 11 11  
000F3Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000F3Fr 2  11 11 11 11  
000F43r 2  11 11 11 11  
000F5Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
000F5Fr 2  11 11 11 11  
000F63r 2  11 11 11 11  
000F7Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $11, $11, $11
000F7Fr 2  11 11 11 11  
000F83r 2  11 11 11 11  
000F9Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000F9Fr 2  11 11 11 11  
000FA3r 2  11 11 11 11  
000FBBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000FBFr 2  11 11 11 11  
000FC3r 2  11 11 11 11  
000FDBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000FDFr 2  11 11 11 11  
000FE3r 2  11 11 11 11  
000FFBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
000FFFr 2  11 11 11 11  
001003r 2  11 11 11 11  
00101Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00101Fr 2  11 11 11 11  
001023r 2  11 11 11 11  
00103Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00103Fr 2  11 11 11 11  
001043r 2  11 11 11 11  
00105Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00105Fr 2  11 11 11 11  
001063r 2  11 11 11 11  
00107Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00107Fr 2  11 11 11 11  
001083r 2  11 11 11 11  
00109Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00109Fr 2  11 11 11 11  
0010A3r 2  11 11 11 11  
0010BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0010BFr 2  11 11 11 11  
0010C3r 2  11 11 11 11  
0010DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0010DFr 2  11 11 11 11  
0010E3r 2  11 11 11 11  
0010FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0010FFr 2  11 11 11 11  
001103r 2  11 11 11 11  
00111Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00111Fr 2  11 11 11 11  
001123r 2  11 11 11 11  
00113Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
00113Fr 2  11 11 11 11  
001143r 2  11 11 11 11  
00115Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $02, $01, $01, $01, $01, $01, $01
00115Fr 2  11 11 11 11  
001163r 2  11 11 11 11  
00117Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $02, $02, $02, $02, $01, $01, $01, $01, $01, $01
00117Fr 2  11 11 11 11  
001183r 2  11 11 11 11  
00119Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $02, $01, $01, $01, $01, $01, $01
00119Fr 2  11 11 11 11  
0011A3r 2  11 11 11 11  
0011BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0011BFr 2  11 11 11 11  
0011C3r 2  11 11 11 11  
0011DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0011DFr 2  11 11 11 11  
0011E3r 2  11 11 11 11  
0011FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0011FFr 2  11 11 11 11  
001203r 2  11 11 11 11  
00121Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00121Fr 2  11 11 11 11  
001223r 2  11 11 11 11  
00123Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00123Fr 2  11 11 11 11  
001243r 2  11 11 11 11  
00125Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02, $01, $01, $01, $01, $01, $01
00125Fr 2  11 11 11 11  
001263r 2  11 11 11 11  
00127Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00127Fr 2  11 11 11 11  
001283r 2  11 11 11 11  
00129Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00129Fr 2  11 11 11 11  
0012A3r 2  11 11 11 11  
0012BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0012BFr 2  11 11 11 11  
0012C3r 2  11 11 11 11  
0012DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0012DFr 2  11 11 11 11  
0012E3r 2  11 11 11 11  
0012FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0012FFr 2  11 11 11 11  
001303r 2  11 11 11 11  
00131Br 2               
00131Br 2               map_level_1_page_3:
00131Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00131Fr 2  11 11 11 11  
001323r 2  11 11 11 11  
00133Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00133Fr 2  11 11 11 11  
001343r 2  11 11 11 11  
00135Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
00135Fr 2  11 11 11 11  
001363r 2  11 11 11 11  
00137Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
00137Fr 2  11 11 11 11  
001383r 2  11 11 11 11  
00139Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00139Fr 2  11 11 11 11  
0013A3r 2  11 11 11 11  
0013BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0013BFr 2  11 11 11 11  
0013C3r 2  11 11 11 11  
0013DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0013DFr 2  11 11 11 11  
0013E3r 2  11 11 11 11  
0013FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0013FFr 2  11 11 11 11  
001403r 2  11 11 11 11  
00141Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00141Fr 2  11 11 11 11  
001423r 2  11 11 11 11  
00143Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00143Fr 2  11 11 11 11  
001443r 2  11 11 11 11  
00145Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00145Fr 2  11 11 11 11  
001463r 2  11 11 11 11  
00147Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $11, $11, $11
00147Fr 2  11 11 11 11  
001483r 2  11 11 11 11  
00149Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00149Fr 2  11 11 11 11  
0014A3r 2  11 11 11 11  
0014BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0014BFr 2  11 11 11 11  
0014C3r 2  11 11 11 11  
0014DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0014DFr 2  11 11 11 11  
0014E3r 2  11 11 11 11  
0014FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0014FFr 2  11 11 11 11  
001503r 2  11 11 11 11  
00151Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00151Fr 2  11 11 11 11  
001523r 2  11 11 11 11  
00153Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $11, $11, $01, $01, $01, $01
00153Fr 2  11 11 11 11  
001543r 2  11 11 11 11  
00155Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $11, $11, $01, $01, $01, $01
00155Fr 2  11 11 11 11  
001563r 2  11 11 11 11  
00157Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
00157Fr 2  11 11 11 11  
001583r 2  11 11 11 11  
00159Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $02, $02, $01, $01, $01, $01, $01, $01
00159Fr 2  11 11 11 11  
0015A3r 2  11 11 11 11  
0015BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0015BFr 2  11 11 11 11  
0015C3r 2  11 11 11 11  
0015DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0015DFr 2  11 11 11 11  
0015E3r 2  11 11 11 11  
0015FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0015FFr 2  11 11 11 11  
001603r 2  11 11 11 11  
00161Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00161Fr 2  11 11 11 11  
001623r 2  11 11 11 11  
00163Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00163Fr 2  11 11 11 11  
001643r 2  11 11 11 11  
00165Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11
00165Fr 2  11 11 11 11  
001663r 2  11 11 11 11  
00167Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00167Fr 2  11 11 11 11  
001683r 2  11 11 11 11  
00169Br 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
00169Fr 2  11 11 11 11  
0016A3r 2  11 11 11 11  
0016BBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0016BFr 2  11 11 11 11  
0016C3r 2  11 11 11 11  
0016DBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0016DFr 2  11 11 11 11  
0016E3r 2  11 11 11 11  
0016FBr 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $02, $01, $01, $01, $01, $01, $01
0016FFr 2  11 11 11 11  
001703r 2  11 11 11 11  
00171Br 2               
00171Br 2               
00171Br 2               attributeTableLevel1Page1:
00171Br 2                   ;   1    2    3    4    5    6    7    8
00171Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $FF, $00 ; !
00171Fr 2  00 00 FF 00  
001723r 2  00 FF 00 00    .byt $00, $FF, $00, $00, $00, $00, $00, $00 ; 2
001727r 2  00 00 00 00  
00172Br 2  00 00 00 FF    .byt $00, $00, $00, $FF, $00, $00, $00, $00 ; 3
00172Fr 2  00 00 00 00  
001733r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $55, $55, $00 ; 4
001737r 2  00 55 55 00  
00173Br 2  00 55 55 00    .byt $00, $55, $55, $00, $00, $55, $55, $00 ; 5
00173Fr 2  00 55 55 00  
001743r 2  55 55 55 55    .byt $55, $55, $55, $55, $55, $55, $55, $00 ; 6
001747r 2  55 55 55 00  
00174Br 2  A5 A5 A5 A5    .byt $A5, $A5, $A5, $A5, $A5, $A5, $A5, $AA ; 8
00174Fr 2  A5 A5 A5 AA  
001753r 2  AA AA AA AA    .byt $AA, $AA, $AA, $AA, $AA, $AA, $AA, $AA ; 8
001757r 2  AA AA AA AA  
00175Br 2               
00175Br 2               attributeTableLevel1Page2:
00175Br 2                   ;   1    2    3    4    5    6    7    8
00175Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; !
00175Fr 2  00 00 AA AA  
001763r 2  00 FF 00 00    .byt $00, $FF, $00, $00, $00, $00, $AA, $AA ; 2
001767r 2  00 00 AA AA  
00176Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; 3
00176Fr 2  00 00 AA AA  
001773r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; 4
001777r 2  00 00 AA AA  
00177Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $AA, $AA, $AA ; 5
00177Fr 2  00 AA AA AA  
001783r 2  FF 00 00 00    .byt $FF, $00, $00, $00, $00, $AA, $AA, $AA ; 6
001787r 2  00 AA AA AA  
00178Br 2  FF 00 00 00    .byt $FF, $00, $00, $00, $00, $00, $AA, $AA ; 8
00178Fr 2  00 00 AA AA  
001793r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; 8
001797r 2  00 00 AA AA  
00179Br 2               
00179Br 2               attributeTableLevel1Page3:
00179Br 2                   ;   1    2    3    4    5    6    7    8
00179Br 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; !
00179Fr 2  00 00 AA AA  
0017A3r 2  00 FF 00 00    .byt $00, $FF, $00, $00, $00, $00, $AA, $AA ; 2
0017A7r 2  00 00 AA AA  
0017ABr 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; 3
0017AFr 2  00 00 AA AA  
0017B3r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; 4
0017B7r 2  00 00 AA AA  
0017BBr 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $AA, $AA, $AA ; 5
0017BFr 2  00 AA AA AA  
0017C3r 2  FF 00 00 00    .byt $FF, $00, $00, $00, $00, $AA, $AA, $AA ; 6
0017C7r 2  00 AA AA AA  
0017CBr 2  FF 00 00 00    .byt $FF, $00, $00, $00, $00, $00, $AA, $AA ; 8
0017CFr 2  00 00 AA AA  
0017D3r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $AA, $AA ; 8
0017D7r 2  00 00 AA AA  
0017DBr 2               
0017DBr 2               
0017DBr 2               .segment "CODE"
000CBAr 2               
000CBAr 2               .proc screenFactory
000CBAr 2               
000CBAr 2  AD rr rr         LDA scrollPosition
000CBDr 2  C9 FD            CMP #$FD
000CBFr 2  F0 02            BEQ incrementScreenCount
000CC1r 2  D0 06            BNE incrementScreenDone
000CC3r 2               
000CC3r 2                 incrementScreenCount:
000CC3r 2  EE rr rr         INC screenCount
000CC6r 2  4C rr rr         JMP incrementScreenDone
000CC9r 2               
000CC9r 2                 incrementScreenDone:
000CC9r 2               
000CC9r 2                 resetScreens:
000CC9r 2               
000CC9r 2                 loadScreens:
000CC9r 2  AD rr rr         LDA screenCount
000CCCr 2  C9 00            CMP #00
000CCEr 2  F0 10            BEQ loadScreen1
000CD0r 2  C9 01            CMP #01
000CD2r 2  F0 23            BEQ loadScreen2
000CD4r 2  C9 02            CMP #02
000CD6r 2  F0 36            BEQ loadScreen3
000CD8r 2  C9 03            CMP #03
000CDAr 2  F0 3F            BEQ loadScreen4
000CDCr 2  C9 04            CMP #04
000CDEr 2  F0 48            BEQ resetScreen
000CE0r 2               
000CE0r 2                 loadScreen1:
000CE0r 2  A2 rr            LDX #<map_level_1_2
000CE2r 2  8E rr rr         STX lowMapByte
000CE5r 2  A2 rr            LDX #>map_level_1_2
000CE7r 2  8E rr rr         STX highMapByte
000CEAr 2               
000CEAr 2  A2 rr            LDX #<attributeTableLevel1Page2
000CECr 2  8E rr rr         STX lAB
000CEFr 2  A2 rr            LDX #>attributeTableLevel1Page2
000CF1r 2  8E rr rr         STX hAB
000CF4r 2               
000CF4r 2  4C rr rr         JMP loadScreenDone
000CF7r 2               
000CF7r 2                 loadScreen2:
000CF7r 2  A2 rr            LDX #<map_level_1_page_1
000CF9r 2  8E rr rr         STX lowMapByte
000CFCr 2  A2 rr            LDX #>map_level_1_page_1
000CFEr 2  8E rr rr         STX highMapByte
000D01r 2               
000D01r 2  A2 rr            LDX #<attributeTableLevel1Page3
000D03r 2  8E rr rr         STX lAB
000D06r 2  A2 rr            LDX #>attributeTableLevel1Page3
000D08r 2  8E rr rr         STX hAB
000D0Br 2               
000D0Br 2  4C rr rr         JMP loadScreenDone
000D0Er 2               
000D0Er 2                 loadScreen3:
000D0Er 2  A2 rr            LDX #<map_level_1_page_2
000D10r 2  8E rr rr         STX lowMapByte
000D13r 2  A2 rr            LDX #>map_level_1_page_2
000D15r 2  8E rr rr         STX highMapByte
000D18r 2  4C rr rr         JMP loadScreenDone
000D1Br 2               
000D1Br 2                 loadScreen4:
000D1Br 2  A2 rr            LDX #<map_level_1_page_3
000D1Dr 2  8E rr rr         STX lowMapByte
000D20r 2  A2 rr            LDX #>map_level_1_page_3
000D22r 2  8E rr rr         STX highMapByte
000D25r 2  4C rr rr         JMP loadScreenDone
000D28r 2               
000D28r 2                 resetScreen:
000D28r 2  A2 00            LDX #00
000D2Ar 2  8E rr rr         STX screenCount
000D2Dr 2  4C rr rr         JMP resetScreens
000D30r 2               
000D30r 2                 loadScreenDone:
000D30r 2  60               RTS
000D31r 2               .endproc
000D31r 2               
000D31r 2               .proc loadStageOneBackground
000D31r 2  A9 rr            LDA #<map_level_1
000D33r 2  8D rr rr         STA mapLoByte       ; put the low byte of the address of background into pointer
000D36r 2  A9 rr            LDA #>map_level_1
000D38r 2  8D rr rr         STA mapHiByte       ; put the high byte of the address into pointer
000D3Br 2               .endproc
000D3Br 2               
000D3Br 1               .include "./lib/stages/stageTwo.asm"
000D3Br 2               .segment "CODE_3"
000000r 2               
000000r 2               palette_data_stage_2:
000000r 2                           ; 00                        01              10              11
000000r 2  31 00 10 2D    .byt $31,$00,$10,$2D,  $31,$1D,$27,$37,  $10,$1D,$27,$10,  $31,$3F,$3c,$02   ;;background
000004r 2  31 1D 27 37  
000008r 2  10 1D 27 10  
000010r 2  32 10 1A 0F    .byt $32,$10,$1A,$0F,  $32,$36,$17,$0F,  $10,$30,$21,$0F,  $32,$29,$05,$01   ;;sprite palette
000014r 2  32 36 17 0F  
000018r 2  10 30 21 0F  
000020r 2               
000020r 2               map_level_2:
000020r 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 1
000024r 2  11 11 11 11  
000028r 2  11 11 11 11  
000040r 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 1
000044r 2  11 11 11 11  
000048r 2  11 11 11 11  
000060r 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $03, $04, $05, $06, $11, $11, $11, $11 ; 2
000064r 2  11 11 11 11  
000068r 2  11 11 11 11  
000080r 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $13, $14, $15, $16, $11, $11, $11, $11 ; 3
000084r 2  11 11 11 11  
000088r 2  11 11 11 11  
0000A0r 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 6
0000A4r 2  11 11 11 11  
0000A8r 2  11 11 11 11  
0000C0r 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 7
0000C4r 2  11 11 11 11  
0000C8r 2  11 11 11 11  
0000E0r 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $20, $21, $11, $11, $11, $11, $11, $11, $11 ; 12
0000E4r 2  11 11 11 11  
0000E8r 2  11 11 11 11  
000100r 2  11 11 11 11    .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $30, $41, $11, $11, $11, $11, $11, $11, $11 ; 17
000104r 2  11 11 11 11  
000108r 2  11 11 11 11  
000120r 2  29 2A 29 2A    .byt $29, $2A, $29, $2A, $29, $2A, $29, $2A, $29, $2F, $11, $11, $11, $11, $11, $11, $11, $11, $3d, $3d, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11, $11 ; 20
000124r 2  29 2A 29 2A  
000128r 2  29 2F 11 11  
000140r 2  2C 2B 2C 2B    .byt $2C, $2B, $2C, $2B, $2c, $2b, $2c, $2b, $2c, $2E, $2F, $11, $11, $11, $11, $11, $11, $3d, $2e, $2e, $29, $2a, $29, $2A, $29, $2A, $29, $2A, $29, $2a, $29, $2a ; 20
000144r 2  2C 2B 2C 2B  
000148r 2  2C 2E 2F 11  
000160r 2  2C 2B 2C 2B    .byt $2C, $2B, $2C, $2b, $2c, $2b, $2c, $2b, $2c, $2E, $2E, $2F, $11, $11, $11, $11, $3d, $2e, $2e, $2e, $2c, $2b, $2c, $2b, $2c, $2b, $2c, $2b, $2c, $2b, $2c, $2b ; 20
000164r 2  2C 2B 2C 2B  
000168r 2  2C 2E 2E 2F  
000180r 2  2C 2B 2C 2B    .byt $2C, $2B, $2C, $2b, $2c, $2b, $2c, $2b, $2c, $2E, $2E, $2E, $2f, $11, $29, $2a, $2e, $2e, $2e, $2e, $2c, $2b, $2c, $2b, $2c, $2b, $2c, $2b, $2c, $2b, $2c, $2b ; 20
000184r 2  2C 2B 2C 2B  
000188r 2  2C 2E 2E 2E  
0001A0r 2  2C 2B 2C 2B    .byt $2C, $2B, $2C, $2B, $2C, $2b, $2C, $2b, $2C, $2E, $2E, $2E, $2e, $2a, $2c, $2B, $2e, $2e, $2e, $2e, $2c, $2b, $2c, $2b, $2c, $2b, $2c, $2b, $2c, $2b, $2c, $2b ; 21
0001A4r 2  2C 2B 2C 2B  
0001A8r 2  2C 2E 2E 2E  
0001C0r 2  27 28 27 28    .byt $27, $28, $27, $28, $27, $28, $27, $28, $27, $2E, $2E, $2E, $2e, $2B, $2c, $2B, $2e, $2e, $2e, $2e, $27, $28, $27, $28, $27, $28, $27, $28, $27, $28, $27, $28 ; 22
0001C4r 2  27 28 27 28  
0001C8r 2  27 2E 2E 2E  
0001E0r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $0A, $2D, $2E, $2E, $2e, $2B, $2C, $2B, $2e, $2e, $2e, $3f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 23
0001E4r 2  00 00 00 00  
0001E8r 2  0A 2D 2E 2E  
000200r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $0A, $0A, $2D, $2E, $2e, $2B, $2C, $2B, $2e, $2e, $3f, $0a, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 23
000204r 2  00 00 00 00  
000208r 2  0A 0A 2D 2E  
000220r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0A, $2D, $2e, $2B, $2C, $2B, $2e, $3f, $0a, $0a, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 23
000224r 2  00 00 00 00  
000228r 2  00 00 0A 2D  
000240r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0A, $0A, $2D, $28, $27, $28, $3F, $0a, $0a, $0a, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 24
000244r 2  00 00 00 00  
000248r 2  00 00 0A 0A  
000260r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0a, $0a, $0a, $0a, $0a, $0a, $0a, $0a, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 25
000264r 2  00 00 00 00  
000268r 2  00 00 00 00  
000280r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0a, $0a, $0a, $0a, $0a, $0a, $0a, $0a, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 25
000284r 2  00 00 00 00  
000288r 2  00 00 00 00  
0002A0r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 25
0002A4r 2  00 00 00 00  
0002A8r 2  00 00 00 00  
0002C0r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 25
0002C4r 2  00 00 00 00  
0002C8r 2  00 00 00 00  
0002E0r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 25
0002E4r 2  00 00 00 00  
0002E8r 2  00 00 00 00  
000300r 2  00 3B 3B 3B    .byt $00, $3b, $3b, $3b, $00, $00, $3b, $3b, $3b, $00, $00, $00, $00, $00, $00, $00, $3b, $3b, $3b, $00, $00, $3b, $3b, $3b, $3b, $00, $00, $00, $3b, $3b, $3b, $00 ; 25
000304r 2  00 00 3B 3B  
000308r 2  3B 00 00 00  
000320r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $3b, $3b, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 25
000324r 2  00 00 00 00  
000328r 2  00 00 00 3B  
000340r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 26
000344r 2  00 00 00 00  
000348r 2  00 00 00 00  
000360r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 26
000364r 2  00 00 00 00  
000368r 2  00 00 00 00  
000380r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 29
000384r 2  00 00 00 00  
000388r 2  00 00 00 00  
0003A0r 2  4D 4D 4D 4D    .byt $4D, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d, $4d ; 32
0003A4r 2  4D 4D 4D 4D  
0003A8r 2  4D 4D 4D 4D  
0003C0r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4B, $4c, $11, $11, $11, $11, $11, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 ; 00
0003C4r 2  00 00 00 00  
0003C8r 2  00 00 00 00  
0003E0r 2               
0003E0r 2               
0003E0r 2               map_level_2_2:
0003E0r 2  12 11 11 11      .byt $12, $11, $11, $11, $11, $11, $11, $11, $29, $2C, $2C, $2C, $2C, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4D, $00, $00, $00
0003E4r 2  11 11 11 11  
0003E8r 2  29 2C 2C 2C  
000400r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2B, $2B, $2B, $2B, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
000404r 2  11 11 11 11  
000408r 2  2A 2B 2B 2B  
000420r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $29, $2C, $2C, $2C, $2C, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
000424r 2  11 11 11 11  
000428r 2  29 2C 2C 2C  
000440r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2B, $2b, $2b, $2B, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
000444r 2  11 11 11 11  
000448r 2  2A 2B 2B 2B  
000460r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $2C, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
000464r 2  11 11 11 11  
000468r 2  29 2C 2C 2C  
000480r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
000484r 2  11 11 11 11  
000488r 2  2A 2B 2B 2B  
0004A0r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $2C, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
0004A4r 2  11 11 11 11  
0004A8r 2  29 2C 2C 2C  
0004C0r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
0004C4r 2  11 11 11 11  
0004C8r 2  2A 2B 2B 2B  
0004E0r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $2C, $27, $0A, $0A, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
0004E4r 2  11 11 11 11  
0004E8r 2  29 2C 2C 2C  
000500r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
000504r 2  11 11 11 11  
000508r 2  11 2A 2B 2B  
000520r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
000524r 2  11 11 11 11  
000528r 2  11 29 2C 2C  
000540r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $4d, $00, $00, $00
000544r 2  11 11 11 11  
000548r 2  11 2A 2B 2B  
000560r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $0a, $0a, $00, $00, $00, $00, $3b, $00, $00, $00, $4d, $4B, $4B, $4B
000564r 2  11 11 11 11  
000568r 2  11 29 2C 2C  
000580r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $0a, $0a, $00, $00, $00, $00, $3b, $00, $00, $00, $4d, $4c, $4c, $4c
000584r 2  11 11 11 11  
000588r 2  11 2A 2B 2B  
0005A0r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $0a, $0a, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $11, $11, $11
0005A4r 2  11 11 11 11  
0005A8r 2  11 29 2C 2C  
0005C0r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $0a, $0a, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $11, $11, $11
0005C4r 2  11 11 11 11  
0005C8r 2  11 2A 2B 2B  
0005E0r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $0a, $0a, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $11, $11, $11
0005E4r 2  11 11 11 11  
0005E8r 2  11 29 2C 2C  
000600r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $0a, $0a, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $11, $11, $11
000604r 2  11 11 11 11  
000608r 2  11 2A 2B 2B  
000620r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $0a, $0a, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $11, $11, $11
000624r 2  11 11 11 11  
000628r 2  11 29 2C 2C  
000640r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $0a, $0a, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
000644r 2  11 11 11 11  
000648r 2  11 2A 2B 2B  
000660r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
000664r 2  11 11 11 11  
000668r 2  11 2A 2B 2B  
000680r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
000684r 2  11 11 11 11  
000688r 2  11 29 2C 2C  
0006A0r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
0006A4r 2  11 11 11 11  
0006A8r 2  11 2A 2B 2B  
0006C0r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $20, $30, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
0006C4r 2  11 11 20 30  
0006C8r 2  11 29 2C 2C  
0006E0r 2  11 11 03 13      .byt $11, $11, $03, $13, $11, $11, $21, $41, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
0006E4r 2  11 11 21 41  
0006E8r 2  11 2A 2B 2B  
000700r 2  11 11 04 14      .byt $11, $11, $04, $14, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
000704r 2  11 11 11 11  
000708r 2  11 29 2C 2C  
000720r 2  11 11 05 15      .byt $11, $11, $05, $15, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
000724r 2  11 11 11 11  
000728r 2  11 2A 2B 2B  
000740r 2  11 11 06 16      .byt $11, $11, $06, $16, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
000744r 2  11 11 11 11  
000748r 2  11 29 2C 2C  
000760r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
000764r 2  11 11 11 11  
000768r 2  11 2A 2B 2B  
000780r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
000784r 2  11 11 11 11  
000788r 2  11 29 2C 2C  
0007A0r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
0007A4r 2  11 11 11 11  
0007A8r 2  11 2A 2B 2B  
0007C0r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
0007C4r 2  11 11 11 11  
0007C8r 2  11 2A 2B 2B  
0007E0r 2               
0007E0r 2               map_level_2_page_1:
0007E0r 2  12 11 11 11      .byt $12, $11, $11, $11, $11, $11, $11, $11, $29, $2C, $2C, $2C, $2C, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4D, $00, $00, $00
0007E4r 2  11 11 11 11  
0007E8r 2  29 2C 2C 2C  
000800r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2B, $2B, $2B, $2B, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
000804r 2  11 11 11 11  
000808r 2  2A 2B 2B 2B  
000820r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $29, $2C, $2C, $2C, $2C, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
000824r 2  11 11 11 11  
000828r 2  29 2C 2C 2C  
000840r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2B, $2b, $2b, $2B, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
000844r 2  11 11 11 11  
000848r 2  2A 2B 2B 2B  
000860r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $2C, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
000864r 2  11 11 11 11  
000868r 2  29 2C 2C 2C  
000880r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
000884r 2  11 11 11 11  
000888r 2  2A 2B 2B 2B  
0008A0r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $2C, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
0008A4r 2  11 11 11 11  
0008A8r 2  29 2C 2C 2C  
0008C0r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
0008C4r 2  11 11 11 11  
0008C8r 2  2A 2B 2B 2B  
0008E0r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $2C, $27, $0A, $0A, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
0008E4r 2  11 11 11 11  
0008E8r 2  29 2C 2C 2C  
000900r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
000904r 2  11 11 11 11  
000908r 2  11 2A 2B 2B  
000920r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
000924r 2  11 11 11 11  
000928r 2  11 29 2C 2C  
000940r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $4d, $00, $00, $00
000944r 2  11 11 11 11  
000948r 2  11 2A 2B 2B  
000960r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $4d, $4B, $4B, $4B
000964r 2  11 11 11 11  
000968r 2  11 29 2C 2C  
000980r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $4d, $4c, $4c, $4c
000984r 2  11 11 11 11  
000988r 2  11 2A 2B 2B  
0009A0r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $11, $11, $11
0009A4r 2  11 11 11 11  
0009A8r 2  11 29 2C 2C  
0009C0r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $11, $11, $11
0009C4r 2  11 11 11 11  
0009C8r 2  11 2A 2B 2B  
0009E0r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $11, $11, $11
0009E4r 2  11 11 11 11  
0009E8r 2  11 29 2C 2C  
000A00r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $11, $11, $11
000A04r 2  11 11 11 11  
000A08r 2  11 2A 2B 2B  
000A20r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $11, $11, $11
000A24r 2  11 11 11 11  
000A28r 2  11 29 2C 2C  
000A40r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
000A44r 2  11 11 11 11  
000A48r 2  11 2A 2B 2B  
000A60r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
000A64r 2  11 11 11 11  
000A68r 2  11 2A 2B 2B  
000A80r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
000A84r 2  11 11 11 11  
000A88r 2  11 29 2C 2C  
000AA0r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
000AA4r 2  11 11 11 11  
000AA8r 2  11 2A 2B 2B  
000AC0r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $20, $30, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
000AC4r 2  11 11 20 30  
000AC8r 2  11 29 2C 2C  
000AE0r 2  11 11 03 13      .byt $11, $11, $03, $13, $11, $11, $21, $41, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
000AE4r 2  11 11 21 41  
000AE8r 2  11 2A 2B 2B  
000B00r 2  11 11 04 14      .byt $11, $11, $04, $14, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
000B04r 2  11 11 11 11  
000B08r 2  11 29 2C 2C  
000B20r 2  11 11 05 15      .byt $11, $11, $05, $15, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
000B24r 2  11 11 11 11  
000B28r 2  11 2A 2B 2B  
000B40r 2  11 11 06 16      .byt $11, $11, $06, $16, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
000B44r 2  11 11 11 11  
000B48r 2  11 29 2C 2C  
000B60r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
000B64r 2  11 11 11 11  
000B68r 2  11 2A 2B 2B  
000B80r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
000B84r 2  11 11 11 11  
000B88r 2  11 29 2C 2C  
000BA0r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
000BA4r 2  11 11 11 11  
000BA8r 2  11 2A 2B 2B  
000BC0r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
000BC4r 2  11 11 11 11  
000BC8r 2  11 2A 2B 2B  
000BE0r 2               
000BE0r 2               map_level_2_page_2:
000BE0r 2  12 11 11 11      .byt $12, $11, $11, $11, $11, $11, $11, $11, $29, $2C, $2C, $2C, $2C, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4D, $00, $00, $00
000BE4r 2  11 11 11 11  
000BE8r 2  29 2C 2C 2C  
000C00r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2B, $2B, $2B, $2B, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
000C04r 2  11 11 11 11  
000C08r 2  2A 2B 2B 2B  
000C20r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $29, $2C, $2C, $2C, $2C, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
000C24r 2  11 11 11 11  
000C28r 2  29 2C 2C 2C  
000C40r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2B, $2b, $2b, $2B, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
000C44r 2  11 11 11 11  
000C48r 2  2A 2B 2B 2B  
000C60r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $2C, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
000C64r 2  11 11 11 11  
000C68r 2  29 2C 2C 2C  
000C80r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
000C84r 2  11 11 11 11  
000C88r 2  2A 2B 2B 2B  
000CA0r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $2C, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
000CA4r 2  11 11 11 11  
000CA8r 2  29 2C 2C 2C  
000CC0r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
000CC4r 2  11 11 11 11  
000CC8r 2  2A 2B 2B 2B  
000CE0r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $2C, $27, $0A, $0A, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
000CE4r 2  11 11 11 11  
000CE8r 2  29 2C 2C 2C  
000D00r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
000D04r 2  11 11 11 11  
000D08r 2  11 2A 2B 2B  
000D20r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
000D24r 2  11 11 11 11  
000D28r 2  11 29 2C 2C  
000D40r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $4d, $00, $00, $00
000D44r 2  11 11 11 11  
000D48r 2  11 2A 2B 2B  
000D60r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $4d, $4B, $4B, $4B
000D64r 2  11 11 11 11  
000D68r 2  11 29 2C 2C  
000D80r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $4d, $4c, $4c, $4c
000D84r 2  11 11 11 11  
000D88r 2  11 2A 2B 2B  
000DA0r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $11, $11, $11
000DA4r 2  11 11 11 11  
000DA8r 2  11 29 2C 2C  
000DC0r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $11, $11, $11
000DC4r 2  11 11 11 11  
000DC8r 2  11 2A 2B 2B  
000DE0r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $11, $11, $11
000DE4r 2  11 11 11 11  
000DE8r 2  11 29 2C 2C  
000E00r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $11, $11, $11
000E04r 2  11 11 11 11  
000E08r 2  11 2A 2B 2B  
000E20r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $11, $11, $11
000E24r 2  11 11 11 11  
000E28r 2  11 29 2C 2C  
000E40r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
000E44r 2  11 11 11 11  
000E48r 2  11 2A 2B 2B  
000E60r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
000E64r 2  11 11 11 11  
000E68r 2  11 2A 2B 2B  
000E80r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
000E84r 2  11 11 11 11  
000E88r 2  11 29 2C 2C  
000EA0r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
000EA4r 2  11 11 11 11  
000EA8r 2  11 2A 2B 2B  
000EC0r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $20, $30, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
000EC4r 2  11 11 20 30  
000EC8r 2  11 29 2C 2C  
000EE0r 2  11 11 03 13      .byt $11, $11, $03, $13, $11, $11, $21, $41, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
000EE4r 2  11 11 21 41  
000EE8r 2  11 2A 2B 2B  
000F00r 2  11 11 04 14      .byt $11, $11, $04, $14, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
000F04r 2  11 11 11 11  
000F08r 2  11 29 2C 2C  
000F20r 2  11 11 05 15      .byt $11, $11, $05, $15, $11, $11, $11, $11, $11, $2A, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
000F24r 2  11 11 11 11  
000F28r 2  11 2A 2B 2B  
000F40r 2  11 11 06 16      .byt $11, $11, $06, $16, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
000F44r 2  11 11 11 11  
000F48r 2  11 29 2C 2C  
000F60r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
000F64r 2  11 11 11 11  
000F68r 2  11 2A 2B 2B  
000F80r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $29, $2c, $2c, $2c, $27, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
000F84r 2  11 11 11 11  
000F88r 2  11 29 2C 2C  
000FA0r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $00, $00, $00, $00, $4d, $00, $00, $00
000FA4r 2  11 11 11 11  
000FA8r 2  11 2A 2B 2B  
000FC0r 2  11 11 11 11      .byt $11, $11, $11, $11, $11, $11, $11, $11, $11, $2a, $2b, $2b, $2b, $28, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $4d, $00, $00, $00
000FC4r 2  11 11 11 11  
000FC8r 2  11 2A 2B 2B  
000FE0r 2               
000FE0r 2               attributeTableLevel2Page1:
000FE0r 2                   ;   1    2    3    4    5    6    7    8
000FE0r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $FF, $00 ; !
000FE4r 2  00 00 FF 00  
000FE8r 2  00 FF 00 00    .byt $00, $FF, $00, $00, $00, $00, $00, $00 ; 2
000FECr 2  00 00 00 00  
000FF0r 2  55 55 55 55    .byt $55, $55, $55, $55, $55, $55, $55, $55 ; 3
000FF4r 2  55 55 55 55  
000FF8r 2  05 05 A5 55    .byt $05, $05, $A5, $55, $a5, $05, $05, $05 ; 4
000FFCr 2  A5 05 05 05  
001000r 2  00 00 08 AA    .byt $00, $00, $08, $aa, $aa, $00, $00, $00 ; 5
001004r 2  AA 00 00 00  
001008r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00 ; 6
00100Cr 2  00 00 00 00  
001010r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00 ; 8
001014r 2  00 00 00 00  
001018r 2  00 00 00 00    .byt $00, $00, $00, $00, $00, $00, $00, $00 ; 8
00101Cr 2  00 00 00 00  
001020r 2               
001020r 2               attributeTableLevel2Page2:
001020r 2                       ;   1    2    3    4    5    6    7    8
001020r 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; !
001024r 2  00 00 00 00  
001028r 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; 2
00102Cr 2  00 00 00 00  
001030r 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; 3
001034r 2  00 00 00 00  
001038r 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; 4
00103Cr 2  00 00 00 00  
001040r 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; 5
001044r 2  00 00 00 00  
001048r 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; 6
00104Cr 2  00 00 00 00  
001050r 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; 8
001054r 2  00 00 00 00  
001058r 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; 8
00105Cr 2  00 00 00 00  
001060r 2               
001060r 2               attributeTableLevel2Page3:
001060r 2                           ;   1    2    3    4    5    6    7    8
001060r 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; !
001064r 2  00 00 00 00  
001068r 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; 2
00106Cr 2  00 00 00 00  
001070r 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; 3
001074r 2  00 00 00 00  
001078r 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; 4
00107Cr 2  00 00 00 00  
001080r 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; 5
001084r 2  00 00 00 00  
001088r 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; 6
00108Cr 2  00 00 00 00  
001090r 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; 8
001094r 2  00 00 00 00  
001098r 2  00 00 55 05      .byt $00, $00, $55, $05, $00, $00, $00, $00 ; 8
00109Cr 2  00 00 00 00  
0010A0r 2               
0010A0r 2               
0010A0r 2               .segment "CODE"
000D3Br 2               
000D3Br 2               .proc firstProcedureStageTwo
000D3Br 2  60               RTS
000D3Cr 2               .endproc
000D3Cr 2               
000D3Cr 2               ;.proc changePrgToTwo
000D3Cr 2               ;    LDA #%00000001
000D3Cr 2               ;    JSR setPrgBank
000D3Cr 2               ;    RTS
000D3Cr 2               ;.endproc
000D3Cr 2               
000D3Cr 2               .proc stageTwoState
000D3Cr 2  20 rr rr         JSR incScrollCounter
000D3Fr 2  20 rr rr         JSR heroStateMovement
000D42r 2  20 rr rr         JSR screenFactoryTwo
000D45r 2  20 rr rr         JSR swapNametable
000D48r 2  20 rr rr         JSR drawNewAttribute
000D4Br 2  20 rr rr         JSR drawNewCollumn
000D4Er 2                   ; each time after write to ppu
000D4Er 2  20 rr rr         JSR scrolling
000D51r 2  20 rr rr         JSR changeSpriteBuffer
000D54r 2  20 rr rr         JSR scrolling
000D57r 2                   ; read joy and player animation must be last run
000D57r 2  20 rr rr         JSR readJoyPad
000D5Ar 2  20 rr rr         JSR scrolling
000D5Dr 2  20 rr rr         JSR readJoyState
000D60r 2  20 rr rr         JSR scrolling
000D63r 2  20 rr rr         JSR playerHundler
000D66r 2                   ; always scrolling in last this interapt
000D66r 2  20 rr rr         JSR scrolling
000D69r 2               
000D69r 2  60               RTS
000D6Ar 2               .endproc
000D6Ar 2               
000D6Ar 2               .proc resetStageTwo
000D6Ar 2                   ; change code page
000D6Ar 2  A9 02            LDA #%00000010
000D6Cr 2  20 rr rr         JSR setPrgBank
000D6Fr 2                   ; change chr page
000D6Fr 2  A9 00            LDA #$00
000D71r 2  20 rr rr         JSR changeChrZerro
000D74r 2               
000D74r 2  20 rr rr         JSR loadStageTwoBackground
000D77r 2  20 rr rr         JSR loadPaleteStageTwo
000D7Ar 2               
000D7Ar 2  20 rr rr         JSR loadBackground
000D7Dr 2  20 rr rr         JSR loadAttributePages
000D80r 2  20 rr rr         JSR fixScroll
000D83r 2               
000D83r 2  60               RTS
000D84r 2               .endproc
000D84r 2               
000D84r 2               .proc changePrgToFirst
000D84r 2  A9 00            LDA #%00000000
000D86r 2  20 rr rr         JSR setPrgBank
000D89r 2  60               RTS
000D8Ar 2               .endproc
000D8Ar 2               
000D8Ar 2               .segment "CODE"
000D8Ar 2               .proc screenFactoryTwo
000D8Ar 2               
000D8Ar 2  AD rr rr         LDA scrollPosition
000D8Dr 2  C9 FD            CMP #$FD
000D8Fr 2  F0 02            BEQ incrementScreenCount
000D91r 2  D0 06            BNE incrementScreenDone
000D93r 2               
000D93r 2                 incrementScreenCount:
000D93r 2  EE rr rr         INC screenCount
000D96r 2  4C rr rr         JMP incrementScreenDone
000D99r 2               
000D99r 2                 incrementScreenDone:
000D99r 2               
000D99r 2                 loadScreens:
000D99r 2  AD rr rr         LDA screenCount
000D9Cr 2  C9 00            CMP #00
000D9Er 2  F0 0C            BEQ loadScreen1
000DA0r 2  C9 01            CMP #01
000DA2r 2  F0 1F            BEQ loadScreen2
000DA4r 2  C9 02            CMP #02
000DA6r 2  F0 32            BEQ loadScreen3
000DA8r 2  C9 03            CMP #03
000DAAr 2  F0 3B            BEQ resetScreen
000DACr 2               
000DACr 2                 loadScreen1:
000DACr 2  A2 rr            LDX #<map_level_2_2
000DAEr 2  8E rr rr         STX lowMapByte
000DB1r 2  A2 rr            LDX #>map_level_2_2
000DB3r 2  8E rr rr         STX highMapByte
000DB6r 2               
000DB6r 2  A2 rr            LDX #<attributeTableLevel2Page2
000DB8r 2  8E rr rr         STX lAB
000DBBr 2  A2 rr            LDX #>attributeTableLevel2Page2
000DBDr 2  8E rr rr         STX hAB
000DC0r 2               
000DC0r 2  4C rr rr         JMP loadScreenDone
000DC3r 2               
000DC3r 2                 loadScreen2:
000DC3r 2  A2 rr            LDX #<map_level_2_page_1
000DC5r 2  8E rr rr         STX lowMapByte
000DC8r 2  A2 rr            LDX #>map_level_2_page_1
000DCAr 2  8E rr rr         STX highMapByte
000DCDr 2               
000DCDr 2  A2 rr            LDX #<attributeTableLevel2Page3
000DCFr 2  8E rr rr         STX lAB
000DD2r 2  A2 rr            LDX #>attributeTableLevel2Page3
000DD4r 2  8E rr rr         STX hAB
000DD7r 2               
000DD7r 2  4C rr rr         JMP loadScreenDone
000DDAr 2               
000DDAr 2                 loadScreen3:
000DDAr 2  A2 rr            LDX #<map_level_2_page_2
000DDCr 2  8E rr rr         STX lowMapByte
000DDFr 2  A2 rr            LDX #>map_level_2_page_2
000DE1r 2  8E rr rr         STX highMapByte
000DE4r 2  4C rr rr         JMP loadScreenDone
000DE7r 2               
000DE7r 2                 resetScreen:
000DE7r 2  A2 00            LDX #00
000DE9r 2  8E rr rr         STX screenCount
000DECr 2  4C rr rr         JMP resetScreens
000DEFr 2               
000DEFr 2                 loadScreenDone:
000DEFr 2  60               RTS
000DF0r 2               
000DF0r 2                 resetScreens:
000DF0r 2  A9 01            LDA #01
000DF2r 2  85 rr            STA isStageEnd
000DF4r 2  60               RTS
000DF5r 2               .endproc
000DF5r 2               
000DF5r 2               .proc loadStageTwoBackground
000DF5r 2  A9 rr            LDA #<map_level_2
000DF7r 2  8D rr rr         STA mapLoByte       ; put the low byte of the address of background into pointer
000DFAr 2  A9 rr            LDA #>map_level_2
000DFCr 2  8D rr rr         STA mapHiByte       ; put the high byte of the address into pointer
000DFFr 2               .endproc
000DFFr 2               
000DFFr 2               
000DFFr 2               .proc loadPaleteStageTwo
000DFFr 2                 LoadPalettes:
000DFFr 2  AD 02 20         LDA $2002
000E02r 2  A9 3F            LDA #$3F
000E04r 2  8D 06 20         STA $2006             ; говорим ppu что нам необходим адрес 3F00 здесь храниться палитра
000E07r 2  A9 00            LDA #$00
000E09r 2  8D 06 20         STA $2006             ; Сначала старший байт записываем 3F потом младший 00 при записи этот адрес будет автоматически увеличиваться
000E0Cr 2               
000E0Cr 2  A2 00            LDX #$00              ; X = 0
000E0Er 2                 LoadPalettesLoop:
000E0Er 2  BD rr rr         LDA palette_data_stage_2, x
000E11r 2  8D 07 20         STA $2007             ; записываем в ppu по факту в адрес 3F00
000E14r 2  E8               INX                   ; X = X + 1
000E15r 2  E0 20            CPX #$20
000E17r 2  D0 F5            BNE LoadPalettesLoop
000E19r 2  60               RTS
000E1Ar 2               .endproc
000E1Ar 2               
000E1Ar 1               .include "./lib/palete.asm"
000E1Ar 2               .segment "RODATA"
0017DBr 2               	palette_data:
0017DBr 2  09 0A 0C 0D    		.byt $09,$0A,$0C,$0D,  $21,$0C,$08,$28,  $21,$1C,$29,$07,  $31,$3F,$3c,$02   ;;background
0017DFr 2  21 0C 08 28  
0017E3r 2  21 1C 29 07  
0017EBr 2  32 10 1A 0F    		.byt $32,$10,$1A,$0F,  $32,$36,$17,$0F,  $32,$30,$21,$0F,  $32,$27,$17,$0F   ;;sprite palette
0017EFr 2  32 36 17 0F  
0017F3r 2  32 30 21 0F  
0017FBr 2               
0017FBr 2               .segment "CODE"
000E1Ar 2               
000E1Ar 2               .proc loadPalete
000E1Ar 2                 LoadPalettes:
000E1Ar 2  AD 02 20         LDA $2002
000E1Dr 2  A9 3F            LDA #$3F
000E1Fr 2  8D 06 20         STA $2006             ; говорим ppu что нам необходим адрес 3F00 здесь храниться палитра
000E22r 2  A9 00            LDA #$00
000E24r 2  8D 06 20         STA $2006             ; Сначала старший байт записываем 3F потом младший 00 при записи этот адрес будет автоматически увеличиваться
000E27r 2               
000E27r 2  A2 00            LDX #$00              ; X = 0
000E29r 2                 LoadPalettesLoop:
000E29r 2  BD rr rr         LDA palette_data, x
000E2Cr 2  8D 07 20         STA $2007             ; записываем в ppu по факту в адрес 3F00
000E2Fr 2  E8               INX                   ; X = X + 1
000E30r 2  E0 20            CPX #$20
000E32r 2  D0 F5            BNE LoadPalettesLoop
000E34r 2  60               RTS
000E35r 2               .endproc
000E35r 2               
000E35r 1               .include "./lib/reset.asm"
000E35r 2               .segment "CODE"
000E35r 2               
000E35r 2               .proc resetProcedure
000E35r 2               
000E35r 2               
000E35r 2  78           	sei
000E36r 2  A2 00        	ldx #0
000E38r 2  8E 00 20     	stx $2000		; обнуляем память
000E3Br 2  8E 01 20     	stx $2001		; выключаем рендер
000E3Er 2  8E 10 40     	stx $4010	; отключаем DMC
000E41r 2  CA           	dex 				; X = $FF
000E42r 2  9A           	txs					; Стэк равен = $FF
000E43r 2  2C 02 20     :	bit $2002
000E46r 2  10 FB        	bpl :-
000E48r 2               
000E48r 2  60           	RTS
000E49r 2               .endproc
000E49r 2               
000E49r 1               .include "./lib/stageFunctions.asm"
000E49r 2               
000E49r 2               .segment "CODE"
000E49r 2               
000E49r 2               .proc setStageVar
000E49r 2  A9 00          lda #00
000E4Br 2  8D rr rr       sta currentStage
000E4Er 2               
000E4Er 2  60             rts
000E4Fr 2               .endproc
000E4Fr 2               
000E4Fr 1               .include "./lib/backgroundFunctions.asm"
000E4Fr 2               .segment "RODATA"
0017FBr 2               
0017FBr 2               .segment "CODE"
000E4Fr 2               
000E4Fr 2               .proc firstProcBackground
000E4Fr 2  60              RTS
000E50r 2               .endproc
000E50r 2               
000E50r 2               .proc loadBackground
000E50r 2                   LoadBackground:
000E50r 2  AD 02 20           LDA $2002             ; read PPU status to reset the high/low latch
000E53r 2  A9 20              LDA #$20
000E55r 2  8D 06 20           STA $2006             ; write the high byte of $2000 address
000E58r 2  A9 00              LDA #$00
000E5Ar 2  8D 06 20           STA $2006             ; write the low byte of $2000 address
000E5Dr 2               
000E5Dr 2  A2 00              LDX #$00            ; start at pointer + 0
000E5Fr 2  A0 00              LDY #$00
000E61r 2                   OutsideLoop:
000E61r 2               
000E61r 2                   InsideLoop:
000E61r 2  B1 rr              LDA (mapLoByte), y  ; copy one background byte from address in pointer plus Y
000E63r 2  8D 07 20           STA $2007           ; this runs 256 * 4 times
000E66r 2               
000E66r 2  C8                 INY                 ; inside loop counter
000E67r 2  C0 00              CPY #$00
000E69r 2  D0 F6              BNE InsideLoop      ; run the inside loop 256 times before continuing down
000E6Br 2               
000E6Br 2  EE rr rr           INC mapHiByte       ; low byte went 0 to 256, so high byte needs to be changed now
000E6Er 2               
000E6Er 2  E8                 INX
000E6Fr 2  E0 04              CPX #$04
000E71r 2  D0 EE              BNE OutsideLoop     ; run the outside loop 256 times before continuing down
000E73r 2               
000E73r 2  60                 RTS
000E74r 2               .endproc
000E74r 2               
000E74r 2               .proc loadAttributePages
000E74r 2                 LoadAttributePage1:
000E74r 2  AD 02 20         lda $2002
000E77r 2  A9 23            lda #$23
000E79r 2  8D 06 20         sta $2006
000E7Cr 2  A9 C0            lda #$C0
000E7Er 2  8D 06 20         sta $2006
000E81r 2               
000E81r 2  A2 00            ldx #00
000E83r 2                 AttributePage1Loop:
000E83r 2  BD rr rr         lda attributeTableLevel2Page1, x
000E86r 2  8D 07 20         sta $2007
000E89r 2  E8               inx
000E8Ar 2  E0 42            cpx #66
000E8Cr 2  D0 F5            bne AttributePage1Loop
000E8Er 2               
000E8Er 2                 LoadAttributePage2:
000E8Er 2  AD 02 20         lda $2002
000E91r 2  A9 27            lda #$27
000E93r 2  8D 06 20         sta $2006
000E96r 2  A9 C0            lda #$C0
000E98r 2  8D 06 20         sta $2006
000E9Br 2               
000E9Br 2  A2 00            ldx #00
000E9Dr 2                 AttributePage2Loop:
000E9Dr 2  BD rr rr         lda attributeTableLevel2Page1, x
000EA0r 2  8D 07 20         sta $2007
000EA3r 2  E8               inx
000EA4r 2  E0 42            cpx #66
000EA6r 2  D0 F5            bne AttributePage2Loop
000EA8r 2               
000EA8r 2  60               RTS
000EA9r 2               .endproc
000EA9r 2               
000EA9r 2               .proc drawNewAttribute
000EA9r 2               
000EA9r 2               NewAttributeCheck:
000EA9r 2  AD rr rr         LDA scrollPosition
000EACr 2  29 0F            AND #%00001111
000EAEr 2  D0 6F            BNE NewAttributeCheckDone
000EB0r 2  4C rr rr         JMP DrawNewAttribute
000EB3r 2               
000EB3r 2               DrawNewAttribute:
000EB3r 2  AD rr rr         LDA nameTable
000EB6r 2  49 01            EOR #$01
000EB8r 2  0A               ASL A
000EB9r 2  0A               ASL A
000EBAr 2  18               CLC
000EBBr 2  69 23            ADC #$23
000EBDr 2  8D rr rr         STA colHig
000EC0r 2               
000EC0r 2  AD rr rr         LDA scrollPosition
000EC3r 2  4A               LSR A
000EC4r 2  4A               LSR A
000EC5r 2  4A               LSR A
000EC6r 2  4A               LSR A
000EC7r 2  4A               LSR A
000EC8r 2  18               CLC
000EC9r 2  69 C0            ADC #$C0
000ECBr 2  8D rr rr         STA colLow
000ECEr 2               
000ECEr 2  AD rr rr         LDA columnNumber
000ED1r 2  29 FC            AND #%11111100
000ED3r 2  0A               ASL A
000ED4r 2  8D rr rr         STA sourceLow
000ED7r 2  AD rr rr         LDA columnNumber
000EDAr 2  4A               LSR A
000EDBr 2  4A               LSR A
000EDCr 2  4A               LSR A
000EDDr 2  4A               LSR A
000EDEr 2  4A               LSR A
000EDFr 2  4A               LSR A
000EE0r 2  4A               LSR A
000EE1r 2  8D rr rr         STA sourceHig
000EE4r 2               
000EE4r 2  AD rr rr         LDA sourceLow
000EE7r 2  18               CLC
000EE8r 2  6D rr rr         ADC lAB
000EEBr 2  8D rr rr         STA sourceLow
000EEEr 2  AD rr rr         LDA sourceHig
000EF1r 2  6D rr rr         ADC hAB
000EF4r 2  8D rr rr         STA sourceHig
000EF7r 2               
000EF7r 2  A0 00            LDY #$00
000EF9r 2  AD 02 20         LDA $2002
000EFCr 2               DrawNewAttributeLoop:
000EFCr 2  AD rr rr         LDA colHig
000EFFr 2  8D 06 20         STA $2006
000F02r 2  AD rr rr         LDA colLow
000F05r 2  8D 06 20         STA $2006
000F08r 2  B1 rr            LDA (sourceLow), y
000F0Ar 2  8D 07 20         STA $2007
000F0Dr 2               
000F0Dr 2  C8               INY
000F0Er 2  C0 08            CPY #$08
000F10r 2  F0 0C            BEQ DrawAttributeLoopDone
000F12r 2               
000F12r 2  AD rr rr         LDA colLow
000F15r 2  18               CLC
000F16r 2  69 08            ADC #$08
000F18r 2  8D rr rr         STA colLow
000F1Br 2  4C rr rr         JMP DrawNewAttributeLoop
000F1Er 2               
000F1Er 2               DrawAttributeLoopDone:
000F1Er 2  60           RTS
000F1Fr 2               
000F1Fr 2               NewAttributeCheckDone:
000F1Fr 2  60           RTS
000F20r 2               .endproc
000F20r 2               
000F20r 2               .proc drawNewCollumnNametable
000F20r 2               
000F20r 2               DrawNewColumn:
000F20r 2  AD rr rr         LDA scrollPosition ; позиция скрола
000F23r 2  4A               LSR A ; смещение право
000F24r 2  4A               LSR A
000F25r 2  4A               LSR A ; / 8
000F26r 2  8D rr rr         STA colLow
000F29r 2  8D rr rr         STA columnNumber
000F2Cr 2               
000F2Cr 2  AD rr rr         LDA nameTable
000F2Fr 2  0A               ASL A
000F30r 2  0A               ASL A ; * 4
000F31r 2  18               CLC
000F32r 2  69 24            ADC #$24
000F34r 2  8D rr rr         STA colHig
000F37r 2               
000F37r 2  AD rr rr         LDA columnNumber
000F3Ar 2  0A               ASL A
000F3Br 2  0A               ASL A
000F3Cr 2  0A               ASL A
000F3Dr 2  0A               ASL A
000F3Er 2  0A               ASL A
000F3Fr 2  8D rr rr         STA sourceLow
000F42r 2  AD rr rr         LDA columnNumber
000F45r 2  4A               LSR A
000F46r 2  4A               LSR A
000F47r 2  4A               LSR A
000F48r 2  8D rr rr         STA sourceHig
000F4Br 2               
000F4Br 2  AD rr rr         LDA sourceLow
000F4Er 2  18               CLC
000F4Fr 2  6D rr rr         ADC lowMapByte
000F52r 2  8D rr rr         STA sourceLow
000F55r 2  AD rr rr         LDA sourceHig
000F58r 2  6D rr rr         ADC highMapByte
000F5Br 2  8D rr rr         STA sourceHig
000F5Er 2               
000F5Er 2                DrawColumn:
000F5Er 2  A9 84            LDA #%10000100
000F60r 2  4D rr rr         EOR nameTable
000F63r 2  8D 00 20         STA $2000
000F66r 2               
000F66r 2  AD 02 20         LDA $2002             ; read PPU status to reset the high/low latch
000F69r 2  AD rr rr         LDA colHig
000F6Cr 2  8D 06 20         STA $2006             ; write the high byte of column address
000F6Fr 2  AD rr rr         LDA colLow
000F72r 2  8D 06 20         STA $2006             ; write the low byte of column address
000F75r 2  A2 1E            LDX #$1E              ; copy 30 bytes
000F77r 2  A0 00            LDY #$00
000F79r 2               DrawColumnLoop:
000F79r 2  B1 rr            LDA (sourceLow), y
000F7Br 2  8D 07 20         STA $2007
000F7Er 2  C8               INY
000F7Fr 2  CA               DEX
000F80r 2  D0 F7            BNE DrawColumnLoop
000F82r 2               
000F82r 2  A9 90            LDA #%10010000
000F84r 2  4D rr rr         EOR nameTable ; 01 00
000F87r 2  8D 00 20         STA $2000
000F8Ar 2               
000F8Ar 2  60               RTS
000F8Br 2               .endproc
000F8Br 2               
000F8Br 2               .proc drawNewCollumn
000F8Br 2               ; column check
000F8Br 2               NewColumnCheck:
000F8Br 2  AD rr rr         LDA scrollPosition
000F8Er 2  29 07            AND #%00000111
000F90r 2  D0 0B            BNE NewColumnCheckDone
000F92r 2  20 rr rr         JSR drawNewCollumnNametable
000F95r 2  AD rr rr         LDA columnNumber
000F98r 2               
000F98r 2  29 7F            AND #%01111111
000F9Ar 2  8D rr rr         STA columnNumber
000F9Dr 2               NewColumnCheckDone:
000F9Dr 2  A9 90            LDA #%10010000
000F9Fr 2  0D rr rr         ORA nameTable
000FA2r 2  8D 00 20         STA $2000
000FA5r 2               
000FA5r 2  A9 1E            LDA #%00011110
000FA7r 2  8D 01 20         STA $2001
000FAAr 2               
000FAAr 2  60               RTS
000FABr 2               
000FABr 2               .endproc
000FABr 2               
000FABr 2               .proc swapNametable
000FABr 2               
000FABr 2               NameTableCheckSwap:
000FABr 2  AD rr rr         LDA scrollPosition
000FAEr 2  C9 FF            CMP #$FF
000FB0r 2  D0 09            BNE NameTableCheckSwapDone
000FB2r 2               NameTableSwap:
000FB2r 2  AD rr rr         LDA nameTable
000FB5r 2  49 01            EOR #$01
000FB7r 2  8D rr rr         STA nameTable
000FBAr 2               
000FBAr 2  60               RTS
000FBBr 2               
000FBBr 2               
000FBBr 2               NameTableCheckSwapDone:
000FBBr 2  60               RTS
000FBCr 2               
000FBCr 2               .endproc
000FBCr 2               
000FBCr 2               .proc enableNMI
000FBCr 2  A9 90          lda #%10010000 ;enable NMI, sprites from Pattern 0, background from Pattern 1
000FBEr 2  8D 00 20       sta $2000
000FC1r 2               
000FC1r 2  60             RTS
000FC2r 2               .endproc
000FC2r 2               
000FC2r 2               .proc enableRender
000FC2r 2  A9 18          lda #%00011000
000FC4r 2  8D 01 20       sta $2001
000FC7r 2               
000FC7r 2  60             RTS
000FC8r 2               .endproc
000FC8r 2               
000FC8r 2               .proc disableRender
000FC8r 2  A9 00            LDA #$00
000FCAr 2  8D 01 20         STA $2001
000FCDr 2               
000FCDr 2  60               RTS
000FCEr 2               .endproc
000FCEr 2               
000FCEr 1               .include "./lib/heroStates/debugSquired.asm"
000FCEr 2               .segment "CODE"
000FCEr 2               
000FCEr 2               .proc firstDebug
000FCEr 2  60               RTS
000FCFr 2               .endproc
000FCFr 2               
000FCFr 2               .proc debug
000FCFr 2  AD 02 20         LDA $2002             ; read PPU status to reset the high/low latch
000FD2r 2  A9 20            LDA #$20
000FD4r 2  8D 06 20         STA $2006             ; write the high byte of $2000 address
000FD7r 2  A9 ED            LDA #$ED
000FD9r 2  8D 06 20         STA $2006             ; write the low byte of $2000 address
000FDCr 2               
000FDCr 2  A9 2F            LDA #$2F
000FDEr 2  8D 07 20         STA $2007
000FE1r 2  60               RTS
000FE2r 2               .endproc
000FE2r 2               
000FE2r 2               .proc unsetDebug
000FE2r 2  AD 02 20         LDA $2002             ; read PPU status to reset the high/low latch
000FE5r 2  A9 20            LDA #$20
000FE7r 2  8D 06 20         STA $2006             ; write the high byte of $2000 address
000FEAr 2  A9 ED            LDA #$ED
000FECr 2  8D 06 20         STA $2006             ; write the low byte of $2000 address
000FEFr 2               
000FEFr 2  A9 16            LDA #$16
000FF1r 2  8D 07 20         STA $2007
000FF4r 2  60               RTS
000FF5r 2               .endproc
000FF5r 2               
000FF5r 1               .include "./lib/mapperFunctions.asm"
000FF5r 2               .segment "CODE"
000FF5r 2               
000FF5r 2               .proc firstMapperFunctionsProcedure
000FF5r 2  60               RTS
000FF6r 2               .endproc
000FF6r 2               
000FF6r 2               .proc setPrgBank
000FF6r 2  8D 00 E0         STA $E000
000FF9r 2  4A               LSR
000FFAr 2  8D 00 E0         STA $E000
000FFDr 2  4A               LSR
000FFEr 2  8D 00 E0         STA $E000
001001r 2  4A               LSR
001002r 2  8D 00 E0         STA $E000
001005r 2  4A               LSR
001006r 2  8D 00 E0         STA $E000
001009r 2               
001009r 2  60               RTS
00100Ar 2               .endproc
00100Ar 2               
00100Ar 2               .proc resetMapper
00100Ar 2  A9 80            LDA #$80
00100Cr 2  8D 00 80         STA $8000
00100Fr 2               
00100Fr 2  60               RTS
001010r 2               .endproc
001010r 2               
001010r 2               .proc resetMapperProcedure
001010r 2  EE rr rr         INC resetMapper
001013r 2               
001013r 2  60               RTS
001014r 2               .endproc
001014r 2               
001014r 2               .proc setVerticalMirror
001014r 2  20 rr rr         JSR resetMapper
001017r 2  A9 0E            LDA #%00001110    ; 8KB CHR, 16KB PRG, $8000-BFFF swappable, vertical mirroring
001019r 2  20 rr rr         JSR writeToMapper
00101Cr 2               
00101Cr 2  60               RTS
00101Dr 2               .endproc
00101Dr 2               
00101Dr 2               .proc setHorizontalMirror
00101Dr 2  20 rr rr         JSR resetMapper
001020r 2  A9 0F            LDA #%00001111    ; 8KB CHR, 16KB PRG, $8000-BFFF swappable, vertical mirroring
001022r 2  20 rr rr         JSR writeToMapper
001025r 2               
001025r 2  60               RTS
001026r 2               .endproc
001026r 2               
001026r 2               .proc writeToMapper
001026r 2  8D 00 80         STA $8000         ; first data bit
001029r 2  4A               LSR A             ; shift to next bit
00102Ar 2  8D 00 80         STA $8000         ; second data bit
00102Dr 2  4A               LSR A             ; etc
00102Er 2  8D 00 80         STA $8000
001031r 2  4A               LSR A
001032r 2  8D 00 80         STA $8000
001035r 2  4A               LSR A
001036r 2  8D 00 80         STA $8000         ; config bits written here, takes effect immediately
001039r 2               
001039r 2  60               RTS
00103Ar 2               .endproc
00103Ar 2               
00103Ar 2               .proc changeChrZerro
00103Ar 2  8D 00 A0         STA $A000         ; first data bit
00103Dr 2  4A               LSR A             ; shift to next bit
00103Er 2  8D 00 A0         STA $A000         ; second data bit
001041r 2  4A               LSR A             ; etc
001042r 2  8D 00 A0         STA $A000
001045r 2  4A               LSR A
001046r 2  8D 00 A0         STA $A000
001049r 2  4A               LSR A
00104Ar 2  8D 00 A0         STA $A000         ; config bits written here, takes effect immediately
00104Dr 2               
00104Dr 2  60               RTS
00104Er 2               .endproc
00104Er 2               
00104Er 2               .proc changeChrFirst
00104Er 2  8D 00 C0         STA $C000         ; first data bit
001051r 2  4A               LSR A             ; shift to next bit
001052r 2  8D 00 C0         STA $C000         ; second data bit
001055r 2  4A               LSR A             ; etc
001056r 2  8D 00 C0         STA $C000
001059r 2  4A               LSR A
00105Ar 2  8D 00 C0         STA $C000
00105Dr 2  4A               LSR A
00105Er 2  8D 00 C0         STA $C000         ; config bits written here, takes effect immediately
001061r 2               
001061r 2  60               RTS
001062r 2               .endproc
001062r 2               
001062r 2               .proc changePrgBank
001062r 2  8D 00 C0         STA $C000         ; first data bit
001065r 2  4A               LSR A             ; shift to next bit
001066r 2  8D 00 C0         STA $C000         ; second data bit
001069r 2  4A               LSR A             ; etc
00106Ar 2  8D 00 C0         STA $C000
00106Dr 2  4A               LSR A
00106Er 2  8D 00 C0         STA $C000
001071r 2  4A               LSR A
001072r 2  8D 00 C0         STA $C000
001075r 2               
001075r 2  60               RTS
001076r 2               .endproc
001076r 2               
001076r 2               
001076r 1               .include "./lib/stages/startDisplay.asm"
001076r 2               .segment "CODE_2"
000000r 2               startDisplayNametable:
000000r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 1
000004r 2  0F 0F 0F 0F  
000008r 2  0F 0F 0F 0F  
000020r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 1
000024r 2  0F 0F 0F 0F  
000028r 2  0F 0F 0F 0F  
000040r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 2
000044r 2  0F 0F 0F 0F  
000048r 2  0F 0F 0F 0F  
000060r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 3
000064r 2  0F 0F 0F 0F  
000068r 2  0F 0F 0F 0F  
000080r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 15
000084r 2  0F 0F 0F 0F  
000088r 2  0F 0F 0F 0F  
0000A0r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $00, $01, $02, $03, $04, $05, $06, $07, $08, $09, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 16
0000A4r 2  0F 0F 0F 0F  
0000A8r 2  0F 0F 00 01  
0000C0r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 17
0000C4r 2  0F 0F 0F 0F  
0000C8r 2  0F 0F 10 11  
0000E0r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $20, $21, $22, $23, $24, $25, $26, $27, $28, $29, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 18
0000E4r 2  0F 0F 0F 0F  
0000E8r 2  0F 0F 20 21  
000100r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 19
000104r 2  0F 0F 0F 0F  
000108r 2  0F 0F 0F 0F  
000120r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 20
000124r 2  0F 0F 0F 0F  
000128r 2  0F 0F 0F 0F  
000140r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $30, $31, $32, $33, $34, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 21
000144r 2  0F 0F 0F 0F  
000148r 2  0F 0F 0F 0F  
000160r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $35, $36, $31, $37, $36, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 22
000164r 2  0F 0F 0F 0F  
000168r 2  0F 0F 0F 0F  
000180r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 4
000184r 2  0F 0F 0F 0F  
000188r 2  0F 0F 0F 0F  
0001A0r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 5
0001A4r 2  0F 0F 0F 0F  
0001A8r 2  0F 0F 0F 0F  
0001C0r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 6
0001C4r 2  0F 0F 0F 0F  
0001C8r 2  0F 0F 0F 0F  
0001E0r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ;
0001E4r 2  0F 0F 0F 0F  
0001E8r 2  0F 0F 0F 0F  
000200r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 8
000204r 2  0F 0F 0F 0F  
000208r 2  0F 0F 0F 0F  
000220r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 9
000224r 2  0F 0F 0F 0F  
000228r 2  0F 0F 0F 0F  
000240r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F,  $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 10
000244r 2  0F 0F 0F 0F  
000248r 2  0F 0F 0F 0F  
000260r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F,  $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 11
000264r 2  0F 0F 0F 0F  
000268r 2  0F 0F 0F 0F  
000280r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 12
000284r 2  0F 0F 0F 0F  
000288r 2  0F 0F 0F 0F  
0002A0r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 13
0002A4r 2  0F 0F 0F 0F  
0002A8r 2  0F 0F 0F 0F  
0002C0r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 14
0002C4r 2  0F 0F 0F 0F  
0002C8r 2  0F 0F 0F 0F  
0002E0r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 23
0002E4r 2  0F 0F 0F 0F  
0002E8r 2  0F 0F 0F 0F  
000300r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 24
000304r 2  0F 0F 0F 0F  
000308r 2  0F 0F 0F 0F  
000320r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 25
000324r 2  0F 0F 0F 0F  
000328r 2  0F 0F 0F 0F  
000340r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 26
000344r 2  0F 0F 0F 0F  
000348r 2  0F 0F 0F 0F  
000360r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 27
000364r 2  0F 0F 0F 0F  
000368r 2  0F 0F 0F 0F  
000380r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 28
000384r 2  0F 0F 0F 0F  
000388r 2  0F 0F 0F 0F  
0003A0r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 29
0003A4r 2  0F 0F 0F 0F  
0003A8r 2  0F 0F 0F 0F  
0003C0r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 30
0003C4r 2  0F 0F 0F 0F  
0003C8r 2  0F 0F 0F 0F  
0003E0r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 31
0003E4r 2  0F 0F 0F 0F  
0003E8r 2  0F 0F 0F 0F  
000400r 2  0F 0F 0F 0F        .byt $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F ; 32
000404r 2  0F 0F 0F 0F  
000408r 2  0F 0F 0F 0F  
00041Fr 2               
00041Fr 2               startDisplayAttributeTable:
00041Fr 2  00 00 00 00      .byt $00, $00, $00, $00, $00, $00, $00, $00 ; !
000423r 2  00 00 00 00  
000427r 2  00 00 00 00      .byt $00, $00, $00, $00, $00, $00, $00, $00 ; 2
00042Br 2  00 00 00 00  
00042Fr 2  00 00 00 00      .byt $00, $00, $00, $00, $00, $00, $00, $00 ; 3
000433r 2  00 00 00 00  
000437r 2  00 00 00 00      .byt $00, $00, $00, $00, $00, $00, $00, $00 ; 4
00043Br 2  00 00 00 00  
00043Fr 2  00 00 00 00      .byt $00, $00, $00, $00, $00, $00, $00, $00 ; 5
000443r 2  00 00 00 00  
000447r 2  00 00 00 00      .byt $00, $00, $00, $00, $00, $00, $00, $00 ; 6
00044Br 2  00 00 00 00  
00044Fr 2  00 00 00 00      .byt $00, $00, $00, $00, $00, $00, $00, $00 ; 8
000453r 2  00 00 00 00  
000457r 2  00 00 00 00      .byt $00, $00, $00, $00, $00, $00, $00, $00 ; 8
00045Br 2  00 00 00 00  
00045Fr 2               
00045Fr 2               paleteStartDisplay:
00045Fr 2                           ; 00                        01              10              11
00045Fr 2  0F 10 2A 32    .byt $0f,$10,$2a,$32,  $31,$1D,$27,$37,  $10,$1D,$27,$10,  $31,$3F,$0f,$0f   ;;background
000463r 2  31 1D 27 37  
000467r 2  10 1D 27 10  
00046Fr 2  32 36 1A 32    .byt $32,$36,$1A,$32,  $32,$36,$17,$0F,  $10,$30,$21,$0F,  $32,$29,$05,$01   ;;sprite palette
000473r 2  32 36 17 0F  
000477r 2  10 30 21 0F  
00047Fr 2               
00047Fr 2               .segment "CODE"
001076r 2               
001076r 2               .proc startDisplayState
001076r 2  20 rr rr         JSR handleStartButton
001079r 2               
001079r 2  60               RTS
00107Ar 2               .endproc
00107Ar 2               
00107Ar 2               .proc loadDisplayStart
00107Ar 2  A9 01            LDA #%00000001
00107Cr 2  8D rr rr         STA isLoadedFlags
00107Fr 2  20 rr rr         JSR setHorizontalMirror
001082r 2                   ; change prg bank
001082r 2  A9 01            LDA #%00000001
001084r 2  20 rr rr         JSR setPrgBank
001087r 2                   ; change chr bank
001087r 2  A9 04            LDA #%00000100
001089r 2  20 rr rr         JSR changeChrZerro
00108Cr 2                   ; load background
00108Cr 2  20 rr rr         JSR loadStartDisplayBackground
00108Fr 2  20 rr rr         JSR loadBackground
001092r 2  20 rr rr         JSR loadPaleteStartDisplay
001095r 2  20 rr rr         JSR loadStartDisplayAttribute
001098r 2               
001098r 2  60               RTS
001099r 2               .endproc
001099r 2               
001099r 2               .proc loadStartDisplayBackground
001099r 2  A9 rr            LDA #<startDisplayNametable
00109Br 2  8D rr rr         STA mapLoByte       ; put the low byte of the address of background into pointer
00109Er 2  A9 rr            LDA #>startDisplayNametable
0010A0r 2  8D rr rr         STA mapHiByte       ; put the high byte of the address into pointer
0010A3r 2               
0010A3r 2  60               RTS
0010A4r 2               .endproc
0010A4r 2               
0010A4r 2               .proc loadStartDisplayAttribute
0010A4r 2                 LoadAttributePage1:
0010A4r 2  AD 02 20         lda $2002
0010A7r 2  A9 23            lda #$23
0010A9r 2  8D 06 20         sta $2006
0010ACr 2  A9 C0            lda #$C0
0010AEr 2  8D 06 20         sta $2006
0010B1r 2               
0010B1r 2  A2 00            ldx #00
0010B3r 2                 AttributePage1Loop:
0010B3r 2  BD rr rr         lda attributeTableLevel2Page1, x
0010B6r 2  8D 07 20         sta $2007
0010B9r 2  E8               inx
0010BAr 2  E0 42            cpx #66
0010BCr 2  D0 F5            bne AttributePage1Loop
0010BEr 2               
0010BEr 2                 LoadAttributePage2:
0010BEr 2  AD 02 20         lda $2002
0010C1r 2  A9 27            lda #$27
0010C3r 2  8D 06 20         sta $2006
0010C6r 2  A9 C0            lda #$C0
0010C8r 2  8D 06 20         sta $2006
0010CBr 2               
0010CBr 2  A2 00            ldx #00
0010CDr 2                 AttributePage2Loop:
0010CDr 2  BD rr rr         lda attributeTableLevel2Page1, x
0010D0r 2  8D 07 20         sta $2007
0010D3r 2  E8               inx
0010D4r 2  E0 42            cpx #66
0010D6r 2  D0 F5            bne AttributePage2Loop
0010D8r 2               
0010D8r 2  60               RTS
0010D9r 2               .endproc
0010D9r 2               
0010D9r 2               .proc loadPaleteStartDisplay
0010D9r 2                 LoadPalettes:
0010D9r 2  AD 02 20         LDA $2002
0010DCr 2  A9 3F            LDA #$3F
0010DEr 2  8D 06 20         STA $2006             ; говорим ppu что нам необходим адрес 3F00 здесь храниться палитра
0010E1r 2  A9 0F            LDA #$0F
0010E3r 2  8D 06 20         STA $2006             ; Сначала старший байт записываем 3F потом младший 00 при записи этот адрес будет автоматически увеличиваться
0010E6r 2               
0010E6r 2  A2 20            LDX #$20              ; X = 0
0010E8r 2                 LoadPalettesLoop:
0010E8r 2  BD rr rr         LDA paleteStartDisplay, x
0010EBr 2  8D 07 20         STA $2007             ; записываем в ppu по факту в адрес 3F00
0010EEr 2  CA               DEX                   ; X = X + 1
0010EFr 2  D0 F7            BNE LoadPalettesLoop
0010F1r 2               
0010F1r 2  60               RTS
0010F2r 2               .endproc
0010F2r 2               
0010F2r 2               .proc handleStartButton
0010F2r 2  AE rr rr         LDX joyState
0010F5r 2  E0 08            CPX #%00001000
0010F7r 2  F0 02            BEQ stateStageOne
0010F9r 2  D0 0B            BNE return
0010FBr 2               stateStageOne:
0010FBr 2  20 rr rr         JSR setVerticalMirror
0010FEr 2  A9 01            LDA #01
001100r 2  8D rr rr         STA stageStates
001103r 2  20 rr rr         JSR resetStageTwo
001106r 2               return:
001106r 2  60               RTS
001107r 2               .endproc
001107r 2               
001107r 1               
001107r 1               .segment "HEADER"
000000r 1  4E 45 53 1A  	.byt "NES",$1A
000004r 1  08           	.byt 8 				; 8 x 16kB PRG block. 128kb
000005r 1  10           	.byt 16 				; 16 x 8kB CHR block. 128kb
000006r 1  11           	.byt 17              ; 0 horizontal, 1 vertical mirror
000007r 1  02           	.byt 02              ; mapper
000008r 1               
000008r 1               .segment "VECTORS"
000000r 1  rr rr rr rr  	.addr nmi_isr, reset, irq_isr
000004r 1  rr rr        
000006r 1               
000006r 1               .segment "ZEROPAGE"
00001Er 1  xx               heroXCoordinate: .res 1 ; координата x
00001Fr 1  xx               heroYCoordinate: .res 1 ; координата y
000020r 1               
000020r 1  xx               buttons: .res 1 ; кнопочки
000021r 1               
000021r 1  xx               lifes: .res 1 ; жизни
000022r 1               
000022r 1  xx               mapLoByte: .res 1
000023r 1  xx               mapHiByte: .res 1
000024r 1  xx               scroolX: .res 1
000025r 1  xx               loopLoadBackOutside: .res 1;
000026r 1  xx               loopLoadBackInside: .res 1;
000027r 1  xx               ppuHB: .res 1;
000028r 1  xx               ppuLB: .res 1;
000029r 1  xx               flagStopLoad: .res 1;
00002Ar 1  xx               tmp: .res 1;
00002Br 1               
00002Br 1  xx               colLow: .res 1;
00002Cr 1  xx               colHig: .res 1;
00002Dr 1  xx               sourceLow: .res 1;
00002Er 1  xx               sourceHig: .res 1;
00002Fr 1  xx               columnNumber: .res 1;
000030r 1               
000030r 1  xx               scrollPosition: .res 1;
000031r 1  xx               nameTable: .res 1;
000032r 1  xx               screenCount: .res 1;
000033r 1               
000033r 1  xx               lowMapByte: .res 1;
000034r 1  xx               highMapByte: .res 1;
000035r 1               
000035r 1  xx               joyState: .res 1;
000036r 1  xx               collisionY: .res 1;
000037r 1  xx               collisionX: .res 1;
000038r 1               
000038r 1  xx               isRightCollision: .res 1;
000039r 1               
000039r 1  xx               tScroll: .res 1;
00003Ar 1  xx               currentStage: .res 1;
00003Br 1               
00003Br 1  xx               lAB: .res 1;
00003Cr 1  xx               hAB: .res 1;
00003Dr 1               
00003Dr 1  xx               zacumulator: .res 1;
00003Er 1  xx               dinamicalCollisionMap: .res 1;
00003Fr 1  xx               offsetColumn: .res 1;
000040r 1               
000040r 1  xx               mapTestLo: .res 1;
000041r 1  xx               mapTestHig: .res 1;
000042r 1  xx               mapByteOffset: .res 1;
000043r 1               
000043r 1  xx               scroolCounter: .res 1;
000044r 1               
000044r 1  xx               stageStates: .res 1;
000045r 1               
000045r 1  xx               heroDirection: .res 1 ; 01 left 02 right
000046r 1  xx               isHeroWalk: .res 1
000047r 1  xx               isHeroFire: .res 1
000048r 1  xx               isHeroStay: .res 1
000049r 1  xx               lastPositionY: .res 1
00004Ar 1               
00004Ar 1  xx               isLoadedFlags: .res 1
00004Br 1               
00004Br 1               .segment "BSS"
000000r 1               
000000r 1               .segment "RODATA"
0017FBr 1               
0017FBr 1               .segment "CODE"
001107r 1               
001107r 1               
001107r 1               .proc changeSpriteBuffer
001107r 1  A9 00             LDA #$00
001109r 1  8D 03 20          STA $2003     ; set the low byte (00) of the RAM address
00110Cr 1  A9 02             LDA #$02
00110Er 1  8D 14 40          STA $4014
001111r 1               
001111r 1  60                rts
001112r 1               .endproc
001112r 1               
001112r 1               .proc incScrollCounter
001112r 1  E6 rr            INC scrollCounter
001114r 1  60               RTS
001115r 1               .endproc
001115r 1               
001115r 1               .proc nmi_isr
001115r 1  20 rr rr         JSR readJoyPad
001118r 1  A5 rr            LDA stageStates
00111Ar 1  F0 04            BEQ loadStartDisplay
00111Cr 1  C9 01            CMP #01
00111Er 1  F0 06            BEQ loadStageTwo
001120r 1               loadStartDisplay:
001120r 1  20 rr rr         JSR startDisplayState
001123r 1  4C rr rr         JMP return
001126r 1               loadStageTwo:
001126r 1  20 rr rr         JSR stageTwoState
001129r 1               return:
001129r 1  40               RTI
00112Ar 1               .endproc
00112Ar 1               
00112Ar 1               .proc irq_isr
00112Ar 1  40               RTI
00112Br 1               .endproc
00112Br 1               
00112Br 1               .proc reset
00112Br 1  78               SEI
00112Cr 1  A2 00            LDX #0
00112Er 1  8E 00 20         STX $2000   ; обнуляем память
001131r 1  8E 01 20         STX $2001   ; выключаем рендер
001134r 1  8E 10 40         STX $4010 ; отключаем DMC
001137r 1  CA               DEX     ; X = $FF
001138r 1  9A               TXS     ; Стэк равен = $FF
001139r 1  2C 02 20         : BIT $2002
00113Cr 1  10 FB            BPL :-
00113Er 1                   ; reset mapper
00113Er 1  20 rr rr         JSR resetMapperProcedure
001141r 1  20 rr rr         JSR setHeroVar
001144r 1  20 rr rr         JSR setStageVar
001147r 1                   ; load display start
001147r 1  20 rr rr         JSR loadDisplayStart
00114Ar 1               ;    JSR resetStageTwo
00114Ar 1               ;
00114Ar 1               
00114Ar 1  20 rr rr         JSR enableNMI
00114Dr 1  20 rr rr         JSR enableRender
001150r 1               
001150r 1               mainLoop:
001150r 1  4C rr rr       JMP mainLoop
001153r 1               
001153r 1  40             RTI
001154r 1               .endproc
001154r 1               
001154r 1               .segment "CODE_1"
000000r 1               .segment "CODE_2"
00047Fr 1               .segment "CODE_3"
0010A0r 1               .segment "CODE_4"
000000r 1               .segment "CODE_5"
000000r 1               .segment "CODE_6"
000000r 1               .segment "CODE_7"
000000r 1               
000000r 1               
000000r 1               ; =====	CHR-ROM Pattern Tables =================================================
000000r 1               
000000r 1               ; ----- Pattern Table 0 --------------------------------------------------------
000000r 1               
000000r 1               .segment "CHR0"
000000r 1  00 07 0F 0F  	.incbin "test_1_1.chr"
000004r 1  0F 0F 07 03  
000008r 1  07 08 10 10  
001000r 1               .segment "CHR1"
000000r 1  00 00 00 00      .incbin "test_1_2.chr"
000004r 1  00 00 00 00  
000008r 1  FF FF FF FF  
001000r 1               .segment "CHR2"
000000r 1  00 07 0F 0F  	.incbin "test_2_1.chr"
000004r 1  0F 0F 07 03  
000008r 1  07 08 10 10  
001000r 1               .segment "CHR3"
000000r 1  00 00 00 00      .incbin "test_2_2.chr"
000004r 1  00 00 00 00  
000008r 1  FF FF FF FF  
001000r 1               .segment "CHR4"
000000r 1  00 00 00 00      .incbin "test_3_1.chr" ; start display chr
000004r 1  00 00 00 00  
000008r 1  00 00 00 00  
001000r 1               .segment "CHR5"
000000r 1  00 00 07 0D      .incbin "test_3_2.chr" ; start display chr
000004r 1  09 01 01 02  
000008r 1  00 00 00 00  
001000r 1               .segment "CHR_1"
001000r 1               
