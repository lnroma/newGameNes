.segment "ZEROPAGE"
   isGravity: .res 1
   xOffset: .res 1
   nameTableLowByte: .res 1
   nameTableHighByte: .res 1
   collisionTmp: .res 1
   currentAdc: .res 1
   currentNameTable: .res 1
   fakeXCoordinate: .res 1
   collideDetection: .res 1 ; remove in to be

   collideFlag: .res 1

.segment "RODATA"

bit_mask:
  .byt %10000000
  .byt %01000000
  .byt %00100000
  .byt %00010000
  .byt %00001000
  .byt %00000100
  .byt %00000010
  .byt %00000001

map_level_1_collision_map_1_first:
  .byt %00000000, %00000000, %00111111, %11111000 ; 1 левая часть экрана
  .byt %00000000, %00000000, %00111111, %11111000 ; 2
  .byt %00000000, %00000000, %00111111, %11111000 ; 3
  .byt %00000000, %00000000, %00111111, %11111000 ; 5
  .byt %00000000, %00000000, %00111111, %11111000 ; 6
  .byt %00000000, %00000000, %00111111, %11111000 ; 7
  .byt %00000000, %00000000, %00111111, %11111000 ; 8
  .byt %00000000, %00000000, %00111111, %11111000 ; 9
  .byt %00000000, %00000000, %00111111, %11111000 ; 10
  .byt %00000000, %00000000, %00111111, %11111000 ; 11
  .byt %00000000, %00000000, %00111111, %11111000 ; 12
  .byt %00000000, %00000000, %00111111, %11111000 ; 13
  .byt %00000000, %00000000, %00111111, %11111000 ; 13
  .byt %00000000, %00000000, %00111111, %11111000 ; 14
  .byt %00000000, %00000000, %00111111, %11111000 ; 15
  .byt %00000000, %00000000, %00111111, %11111000 ; 16
  .byt %00000000, %00000000, %00111111, %11111000 ; 17
  .byt %00000000, %00000000, %00111111, %11111000 ; 18
  .byt %00000000, %00000000, %00111111, %11111000 ; 19
  .byt %00000000, %00000000, %00111111, %11111000 ; 20
  .byt %00000000, %00000000, %00111111, %11111000 ; 21
  .byt %00000000, %00000000, %00111111, %11111000 ; 22
  .byt %00000000, %00000000, %00111111, %11111000 ; 23
  .byt %00000000, %00000000, %00111111, %11111000 ; 24
  .byt %00000000, %00000000, %00111111, %11111000 ; 25
  .byt %00000000, %00000000, %00111111, %11111000 ; 26
  .byt %00000000, %00000000, %00111111, %11111000 ; 27
  .byt %00000000, %00000000, %00111111, %11111000 ; 28
  .byt %00000000, %00000000, %00111111, %11111000 ; 29
  .byt %00000000, %00000000, %00111111, %11111000 ; 30
  .byt %00000000, %00000000, %00111111, %11111000 ; 31
  .byt %00000000, %00000000, %00111111, %11111000 ; 32 правая часть экрана
  .byt %00000000, %00000000, %00111111, %11111000 ; 1
  .byt %00000000, %00000000, %00111111, %11111000 ; 2
  .byt %00000000, %00000000, %00111111, %10111000 ; 3
  .byt %00000000, %00000000, %00111111, %10111000 ; 5
  .byt %00000000, %00000000, %00111111, %10111000 ; 6
  .byt %00000000, %00000000, %00111111, %10111000 ; 7
  .byt %00000000, %00000000, %00111111, %11111000 ; 8
  .byt %00000000, %00000000, %00111111, %11111000 ; 9
  .byt %00000000, %00000000, %00111111, %11111000 ; 10
  .byt %00000000, %00000000, %00111111, %11111000 ; 11
  .byt %00000000, %00000000, %00111111, %11111000 ; 12
  .byt %00000000, %00000000, %00111111, %11111000 ; 13
  .byt %00000000, %00000000, %00111111, %11111000 ; 13
  .byt %00000000, %00000000, %00111111, %11111000 ; 14
  .byt %00000000, %00000000, %00111111, %11111000 ; 15
  .byt %00000000, %00000000, %00111111, %11111000 ; 16
  .byt %00000000, %00000000, %00111111, %11111000 ; 17
  .byt %00000000, %00000000, %00111111, %11111000 ; 18
  .byt %00000000, %00000000, %00111111, %11111000 ; 19
  .byt %00000000, %00000000, %00111111, %11111000 ; 20
  .byt %00000000, %00000000, %00111111, %11111000 ; 21
  .byt %00000000, %00000000, %00111111, %11111000 ; 22
  .byt %00000000, %00000000, %00111111, %11111000 ; 23
  .byt %00000000, %00000000, %00111111, %11111000 ; 24
  .byt %00000000, %00000000, %00111111, %11111000 ; 25
  .byt %00000000, %00000000, %00111111, %11111000 ; 26
  .byt %00000000, %00000000, %00111111, %11111000 ; 27
  .byt %00000000, %00000000, %00111111, %11111000 ; 28
  .byt %00000000, %00000000, %00111111, %11111000 ; 29
  .byt %00000000, %00000000, %00111111, %11111000 ; 30
  .byt %00000000, %00000000, %00111111, %11111000 ; 31
  .byt %00000000, %00000000, %00111111, %11111000 ; 32

map_level_1_collision_map_1_second:
  .byt %00000000, %00000000, %00011111, %11110000 ; 1 левая часть экрана
  .byt %00000000, %00000000, %00011111, %11110000 ; 2
  .byt %00000000, %00000000, %00011111, %11110000 ; 3
  .byt %00000000, %00000000, %00011111, %11110000 ; 5
  .byt %00000000, %00000000, %00011111, %11110000 ; 6
  .byt %00000000, %00000000, %00011111, %11110000 ; 7
  .byt %00000000, %00000000, %00011111, %11110000 ; 8
  .byt %00000000, %00000000, %00011111, %11110000 ; 9
  .byt %00000000, %00000000, %00011111, %11110000 ; 10
  .byt %00000000, %00000000, %00011111, %11110000 ; 11
  .byt %00000000, %00000000, %00011111, %11110000 ; 12
  .byt %00000000, %00000000, %00011111, %11110000 ; 13
  .byt %00000000, %00000000, %00011111, %11110000 ; 13
  .byt %00000000, %00000000, %00011111, %11110000 ; 14
  .byt %00000000, %00000000, %00011111, %11110000 ; 15
  .byt %00000000, %00000000, %00011111, %11110000 ; 16
  .byt %00000000, %00000000, %00011111, %11110000 ; 17
  .byt %00000000, %00000000, %00011111, %11110000 ; 18
  .byt %00000000, %00000000, %00011111, %11110000 ; 19
  .byt %00000000, %00000000, %00011111, %11110000 ; 20
  .byt %00000000, %00000000, %00011111, %11110000 ; 21
  .byt %00000000, %00000000, %00011111, %11110000 ; 22
  .byt %00000000, %00000000, %00011111, %11110000 ; 23
  .byt %00000000, %00000000, %00011111, %11110000 ; 24
  .byt %00000000, %00000000, %00011111, %11110000 ; 25
  .byt %00000000, %00000000, %00011111, %11110000 ; 26
  .byt %00000000, %00000000, %00011111, %11110000 ; 27
  .byt %00000000, %00000000, %00011111, %11110000 ; 28
  .byt %00000000, %00000000, %00011111, %11110000 ; 29
  .byt %00000000, %00000000, %00011111, %11110000 ; 30
  .byt %00000000, %00000000, %00011111, %11110000 ; 31
  .byt %00000000, %00000000, %00011111, %11110000 ; 32 правая часть экрана
  .byt %00000000, %00000000, %00011111, %11110000 ; 1
  .byt %00000000, %00000000, %00011111, %11110000 ; 2
  .byt %00000000, %00000000, %00011111, %10110000 ; 3
  .byt %00000000, %00000000, %00011111, %10110000 ; 5
  .byt %00000000, %00000000, %00011111, %10110000 ; 6
  .byt %00000000, %00000000, %00011111, %10110000 ; 7
  .byt %00000000, %00000000, %00011111, %11110000 ; 8
  .byt %00000000, %00000000, %00011111, %11110000 ; 9
  .byt %00000000, %00000000, %00011111, %11110000 ; 10
  .byt %00000000, %00000000, %00011111, %11110000 ; 11
  .byt %00000000, %00000000, %00011111, %11110000 ; 12
  .byt %00000000, %00000000, %00011111, %11110000 ; 13
  .byt %00000000, %00000000, %00011111, %11110000 ; 13
  .byt %00000000, %00000000, %00011111, %11110000 ; 14
  .byt %00000000, %00000000, %00011111, %11110000 ; 15
  .byt %00000000, %00000000, %00011111, %11110000 ; 16
  .byt %00000000, %00000000, %00011111, %11110000 ; 17
  .byt %00000000, %00000000, %00011111, %11110000 ; 18
  .byt %00000000, %00000000, %00011111, %11110000 ; 19
  .byt %00000000, %00000000, %00011111, %11110000 ; 20
  .byt %00000000, %00000000, %00011111, %11110000 ; 21
  .byt %00000000, %00000000, %00011111, %11110000 ; 22
  .byt %00000000, %00000000, %00011111, %11110000 ; 23
  .byt %00000000, %00000000, %00011111, %11110000 ; 24
  .byt %00000000, %00000000, %00011111, %11110000 ; 25
  .byt %00000000, %00000000, %00011111, %11110000 ; 26
  .byt %00000000, %00000000, %00011111, %11110000 ; 27
  .byt %00000000, %00000000, %00011111, %11110000 ; 28
  .byt %00000000, %00000000, %00011111, %11110000 ; 29
  .byt %00000000, %00000000, %00011111, %11110000 ; 30
  .byt %00000000, %00000000, %00011111, %11110000 ; 31
  .byt %00000000, %00000000, %00011111, %11110000 ; 32

.segment "CODE"
    COLLIDE_WATER =     %00000001
    COLLIDE_PLACE =     %00000011
    COLLIDE_BORDER =    %00000010

.proc calculateCollisionMap
    LDA scrollPosition
    AND #%00000111
    BEQ skipCalculate

    INC offsetColumn

  skipCalculate:
    RTS
.endproc

.proc calculateFakeX
    LDA scrollPosition
    CLC
    ADC heroXCoordinate
    STA fakeXCoordinate

    RTS
.endproc

.proc swapCurrentNameTable
    LDA fakeXCoordinate
    CMP #$FF
    :
        RTS
    BNE :-
    swapNameTable:
        LDA currentNameTable
        CMP #$01
        :
            LDA #$00
            STA currentNameTable
        BEQ :-

        :
            LDA #$01
            STA currentNameTable
        BEQ :-


    RTS
.endproc

.proc calculateNametable
    LDA currentNameTable
    CMP #$01
    :
        LDA #$00
        STA currentAdc
        RTS
    BEQ :-

    LDA #$04
    STA currentAdc
    RTS
.endproc

.proc collisionOnMapBack
; x  = 9 ; y = 15 ; address 21ED
    ; low byt in nametable
        JSR calculateFakeX
        JSR swapCurrentNameTable
        JSR calculateNametable
        LDA heroYCoordinate
        CLC
        ADC #24
        LSR
        LSR
        LSR
        LSR
        LSR
        LSR
        CLC
        ADC #$20
        ADC currentAdc
        TAX

    ; calculate low byte
       lda fakeXCoordinate
       lsr
       lsr
       lsr
       clc
       adc collisionTmp
       sta collisionTmp
       ; x / 8

       ; high byt in nametable
       LDA heroYCoordinate
       CLC
       ADC #24
       lsr
       lsr
       lsr
       AND #7
       asl
       asl
       asl
       asl
       asl
       clc
       adc collisionTmp
       tay

      LDA $2002
      STX $2006
      STY $2006
      LDA $2007
    ; check sprite in coordinate
;    CMP #$00
;    BEQ collideObjectYes
;    CMP #$23
;    BEQ collideObjectYes
    CMP #$29
    BEQ collideObjectYes
    CMP #$2A
    BEQ collideObjectYes
    BNE collideObjectNo

    collideObjectNo:
        JSR collideNo

        RTS
    collideObjectYes:
        JSR collideYes

        RTS

.endproc

.proc collideNo
    LDA #01
    STA isGravity
;    inc heroYCoordinate
;    INC heroYCoordinate
    RTS
.endproc

.proc collideYes
    LDA #00
    STA isGravity
    STA jumpHeight
    STA isJump
    RTS
.endproc

.proc collisionOnMap
    JSR calculateCollisionMap
    LDA offsetColumn
    ASL 
    ASL
    TAY

    LDA heroYCoordinate
    CLC 
    ADC #18
    LSR
    LSR
    LSR
    LSR
    LSR
    LSR
    CLC
    STA zacumulator

    LDA heroXCoordinate
    LSR
    LSR
    LSR
    ASL
    ASL
    CLC
    ADC zacumulator
    TAY

    LDA heroYCoordinate
    CLC
    ADC #18
    LSR
    LSR
    LSR
    AND #7
    TAX

    LDA scrollPosition
    LSR
    LSR
    LSR
    ASL
    ASL
    STA mapByteOffset

    TYA
    CLC
    ADC mapByteOffset
    TAY

    LDA map_level_1_collision_map_1_first, y
    AND bit_mask, x
    BEQ firstBitZero
    BNE firstBitNotZero
firstBitZero:
    LDA #%00000000
    STA collideFlag

    JMP secondFlagDetect
firstBitNotZero:
    LDA #%00000001
    STA collideFlag

    JMP secondFlagDetect
secondFlagDetect:
    LDA map_level_1_collision_map_1_second, y
    AND bit_mask, x
    BEQ secondBitZero
    BNE secondBitNotZero

secondBitZero:
    RTS
secondBitNotZero:
    LDA collideFlag
    EOR #%00000010
    RTS
.endproc
